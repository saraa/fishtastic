<Type Name="InterpType" FullName="Gdk.InterpType">
  <TypeSignature Language="C#" Maintainer="auto" Value="public enum InterpType" />
  <AssemblyInfo>
    <AssemblyName>gdk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Interpolation mode for scaling operations.</summary>
    <remarks>Bilinear is the best balance in most cases.
Nearest provides faster (and low quality) scaling, while Hyper is slow but high-quality. 
</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>GLib.GType(typeof(Gdk.InterpTypeGType))</AttributeName>
    </Attribute>
  </Attributes>
  <Members>
    <Member MemberName="Nearest">
      <MemberSignature Language="C#" Value="Nearest" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.InterpType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Nearest neighbor sampling; this is the fastest and lowest quality mode. Quality is normally unacceptable when scaling down, but may be OK when scaling up.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tiles">
      <MemberSignature Language="C#" Value="Tiles" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.InterpType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is an accurate simulation of the PostScript image operator without any interpolation enabled. Each pixel is rendered as a tiny parallelogram of solid color, the edges of which are implemented with antialiasing. It resembles nearest neighbor for enlargement, and bilinear for reduction.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bilinear">
      <MemberSignature Language="C#" Value="Bilinear" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.InterpType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Best quality/speed balance; use this mode by default. Bilinear interpolation. For enlargement, it is equivalent to point-sampling the ideal bilinear-interpolated image. For reduction, it is equivalent to laying down small tiles and integrating over the coverage area.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyper">
      <MemberSignature Language="C#" Value="Hyper" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.InterpType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is the slowest and highest quality reconstruction function. It is derived from the hyperbolic filters in Wolberg's "Digital Image Warping", and is formally defined as the hyperbolic-filter sampling the ideal hyperbolic-filter interpolated image (the filter is designed to be idempotent for 1:1 pixel mapping).</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
