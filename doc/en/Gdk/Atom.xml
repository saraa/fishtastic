<Type Name="Atom" FullName="Gdk.Atom">
  <TypeSignature Language="C#" Maintainer="John Luke" Value="public class Atom : GLib.Opaque" />
  <AssemblyInfo>
    <AssemblyName>gdk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>An opaque type representing a string as an index into a table of strings on the X server.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>GLib.Opaque</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    <Member MemberName="Intern">
      <MemberSignature Language="C#" Value="public static Gdk.Atom Intern (string atom_name, bool only_if_exists);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Atom</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="atom_name" Type="System.String" />
        <Parameter Name="only_if_exists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Finds or creates an <see cref="T:Gdk.Atom" /> corresponding to a given string.</summary>
        <param name="atom_name">an object of type <see cref="T:System.String" /></param>
        <param name="only_if_exists">an object of type <see cref="T:System.Boolean" /></param>
        <returns>an object of type <see cref="T:Gdk.Atom" /></returns>
        <remarks>If <paramref name="only_if_exists" /> is <see langword="true" />, do not create a new atom, but just return the atom if it already exists.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Atom (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines the string corresponding to an atom.</summary>
        <value>A newly-allocated string containing the string corresponding to the atom.</value>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static string op_Implicit (Gdk.Atom atom);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="atom" Type="Gdk.Atom" />
      </Parameters>
      <Docs>
        <param name="atom">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
