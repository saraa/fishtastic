<Type Name="AspectFrame" FullName="Gtk.AspectFrame">
  <TypeSignature Language="C#" Value="public class AspectFrame : Gtk.Frame, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="Lee Mallabone" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>A frame that constrains its child to a particular aspect ratio.</summary>
    <remarks>
      <para>The AspectFrame is useful when you want pack a widget so that it can resize but always retains the same aspect ratio. For instance, one might be drawing a small preview of a larger image. AspectFrame derives from <see cref="T:Gtk.Frame" />, so it can draw a label and a frame around the child. The frame will be "shrink-wrapped" to the size of the child.</para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Frame</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (float xalign, float yalign, float ratio, bool obey_child);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xalign" Type="System.Single" />
        <Parameter Name="yalign" Type="System.Single" />
        <Parameter Name="ratio" Type="System.Single" />
        <Parameter Name="obey_child" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Set the size and alignment properties of this AspectFrame.</summary>
        <param name="xalign">Horizontal alignment of the child within the allocation of the AspectFrame.</param>
        <param name="yalign">Vertical alignment of the child within the allocation of the AspectFrame.</param>
        <param name="ratio">The desired aspect ratio.</param>
        <param name="obey_child">If <see langword="true" />, ratio is ignored, and the aspect ratio is taken from the requistion of the child.</param>
        <remarks>
          <para>Alignment values range from 0.0 (left/top aligned) to 1.0 (right/bottom aligned).</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected override void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspectFrame (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of AspectFrame, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AspectFrame (string label, float xalign, float yalign, float ratio, bool obey_child);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="xalign" Type="System.Single" />
        <Parameter Name="yalign" Type="System.Single" />
        <Parameter Name="ratio" Type="System.Single" />
        <Parameter Name="obey_child" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>The main way to construct a new AspectFrame.</summary>
        <param name="label">A title for the frame, can be <see langword="null" />.</param>
        <param name="xalign">Horizontal alignment of the child within the allocation of the AspectFrame.</param>
        <param name="yalign">Vertical alignment of the child within the allocation of the AspectFrame.</param>
        <param name="ratio">The desired aspect ratio.</param>
        <param name="obey_child">If <see langword="true" />, ratio is ignored, and the aspect ratio is taken from the requistion of the child.</param>
        <returns>A new AspectFrame</returns>
        <remarks>
          <para>Alignment values range from 0.0 (left/top aligned) to 1.0 (right/bottom aligned).</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AspectFrame ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Internal constructor</summary>
        <returns />
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The GLib Type for Gtk.AspectFrame</summary>
        <returns>The GLib Type for the Gtk.AspectFrame class.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Yalign">
      <MemberSignature Language="C#" Value="public float Yalign { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Vertical alignment of the child widget in the AspectFrame.</summary>
        <param name="value">A value between 0.0 (top aligned) and 1.0 (bottom aligned).</param>
        <returns>A value between 0.0 and 1.0.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Xalign">
      <MemberSignature Language="C#" Value="public float Xalign { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Horiontal alignment of the child widget in the AspectFrame.</summary>
        <param name="value">A value between 0.0 (left aligned) and 1.0 (right aligned).</param>
        <returns>A value between 0.0 and 1.0.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Ratio">
      <MemberSignature Language="C#" Value="public float Ratio { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>The aspect ratio of the child widget's size.</summary>
        <param name="value">A ratio between 0.0 and 1.0</param>
        <returns>The aspect ratio between 0.0 and 1.0 representing the child's size constraints.</returns>
        <remarks>
          <para>Setting this ratio is ignored if <see cref="P:Gtk.AspectFrame.ObeyChild" /> is set to <see langword="true" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObeyChild">
      <MemberSignature Language="C#" Value="public bool ObeyChild { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Allow the frame to use its child widget's aspect ratio.</summary>
        <param name="value">
          <see langword="true" /> for the AspectFrame to use the child widget's size ratio, <see langword="false" /> for <see cref="P:Gtk.AspectFrame.Ratio" /> to control the ratio.</param>
        <returns>The current size ratio of the child widget</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AspectFrame (GLib.Type gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.Type" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="gtype">GLib type for the type</param>
        <returns>Creates a new instance of AspectFrame, using the GLib-provided type</returns>
        <remarks>
          <para>This is a constructor used by derivative types of <see cref="T:Gtk.AspectFrame" /> that would have their own GLib type assigned to it.  This is not typically used by C# code.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>