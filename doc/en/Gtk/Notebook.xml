<Type Name="Notebook" FullName="Gtk.Notebook">
  <TypeSignature Language="C#" Value="public class Notebook : Gtk.Container, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="miguel" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Can only be invoked by the thread running Gtk
  code.</ThreadSafetyStatement>
  <Docs>
    <summary>Notebook widget container</summary>
    <remarks>
      <para>
	The Notebook widget is a <see cref="T:Gtk.Container"/> whose
	children are pages that can be switched between using tabs
	along the edge.  Tabs are typically <see cref="T:Gtk.Label"/>
	widgets, but can be any other widget.
      </para>
      <para>
	There are many configuration options for Notebooks. Among
	other things, you can choose on which edge the tabs appear
	(The <see cref="P:Gtk.Notebook.TabPos"/> property), whether, if there
	are too many tabs to fit the notebook should be made bigger
	or scrolling arrows added (The <see
	cref="P:Gtk.Notebook.Scrollable"/> property),
	and whether there will be a popup menu allowing the users to
	switch pages (The <see cref="P:Gtk.Notebook.EnablePopup"/> property).
      </para>
      <para>
	Notebooks without tabs, can be used as containers to quickly
	switch between different groups of information to reduce
	any flicker caused by widget relayout by the application.
      </para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Container</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="TabGetType">
      <MemberSignature Language="C#" Value="public static uint TabGetType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'uint'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTabLabelText">
      <MemberSignature Language="C#" Value="public string GetTabLabelText (Gtk.Widget child);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>Returns the label widget for a given widget.</summary>
        <param name="child">The widget in the page.</param>
        <returns>The tab label widget, or <see langword="null"/> if
        not found.</returns>
        <remarks>
	  <para>
	    Returns the tab label widget for the page child.  <see
	    langword="null"/> is returned if the child widget is not
	    in the notebook or if no tab label has specifically been
	    set for the <paramref name="child"/>.
	  </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMenuLabelText">
      <MemberSignature Language="C#" Value="public string GetMenuLabelText (Gtk.Widget child);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>Returns the label caption for a given widget.</summary>
        <param name="child">The child widget in the page</param>
        <returns>
	  <para>
	    The text of the tab label, or <see langword="null"/> if
	    the widget does not have a menu label other than the
	    default menu label, or the menu label widget is not a <see
	    cref="T:Gtk.Label"/>. 
	    </para>
	</returns>
        <remarks>
	  <para>
	    Retrieves the text of the menu label for the page
	    containing <paramref name="child"/>.
	  </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopupEnable">
      <MemberSignature Language="C#" Value="public void PopupEnable ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enables the page-selection popup.</summary>
        <remarks>
	  <para>
	    Enables the popup menu: if the user clicks with the right
	    mouse button on the bookmarks, a menu with all the pages
	    will be popped up.
	  </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTabLabelText">
      <MemberSignature Language="C#" Value="public void SetTabLabelText (Gtk.Widget child, string tab_text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="tab_text" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Sets the label for the page containing a widget</summary>
        <param name="child">The child widget whose label will be changed</param>
        <param name="tab_text">The new caption for the tab.</param>
        <remarks>
	  <para>
	    Creates a new label and sets it as the tab label for the
	    page containing <paramref name="child"/>.
	  </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevPage">
      <MemberSignature Language="C#" Value="public void PrevPage ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Switches to the previous page.</summary>
        <remarks>
	  <para>
	    Switches to the previous page. Nothing happens if the
	    current page is the first page.
	  </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopupDisable">
      <MemberSignature Language="C#" Value="public void PopupDisable ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enables the page-selection popup.</summary>
        <remarks>
	  <para>
	    Disables the popup menu.  Inverse operation of <see cref="M:Gtk.Notebook.PopupEnable()"/>
	  </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePage">
      <MemberSignature Language="C#" Value="public void RemovePage (int page_num);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page_num" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Removes a page.</summary>
        <param name="page_num">The page number to remove starting from
        zero.  You can use minus one to remove the last page.</param>
        <remarks>
	  <para>
	    Removes a page from the notebook given its index in the
	    notebook.
	  </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPage">
      <MemberSignature Language="C#" Value="public void AppendPage (Gtk.Widget child, Gtk.Widget tab_label);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="tab_label" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>Appends a page.</summary>
        <param name="child">The <see cref="T:Gtk.Widget"/> to use as the contents of the page. </param>

        <param name="tab_label">The <see cref="T:Gtk.Widget"/> to be
        used as the label for the page, or <see langword="null"/> to
        use the default label, 'page N'.</param>
	<remarks>
	  Appends a page to notebook.  The tab widget is the <paramref
	  name="tab_label"/> and the content is <paramref
	  name="child"/>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPageMenu">
      <MemberSignature Language="C#" Value="public void AppendPageMenu (Gtk.Widget child, Gtk.Widget tab_label, Gtk.Widget menu_label);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="tab_label" Type="Gtk.Widget" />
        <Parameter Name="menu_label" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>Appends a page, with a custom popup-label.</summary>
        <param name="child">The <see cref="T:Gtk.Widget"/> to use as
        the contents of the page. </param> <param name="tab_label">The
        <see cref="T:Gtk.Widget"/> to be used as the label for the
        page, or <see langword="null"/> to use the default label,
        'page N'.</param> <param name="menu_label">The widget to use
        as a label for the page-switch menu, if its enabled.  If <see
        langword="null"/> is passed, and <paramref name="tab_label"/>
        is a <see cref="T:Gtk.Label"/> or <see langword="null"/>, then
        the menu label will be a newly created label with the same
        text as <paramref name="tab_label"/>; If <paramref
        name="tab_label"/> is not a <see cref="T:Gtk.Label"/>,
        <pararef name="menu_label"/> must be specified if the
        page-switch menu is to be used.
	</param>
        <remarks><para>Appends a page to notebook, specifying the
        widget to use as the label in the popup menu.</para></remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertPage">
      <MemberSignature Language="C#" Value="public void InsertPage (Gtk.Widget child, Gtk.Widget tab_label, int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="tab_label" Type="Gtk.Widget" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Inserts a page into the notebook</summary>

	<param name="child">The <see cref="T:Gtk.Widget"/> to use as
        the contents of the page.</param>

	<param name="tab_label">
	  The <see cref="T:Gtk.Widget"/> to be used as the label for
	  the page, or <see langword="null"/> to use the default
	  label, 'page N'.
	</param>
	
	<param name="position">
	  The index (starting at 0) at which to insert the page, or -1
	  to append the page after all other pages.
	</param>

	<remarks>
	  <para>
	    Insert a page into the notebook at the given position
	  </para>
	</remarks>

      </Docs>
    </Member>
    <Member MemberName="InsertPageMenu">
      <MemberSignature Language="C#" Value="public void InsertPageMenu
      (Gtk.Widget child, Gtk.Widget tab_label, Gtk.Widget menu_label,
      int position);" /> <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="tab_label" Type="Gtk.Widget" />
        <Parameter Name="menu_label" Type="Gtk.Widget" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="child">To be added: an object of type 'Gtk.Widget'</param>
        <param name="tab_label">To be added: an object of type 'Gtk.Widget'</param>
        <param name="menu_label">To be added: an object of type 'Gtk.Widget'</param>
        <param name="position">To be added: an object of type 'int'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMenuLabel">
      <MemberSignature Language="C#" Value="public Gtk.Widget GetMenuLabel (Gtk.Widget child);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="child">To be added: an object of type 'Gtk.Widget'</param>
        <returns>To be added: an object of type 'Gtk.Widget'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReorderChild">
      <MemberSignature Language="C#" Value="public void ReorderChild (Gtk.Widget child, int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Changes the position of a widget in the notebook.</summary>
        <param name="child">The widget to move.</param>
        <param name="position">The new position, or -1 to move to the end</param>
        <remarks>
	  <para>
	    Reorders the page containing <paramref name="child"/>, so
	    that it appears in position position. If position is greater
	    than or equal to the number of children in the list or
	    negative, <paramref name="child"/> will be moved to the end
	    of the list.
	  </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTabLabel">
      <MemberSignature Language="C#" Value="public void SetTabLabel
      (Gtk.Widget child, Gtk.Widget tab_label);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="tab_label" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="child">To be added: an object of type 'Gtk.Widget'</param>
        <param name="tab_label">To be added: an object of type 'Gtk.Widget'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryTabLabelPacking">
      <MemberSignature Language="C#" Value="public void QueryTabLabelPacking (Gtk.Widget child, bool expand, bool fill, Gtk.PackType pack_type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="expand" Type="System.Boolean" />
        <Parameter Name="fill" Type="System.Boolean" />
        <Parameter Name="pack_type" Type="Gtk.PackType" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="child">To be added: an object of type 'Gtk.Widget'</param>
        <param name="expand">To be added: an object of type 'bool'</param>
        <param name="fill">To be added: an object of type 'bool'</param>
        <param name="pack_type">To be added: an object of type 'Gtk.PackType'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTabLabel">
      <MemberSignature Language="C#" Value="public Gtk.Widget GetTabLabel (Gtk.Widget child);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="child">To be added: an object of type 'Gtk.Widget'</param>
        <returns>To be added: an object of type 'Gtk.Widget'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNthPage">
      <MemberSignature Language="C#" Value="public Gtk.Widget GetNthPage (int page_num);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page_num" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="page_num">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'Gtk.Widget'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMenuLabelText">
      <MemberSignature Language="C#" Value="public void SetMenuLabelText (Gtk.Widget child, string menu_text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="menu_text" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="child">To be added: an object of type 'Gtk.Widget'</param>
        <param name="menu_text">To be added: an object of type 'string'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependPage">
      <MemberSignature Language="C#" Value="public void PrependPage (Gtk.Widget child, Gtk.Widget tab_label);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="tab_label" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="child">To be added: an object of type 'Gtk.Widget'</param>
        <param name="tab_label">To be added: an object of type 'Gtk.Widget'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextPage">
      <MemberSignature Language="C#" Value="public void NextPage ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependPageMenu">
      <MemberSignature Language="C#" Value="public void PrependPageMenu (Gtk.Widget child, Gtk.Widget tab_label, Gtk.Widget menu_label);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="tab_label" Type="Gtk.Widget" />
        <Parameter Name="menu_label" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="child">To be added: an object of type 'Gtk.Widget'</param>
        <param name="tab_label">To be added: an object of type 'Gtk.Widget'</param>
        <param name="menu_label">To be added: an object of type 'Gtk.Widget'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMenuLabel">
      <MemberSignature Language="C#" Value="public void SetMenuLabel (Gtk.Widget child, Gtk.Widget menu_label);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="menu_label" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="child">To be added: an object of type 'Gtk.Widget'</param>
        <param name="menu_label">To be added: an object of type 'Gtk.Widget'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTabLabelPacking">
      <MemberSignature Language="C#" Value="public void SetTabLabelPacking (Gtk.Widget child, bool expand, bool fill, Gtk.PackType pack_type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="expand" Type="System.Boolean" />
        <Parameter Name="fill" Type="System.Boolean" />
        <Parameter Name="pack_type" Type="Gtk.PackType" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="child">To be added: an object of type 'Gtk.Widget'</param>
        <param name="expand">To be added: an object of type 'bool'</param>
        <param name="fill">To be added: an object of type 'bool'</param>
        <param name="pack_type">To be added: an object of type 'Gtk.PackType'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected virtual void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Notebook (uint gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="gtype">To be added: an object of type 'uint'</param>
        <returns>To be added: an object of type 'Gtk.Notebook'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Notebook (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="raw">To be added: an object of type 'IntPtr'</param>
        <returns>To be added: an object of type 'Gtk.Notebook'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Notebook ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gtk.Notebook'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'uint'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPage">
      <MemberSignature Language="C#" Value="public int CurrentPage { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scrollable">
      <MemberSignature Language="C#" Value="public bool Scrollable { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'bool'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTabs">
      <MemberSignature Language="C#" Value="public bool ShowTabs { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'bool'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowBorder">
      <MemberSignature Language="C#" Value="public bool ShowBorder { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'bool'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabHborder">
      <MemberSignature Language="C#" Value="public uint TabHborder { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'uint'</param>
        <returns>To be added: an object of type 'uint'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Homogeneous">
      <MemberSignature Language="C#" Value="public bool Homogeneous { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'bool'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabVborder">
      <MemberSignature Language="C#" Value="public uint TabVborder { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'uint'</param>
        <returns>To be added: an object of type 'uint'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabBorder">
      <MemberSignature Language="C#" Value="public uint TabBorder { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'uint'</param>
        <returns>To be added: an object of type 'uint'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="public int Page { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabPos">
      <MemberSignature Language="C#" Value="public Gtk.PositionType TabPos { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.PositionType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Gtk.PositionType" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'Gtk.PositionType'</param>
        <returns>To be added: an object of type 'Gtk.PositionType'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePopup">
      <MemberSignature Language="C#" Value="public bool EnablePopup { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'bool'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectPage">
      <MemberSignature Language="C#" Value="public event GtkSharp.SelectPageHandler SelectPage;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SwitchPage">
      <MemberSignature Language="C#" Value="public event GtkSharp.SwitchPageHandler SwitchPage;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Signaled when the page changes</summary>
        <remarks>
	  <para>
	    This signal is raised when the page is changed either by
	    the user or programatically.
	  </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocusOut">
      <MemberSignature Language="C#" Value="public event GtkSharp.MoveFocusOutHandler MoveFocusOut;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Signaled when Focus is being moved out.</summary>
        <remarks>
	  <para>
	    This event is raised before the focus is removed from the
	    current widget
	  </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeCurrentPage">
      <MemberSignature Language="C#" Value="public event GtkSharp.ChangeCurrentPageHandler ChangeCurrentPage;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Signaled when a request is made to change the current
        page</summary>
        <remarks>
	  <para>
	    This event is raised when a request is made to change the
	    current page in the notebook.
	  </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusTab">
      <MemberSignature Language="C#" Value="public event GtkSharp.FocusTabHandler FocusTab;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Signaled when a Tab is focused</summary>
        <remarks>
	  <para>
	    This event is raised when a tab has been focused.
	  </para>
	</remarks>
      </Docs>
    </Member>
  </Members>
</Type>