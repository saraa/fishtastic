<Type Name="FilterLevel" FullName="Art.FilterLevel">
  <TypeSignature Language="C#" Value="public enum FilterLevel" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>art-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.20.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Allows the selection of the required filter level.</summary>
    <remarks>Cubic filtering is missing because hyper is just as fast to implement and slightly better in quality.</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Members>
    <Member MemberName="Nearest">
      <MemberSignature Language="C#" Value="Nearest" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Art.FilterLevel</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Nearest neighbor implementation. Fastest and lowest quality.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tiles">
      <MemberSignature Language="C#" Value="Tiles" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Art.FilterLevel</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Accurate simulation of the PostScript image operator without any interpolation. Each pixed is rendered as a small parallelogra, of solid color, with its edges implemented with antialiasing. It looks like Nearest on enlargement and Bilinear on reduction.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bilinear">
      <MemberSignature Language="C#" Value="Bilinear" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Art.FilterLevel</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Bilinear interpolation. On enlargement its equivalent to point-sampling the ideal bilinear-interpolated image. On reduction, its equivalent to laying down samll tiles and integrating over the coverage area.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyper">
      <MemberSignature Language="C#" Value="Hyper" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Art.FilterLevel</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Slowest and highest quality reconstruction, derived from the hyperbolic filters in Wolberg's "Digital Image Warping". Hyperbolic-filter sampling the ideal hyperbolic-filter interpolated image (its designed to be idempotent for 1:1 pixel mapping).</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
