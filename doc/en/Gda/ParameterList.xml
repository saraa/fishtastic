<Type Name="ParameterList" FullName="Gda.ParameterList">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class ParameterList : GLib.Opaque" />
  <AssemblyInfo>
    <AssemblyName>gda-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>
      <para>
A list of <see cref="T:Gda.Parameter" />.
</para>
    </summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>GLib.Opaque</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public void AddParameter (Gda.Parameter param);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="param" Type="Gda.Parameter" />
      </Parameters>
      <Docs>
        <summary>
          <para>
Adds a new <see cref="T:Gda.Parameter" />.
</para>
        </summary>
        <param name="param">a <see cref="T:Gda.Parameter" /></param>
        <remarks>
          <para>
Note that param is, when calling this function, is owned by the GdaParameterList, so the caller should just forget about it and not try to free the parameter once it's been added to the GdaParameterList.
</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
Clears the parameter list.
</para>
        </summary>
        <remarks>
          <para>
This means removing all <see cref="T:Gda.Parameter" />'s currently being stored in the parameter list.  After calling this method, the parameter list is empty.
</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public Gda.Parameter Find (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gda.Parameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>
          <para>
Gets a <see cref="T:Gda.Parameter" /> from the parameter list given its name.
</para>
        </summary>
        <param name="name">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:Gda.Parameter" />  identified by name, if found; or null if not found.</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Free">
      <MemberSignature Language="C#" Value="public void Free ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
Releases all memory occupied by the object.
</para>
        </summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParameterList (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="raw">a <see cref="T:System.IntPtr" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParameterList ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>
          <para>
Default constructor.
</para>
        </summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Names">
      <MemberSignature Language="C#" Value="public GLib.List Names { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.List</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
Gets the names of all parameters in the parameter list.
</para>
        </summary>
        <value>a <see cref="T:GLib.List" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public uint Length { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
Gets the number of parameters stored in the parameter list.
</para>
        </summary>
        <value>a <see cref="T:System.UInt32" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
