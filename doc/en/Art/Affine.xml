<Type Name="Affine" FullName="Art.Affine">
  <TypeSignature Language="C#" Value="public class Affine" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>art-sharp</AssemblyName>
    <AssemblyPublicKey></AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes />
  <Members>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public static void Rotate (double [] dst, double theta);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Double[]" />
        <Parameter Name="theta" Type="System.Double" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="dst">a <see cref="T:System.Double[]" /></param>
        <param name="theta">a <see cref="T:System.Double" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expansion">
      <MemberSignature Language="C#" Value="public static double Expansion (double [] src);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="src">a <see cref="T:System.Double[]" /></param>
        <returns>a <see cref="T:System.Double" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public static void Identity (double [] dst);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="dst">a <see cref="T:System.Double[]" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flip">
      <MemberSignature Language="C#" Value="public static void Flip (double [] dst_affine, double [] src_affine, int horz, int vert);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst_affine" Type="System.Double[]" />
        <Parameter Name="src_affine" Type="System.Double[]" />
        <Parameter Name="horz" Type="System.Int32" />
        <Parameter Name="vert" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="dst_affine">a <see cref="T:System.Double[]" /></param>
        <param name="src_affine">a <see cref="T:System.Double[]" /></param>
        <param name="horz">a <see cref="T:System.Int32" /></param>
        <param name="vert">a <see cref="T:System.Int32" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToStringArray">
      <MemberSignature Language="C#" Value="public static void ToStringArray (string [] str, double [] src);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String[]" />
        <Parameter Name="src" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="str">a <see cref="T:System.String[]" /></param>
        <param name="src">a <see cref="T:System.Double[]" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public static void Invert (double [] dst_affine, double [] src_affine);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst_affine" Type="System.Double[]" />
        <Parameter Name="src_affine" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="dst_affine">a <see cref="T:System.Double[]" /></param>
        <param name="src_affine">a <see cref="T:System.Double[]" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point">
      <MemberSignature Language="C#" Value="public static void Point (Art.Point dst, Art.Point src, double [] affine);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Art.Point" />
        <Parameter Name="src" Type="Art.Point" />
        <Parameter Name="affine" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="dst">a <see cref="T:Art.Point" /></param>
        <param name="src">a <see cref="T:Art.Point" /></param>
        <param name="affine">a <see cref="T:System.Double[]" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static void Multiply (double [] dst, double [] src1, double [] src2);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Double[]" />
        <Parameter Name="src1" Type="System.Double[]" />
        <Parameter Name="src2" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="dst">a <see cref="T:System.Double[]" /></param>
        <param name="src1">a <see cref="T:System.Double[]" /></param>
        <param name="src2">a <see cref="T:System.Double[]" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shear">
      <MemberSignature Language="C#" Value="public static void Shear (double [] dst, double theta);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Double[]" />
        <Parameter Name="theta" Type="System.Double" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="dst">a <see cref="T:System.Double[]" /></param>
        <param name="theta">a <see cref="T:System.Double" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rectilinear">
      <MemberSignature Language="C#" Value="public static int Rectilinear (double [] src);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="src">a <see cref="T:System.Double[]" /></param>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static int Equal (double [] matrix1, double [] matrix2);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Double[]" />
        <Parameter Name="matrix2" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="matrix1">a <see cref="T:System.Double[]" /></param>
        <param name="matrix2">a <see cref="T:System.Double[]" /></param>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public static void Translate (double [] dst, double tx, double ty);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Double[]" />
        <Parameter Name="tx" Type="System.Double" />
        <Parameter Name="ty" Type="System.Double" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="dst">a <see cref="T:System.Double[]" /></param>
        <param name="tx">a <see cref="T:System.Double" /></param>
        <param name="ty">a <see cref="T:System.Double" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public static void Scale (double [] dst, double sx, double sy);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="System.Double[]" />
        <Parameter Name="sx" Type="System.Double" />
        <Parameter Name="sy" Type="System.Double" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="dst">a <see cref="T:System.Double[]" /></param>
        <param name="sx">a <see cref="T:System.Double" /></param>
        <param name="sy">a <see cref="T:System.Double" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Affine ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Art.Affine" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>