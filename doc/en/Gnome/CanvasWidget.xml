<Type Name="CanvasWidget" FullName="Gnome.CanvasWidget">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class CanvasWidget : Gnome.CanvasItem" />
  <AssemblyInfo>
    <AssemblyName>gnome-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.20.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Widget canvas item</summary>
    <remarks>
      <para>
        A canvas item for placing arbitrary <see cref="T:Gtk.Widget" /> objects onto a
        canvas.
      </para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gnome.CanvasItem</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanvasWidget (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanvasWidget (Gnome.CanvasGroup group);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="group" Type="Gnome.CanvasGroup" />
      </Parameters>
      <Docs>
        <summary>Creates a new Widget container</summary>
        <param name="group">
          The <see cref="T:Gnome.CanvasGroup" /> that this item
          belongs to.
        </param>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>
          Width of widget (units specified by <see cref="P:Gnome.CanvasWidget.SizePixels" /> property).
        </summary>
        <value>the width of the widget</value>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("width")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>
          Height of widget (units specified by <see cref="P:Gnome.CanvasWidget.SizePixels" /> property).
        </summary>
        <value>the height of the widget</value>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("height")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Anchor">
      <MemberSignature Language="C#" Value="public Gtk.AnchorType Anchor { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.AnchorType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Anchor position for widget.</summary>
        <value>anchor position for the widget</value>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("anchor")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Widget">
      <MemberSignature Language="C#" Value="public Gtk.Widget Widget { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The embedded widget</summary>
        <value>the embedded widget</value>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("widget")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="SizePixels">
      <MemberSignature Language="C#" Value="public bool SizePixels { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Whether the widget size is specified in pixels or canvas units.</summary>
        <value>whether the widget size is specified in pixels or canvas units.</value>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("size_pixels")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Y coordinate of anchor point.</summary>
        <value>Y coordinate of anchor point.</value>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("y")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>X coordinate of anchor point.</summary>
        <value>X coordinate of anchor point.</value>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("x")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gnome.CanvasWidget" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CanvasWidget (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CanvasWidget ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
