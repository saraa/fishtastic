//
// Gtk.Dialog.custom - Gtk Dialog class customizations
//
// Author: Duncan Mak  (duncan@ximian.com)
//	   Mike Kestner (mkestner@speakeasy.net)
//
// Copyright (C) 2002 Ximian, Inc. and Mike Kestner 
//
// This code is inserted after the automatically generated code.
//

// Manually wrap until we figure out how to gen ellipses.
[DllImport("libgtk-win32-2.0-0.dll")]
static extern IntPtr gtk_dialog_new_with_buttons (string title, IntPtr i, int flags, IntPtr dummy);
public Dialog (string title, Gtk.Window parent, Gtk.DialogFlags flags) : base(IntPtr.Zero)
{
	if (GetType() != typeof (Dialog))
		throw new InvalidOperationException ("Can't chain to this constructor from subclasses.");
	Raw = gtk_dialog_new_with_buttons (title, parent.Handle, (int) flags, IntPtr.Zero);
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_dialog_get_vbox (IntPtr i);
public Gtk.VBox VBox {
	get { return GLib.Object.GetObject (gtksharp_dialog_get_vbox (this.Handle), false) as VBox; }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_dialog_get_action_area (IntPtr i);
public Gtk.HButtonBox ActionArea {
	get { return GLib.Object.GetObject (gtksharp_dialog_get_action_area (this.Handle), false) as HButtonBox; }
}

public void AddActionWidget (Widget child, ResponseType response)
{
	this.AddActionWidget (child, (int) response);
}

public void AddButton (string button_text, ResponseType response)
{
	this.AddButton (button_text, (int) response);
}

public void Respond (ResponseType response)
{
	this.Respond ((int) response);
}

