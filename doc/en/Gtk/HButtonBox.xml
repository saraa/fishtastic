<Type Name="HButtonBox" FullName="Gtk.HButtonBox">
  <TypeSignature Language="C#" Value="public class HButtonBox : Gtk.ButtonBox, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="Lee Mallabone" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>HButtonBox is not a thread-safe object</ThreadSafetyStatement>
  <Docs>
    <summary>A button box should be used to provide a consistent layout of buttons throughout your application. This box provides a way of laying out buttons horizontally.</summary>
    <remarks><para>The specific layout of buttons in this type of box is determined by the box's <see cref="T:Gtk.ButtonBoxStyle"/>.</para>
    	<para>Methods for manipulating button boxes are provided in the super classes, <see cref="T:Gtk.ButtonBox"/> and <see cref="T:Gtk.Box"/>.</para></remarks>
    	  </Docs>
  <Base>
    <BaseTypeName>Gtk.ButtonBox</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected virtual void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Destroy and free all resources used by this widget</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HButtonBox (uint gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="gtype"></param>
        <returns></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HButtonBox (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Used for language bindings only.</summary>
        <param name="raw">A pointer to a GtkHButtonBox, as returned by the Gtk+ C API.</param>
        <returns>A C# Gtk.HButtonBox that wraps the <paramref name="raw"/> parameter.</returns>
        <remarks><para>If you don't already know that you need this constructor, it should not be used.</para></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HButtonBox ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>The normal way to construct a horizontal button box</summary>
        <returns>A new HBox</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the type of this object, as registered with the GLib object system.</summary>
        <returns>A number that uniquely identifies this type in the GLib object system.</returns>
        <remarks><para>Mostly for internal use.</para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>