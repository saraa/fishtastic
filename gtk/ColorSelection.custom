// Gtk.ColorSelection.custom - customizations and corrections for ColorSelection
// Author: Lee Mallabone <gnome@fonicmonkey.net>
// Author: Justin Malcolm

		[DllImport("libgtk-win32-2.0-0.dll")]
		static extern string gtk_color_selection_palette_to_string(Gdk.Color[] colors, int n_colors);

		/// <summary> PaletteToString Method </summary>
		public static string PaletteToString(Gdk.Color[] colors) {
			int n_colors = colors.Length;
			string raw_ret = gtk_color_selection_palette_to_string(colors, n_colors);
			string ret = raw_ret;
			return ret;
		}
		
		[DllImport("libgtk-win32-2.0-0.dll")]
		static extern bool gtk_color_selection_palette_from_string(string str, out IntPtr colors, out int n_colors);

		public static Gdk.Color[] PaletteFromString(string str) {
			IntPtr parsedColors;
			int n_colors;
			bool raw_ret = gtk_color_selection_palette_from_string(str, out parsedColors, out n_colors);
			
			// If things failed, return silently
			if (!raw_ret)
			{
				return null;
			}
			System.Console.WriteLine("Raw call finished, making " + n_colors + " actual colors");
			Gdk.Color[] colors = new Gdk.Color[n_colors];
			for (int i=0; i < n_colors; i++)
			{
				colors[i] = Gdk.Color.New(parsedColors);
				parsedColors = (IntPtr) ((int)parsedColors + Marshal.SizeOf(colors[i]));
			}
			return colors;
		}

		[DllImport("libgtk-win32-2.0-0.dll")]
		static extern void gtk_color_selection_set_previous_color(IntPtr raw, ref Gdk.Color color);

		[DllImport("libgtk-win32-2.0-0.dll")]
		static extern void gtk_color_selection_get_previous_color(IntPtr raw, out Gdk.Color color);

		// Create Gtk# property to replace two Gtk+ functions
		public Gdk.Color PreviousColor
		{
			get
			{
				Gdk.Color returnColor;
				gtk_color_selection_get_previous_color(Handle, out returnColor);	
				return returnColor;
			}
			set
			{
				gtk_color_selection_set_previous_color(Handle, ref value);
			}
		}

