<Type Name="Input" FullName="Gtk.Input">
  <TypeSignature Language="C#" Value="public class Input" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Input-handling code for the main loop of programs.</summary>
    <remarks />
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName="AddFull">
      <MemberSignature Language="C#" Value="public static uint AddFull (int source, Gdk.InputCondition condition, Gdk.InputFunction function, Gtk.CallbackMarshal marshal, IntPtr data, Gtk.DestroyNotify destroy);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int32" />
        <Parameter Name="condition" Type="Gdk.InputCondition" />
        <Parameter Name="function" Type="Gdk.InputFunction" />
        <Parameter Name="marshal" Type="Gtk.CallbackMarshal" />
        <Parameter Name="data" Type="System.IntPtr" />
        <Parameter Name="destroy" Type="Gtk.DestroyNotify" />
      </Parameters>
      <Docs>
        <summary>Registers a function to be called when a condition becomes true on a file descriptor. </summary>
        <param name="source">an <see cref="T:System.Int32" />, a file descriptor. </param>
        <param name="condition">an <see cref="T:Gdk.InputCondition" />, the condition. </param>
        <param name="function">an <see cref="T:Gdk.InputFunction" />, the function to call. </param>
        <param name="marshal">a <see cref="T:Gtk.CallbackMarshal" />, the marshaller to use instead of the function (if non-null). </param>
        <param name="data">a <see cref="T:System.IntPtr" />, callback data passed to the function. </param>
        <param name="destroy">a <see cref="T:Gtk.DestroyNotify" />, the callback function to call with "data" when the input handler is removed, or null. </param>
        <returns>a <see cref="T:System.UInt32" />, a unique id for the event source; to be used with <see cref="M:Gtk.Input.Remove" />. </returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public static void Remove (uint input_handler_id);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input_handler_id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>Removes the function with the given id. </summary>
        <param name="input_handler_id">a <see cref="T:System.UInt32" /> identifying the function to remove, provided by <see cref="M:Gtk.Input.AddFull" />.</param>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Input ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Basic constructor.</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
