<Type Name="Key" FullName="Gtk.Key">
  <TypeSignature Language="C#" Value="public class Key" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>An object for keys that are independent of keyboard focus--- global hotkeys, which execute <see cref="T:Gtk.KeySnoopFunc" /> functions.</summary>
    <remarks />
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName="SnooperRemove">
      <MemberSignature Language="C#" Value="public static void SnooperRemove (uint snooper_handler_id);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snooper_handler_id" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>Remove a snooper with id <paramref name="snooper_handler_id" /></summary>
        <param name="snooper_handler_id">a <see cref="T:System.UInt32" /></param>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SnooperInstall">
      <MemberSignature Language="C#" Value="public static uint SnooperInstall (Gtk.KeySnoopFunc snooper);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="snooper" Type="Gtk.KeySnoopFunc" />
      </Parameters>
      <Docs>
        <summary>Install a snooper function.</summary>
        <param name="snooper">a <see cref="T:Gtk.KeySnoopFunc" /></param>
        <returns>a <see cref="T:System.UInt32" />, the snooper handler id.</returns>
        <remarks>Code that uses this method should hold onto the return value, as it's necessary to disable the key.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Key ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Default constructor.</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
