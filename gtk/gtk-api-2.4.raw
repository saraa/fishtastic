<?xml version="1.0"?>
<api>
  <!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="Gtk" library="libgtk-win32-2.0-0.dll">
    <enum name="AccelFlags" cname="GtkAccelFlags" gtype="gtk_accel_flags_get_type" type="flags">
      <member cname="GTK_ACCEL_VISIBLE" name="Visible" value="1 &lt;&lt; 0" />
      <member cname="GTK_ACCEL_LOCKED" name="Locked" value="1 &lt;&lt; 1" />
      <member cname="GTK_ACCEL_MASK" name="Mask" value="0x07" />
    </enum>
    <enum name="AnchorType" cname="GtkAnchorType" gtype="gtk_anchor_type_get_type" type="enum">
      <member cname="GTK_ANCHOR_CENTER" name="Center" />
      <member cname="GTK_ANCHOR_NORTH" name="North" />
      <member cname="GTK_ANCHOR_NORTH_WEST" name="NorthWest" />
      <member cname="GTK_ANCHOR_NORTH_EAST" name="NorthEast" />
      <member cname="GTK_ANCHOR_SOUTH" name="South" />
      <member cname="GTK_ANCHOR_SOUTH_WEST" name="SouthWest" />
      <member cname="GTK_ANCHOR_SOUTH_EAST" name="SouthEast" />
      <member cname="GTK_ANCHOR_WEST" name="West" />
      <member cname="GTK_ANCHOR_EAST" name="East" />
      <member cname="GTK_ANCHOR_N" name="N" value="North" />
      <member cname="GTK_ANCHOR_NW" name="Nw" value="NorthWest" />
      <member cname="GTK_ANCHOR_NE" name="Ne" value="NorthEast" />
      <member cname="GTK_ANCHOR_S" name="S" value="South" />
      <member cname="GTK_ANCHOR_SW" name="Sw" value="SouthWest" />
      <member cname="GTK_ANCHOR_SE" name="Se" value="SouthEast" />
      <member cname="GTK_ANCHOR_W" name="W" value="West" />
      <member cname="GTK_ANCHOR_E" name="E" value="East" />
    </enum>
    <enum name="ArgFlags" cname="GtkArgFlags" deprecated="1" gtype="gtk_arg_flags_get_type" type="flags">
      <member cname="GTK_ARG_READABLE" name="Readable" value="G_PARAM_READABLE" />
      <member cname="GTK_ARG_WRITABLE" name="Writable" value="G_PARAM_WRITABLE" />
      <member cname="GTK_ARG_CONSTRUCT" name="Construct" value="G_PARAM_CONSTRUCT" />
      <member cname="GTK_ARG_CONSTRUCT_ONLY" name="ConstructOnly" value="G_PARAM_CONSTRUCT_ONLY" />
      <member cname="GTK_ARG_CHILD_ARG" name="ChildArg" value="1 &lt;&lt; 4" />
    </enum>
    <enum name="ArrowType" cname="GtkArrowType" gtype="gtk_arrow_type_get_type" type="enum">
      <member cname="GTK_ARROW_UP" name="Up" />
      <member cname="GTK_ARROW_DOWN" name="Down" />
      <member cname="GTK_ARROW_LEFT" name="Left" />
      <member cname="GTK_ARROW_RIGHT" name="Right" />
    </enum>
    <enum name="AttachOptions" cname="GtkAttachOptions" gtype="gtk_attach_options_get_type" type="flags">
      <member cname="GTK_EXPAND" name="Expand" value="1 &lt;&lt; 0" />
      <member cname="GTK_SHRINK" name="Shrink" value="1 &lt;&lt; 1" />
      <member cname="GTK_FILL" name="Fill" value="1 &lt;&lt; 2" />
    </enum>
    <enum name="ButtonBoxStyle" cname="GtkButtonBoxStyle" gtype="gtk_button_box_style_get_type" type="enum">
      <member cname="GTK_BUTTONBOX_DEFAULT_STYLE" name="DefaultStyle" />
      <member cname="GTK_BUTTONBOX_SPREAD" name="Spread" />
      <member cname="GTK_BUTTONBOX_EDGE" name="Edge" />
      <member cname="GTK_BUTTONBOX_START" name="Start" />
      <member cname="GTK_BUTTONBOX_END" name="End" />
    </enum>
    <enum name="ButtonsType" cname="GtkButtonsType" gtype="gtk_buttons_type_get_type" type="enum">
      <member cname="GTK_BUTTONS_NONE" name="None" />
      <member cname="GTK_BUTTONS_OK" name="Ok" />
      <member cname="GTK_BUTTONS_CLOSE" name="Close" />
      <member cname="GTK_BUTTONS_CANCEL" name="Cancel" />
      <member cname="GTK_BUTTONS_YES_NO" name="YesNo" />
      <member cname="GTK_BUTTONS_OK_CANCEL" name="OkCancel" />
    </enum>
    <enum name="CalendarDisplayOptions" cname="GtkCalendarDisplayOptions" gtype="gtk_calendar_display_options_get_type" type="flags">
      <member cname="GTK_CALENDAR_SHOW_HEADING" name="ShowHeading" value="1 &lt;&lt; 0" />
      <member cname="GTK_CALENDAR_SHOW_DAY_NAMES" name="ShowDayNames" value="1 &lt;&lt; 1" />
      <member cname="GTK_CALENDAR_NO_MONTH_CHANGE" name="NoMonthChange" value="1 &lt;&lt; 2" />
      <member cname="GTK_CALENDAR_SHOW_WEEK_NUMBERS" name="ShowWeekNumbers" value="1 &lt;&lt; 3" />
      <member cname="GTK_CALENDAR_WEEK_START_MONDAY" name="WeekStartMonday" value="1 &lt;&lt; 4" />
    </enum>
    <enum name="CellRendererMode" cname="GtkCellRendererMode" gtype="gtk_cell_renderer_mode_get_type" type="enum">
      <member cname="GTK_CELL_RENDERER_MODE_INERT" name="Inert" />
      <member cname="GTK_CELL_RENDERER_MODE_ACTIVATABLE" name="Activatable" />
      <member cname="GTK_CELL_RENDERER_MODE_EDITABLE" name="Editable" />
    </enum>
    <enum name="CellRendererState" cname="GtkCellRendererState" gtype="gtk_cell_renderer_state_get_type" type="flags">
      <member cname="GTK_CELL_RENDERER_SELECTED" name="Selected" value="1 &lt;&lt; 0" />
      <member cname="GTK_CELL_RENDERER_PRELIT" name="Prelit" value="1 &lt;&lt; 1" />
      <member cname="GTK_CELL_RENDERER_INSENSITIVE" name="Insensitive" value="1 &lt;&lt; 2" />
      <member cname="GTK_CELL_RENDERER_SORTED" name="Sorted" value="1 &lt;&lt; 3" />
      <member cname="GTK_CELL_RENDERER_FOCUSED" name="Focused" value="1 &lt;&lt; 4" />
    </enum>
    <enum name="CornerType" cname="GtkCornerType" gtype="gtk_corner_type_get_type" type="enum">
      <member cname="GTK_CORNER_TOP_LEFT" name="TopLeft" />
      <member cname="GTK_CORNER_BOTTOM_LEFT" name="BottomLeft" />
      <member cname="GTK_CORNER_TOP_RIGHT" name="TopRight" />
      <member cname="GTK_CORNER_BOTTOM_RIGHT" name="BottomRight" />
    </enum>
    <enum name="CurveType" cname="GtkCurveType" gtype="gtk_curve_type_get_type" type="enum">
      <member cname="GTK_CURVE_TYPE_LINEAR" name="Linear" />
      <member cname="GTK_CURVE_TYPE_SPLINE" name="Spline" />
      <member cname="GTK_CURVE_TYPE_FREE" name="Free" />
    </enum>
    <enum name="DeleteType" cname="GtkDeleteType" gtype="gtk_delete_type_get_type" type="enum">
      <member cname="GTK_DELETE_CHARS" name="Chars" />
      <member cname="GTK_DELETE_WORD_ENDS" name="WordEnds" />
      <member cname="GTK_DELETE_WORDS" name="Words" />
      <member cname="GTK_DELETE_DISPLAY_LINES" name="DisplayLines" />
      <member cname="GTK_DELETE_DISPLAY_LINE_ENDS" name="DisplayLineEnds" />
      <member cname="GTK_DELETE_PARAGRAPH_ENDS" name="ParagraphEnds" />
      <member cname="GTK_DELETE_PARAGRAPHS" name="Paragraphs" />
      <member cname="GTK_DELETE_WHITESPACE" name="Whitespace" />
    </enum>
    <enum name="DestDefaults" cname="GtkDestDefaults" gtype="gtk_dest_defaults_get_type" type="flags">
      <member cname="GTK_DEST_DEFAULT_MOTION" name="Motion" value="1 &lt;&lt; 0" />
      <member cname="GTK_DEST_DEFAULT_HIGHLIGHT" name="Highlight" value="1 &lt;&lt; 1" />
      <member cname="GTK_DEST_DEFAULT_DROP" name="Drop" value="1 &lt;&lt; 2" />
      <member cname="GTK_DEST_DEFAULT_ALL" name="All" value="0x07" />
    </enum>
    <enum name="DialogFlags" cname="GtkDialogFlags" gtype="gtk_dialog_flags_get_type" type="flags">
      <member cname="GTK_DIALOG_MODAL" name="Modal" value="1 &lt;&lt; 0" />
      <member cname="GTK_DIALOG_DESTROY_WITH_PARENT" name="DestroyWithParent" value="1 &lt;&lt; 1" />
      <member cname="GTK_DIALOG_NO_SEPARATOR" name="NoSeparator" value="1 &lt;&lt; 2" />
    </enum>
    <enum name="DirectionType" cname="GtkDirectionType" gtype="gtk_direction_type_get_type" type="enum">
      <member cname="GTK_DIR_TAB_FORWARD" name="TabForward" />
      <member cname="GTK_DIR_TAB_BACKWARD" name="TabBackward" />
      <member cname="GTK_DIR_UP" name="Up" />
      <member cname="GTK_DIR_DOWN" name="Down" />
      <member cname="GTK_DIR_LEFT" name="Left" />
      <member cname="GTK_DIR_RIGHT" name="Right" />
    </enum>
    <enum name="ExpanderStyle" cname="GtkExpanderStyle" gtype="gtk_expander_style_get_type" type="enum">
      <member cname="GTK_EXPANDER_COLLAPSED" name="Collapsed" />
      <member cname="GTK_EXPANDER_SEMI_COLLAPSED" name="SemiCollapsed" />
      <member cname="GTK_EXPANDER_SEMI_EXPANDED" name="SemiExpanded" />
      <member cname="GTK_EXPANDER_EXPANDED" name="Expanded" />
    </enum>
    <enum name="FileChooserAction" cname="GtkFileChooserAction" gtype="gtk_file_chooser_action_get_type" type="enum">
      <member cname="GTK_FILE_CHOOSER_ACTION_OPEN" name="Open" />
      <member cname="GTK_FILE_CHOOSER_ACTION_SAVE" name="Save" />
      <member cname="GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER" name="SelectFolder" />
      <member cname="GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER" name="CreateFolder" />
    </enum>
    <enum name="FileChooserError" cname="GtkFileChooserError" gtype="gtk_file_chooser_error_get_type" type="enum">
      <member cname="GTK_FILE_CHOOSER_ERROR_NONEXISTENT" name="Nonexistent" />
      <member cname="GTK_FILE_CHOOSER_ERROR_BAD_FILENAME" name="BadFilename" />
    </enum>
    <enum name="FileFilterFlags" cname="GtkFileFilterFlags" gtype="gtk_file_filter_flags_get_type" type="flags">
      <member cname="GTK_FILE_FILTER_FILENAME" name="Filename" value="1 &lt;&lt; 0" />
      <member cname="GTK_FILE_FILTER_URI" name="Uri" value="1 &lt;&lt; 1" />
      <member cname="GTK_FILE_FILTER_DISPLAY_NAME" name="DisplayName" value="1 &lt;&lt; 2" />
      <member cname="GTK_FILE_FILTER_MIME_TYPE" name="MimeType" value="1 &lt;&lt; 3" />
    </enum>
    <enum name="IMPreeditStyle" cname="GtkIMPreeditStyle" type="enum">
      <member cname="GTK_IM_PREEDIT_NOTHING" name="Nothing" />
      <member cname="GTK_IM_PREEDIT_CALLBACK" name="Callback" />
      <member cname="GTK_IM_PREEDIT_NONE" name="None" />
    </enum>
    <enum name="IMStatusStyle" cname="GtkIMStatusStyle" type="enum">
      <member cname="GTK_IM_STATUS_NOTHING" name="Nothing" />
      <member cname="GTK_IM_STATUS_CALLBACK" name="Callback" />
      <member cname="GTK_IM_STATUS_NONE" name="None" />
    </enum>
    <enum name="IconLookupFlags" cname="GtkIconLookupFlags" gtype="gtk_icon_lookup_flags_get_type" type="flags">
      <member cname="GTK_ICON_LOOKUP_NO_SVG" name="NoSvg" value="1 &lt;&lt; 0" />
      <member cname="GTK_ICON_LOOKUP_FORCE_SVG" name="ForceSvg" value="1 &lt;&lt; 1" />
      <member cname="GTK_ICON_LOOKUP_USE_BUILTIN" name="UseBuiltin" value="1 &lt;&lt; 2" />
    </enum>
    <enum name="IconSize" cname="GtkIconSize" gtype="gtk_icon_size_get_type" type="enum">
      <member cname="GTK_ICON_SIZE_INVALID" name="Invalid" />
      <member cname="GTK_ICON_SIZE_MENU" name="Menu" />
      <member cname="GTK_ICON_SIZE_SMALL_TOOLBAR" name="SmallToolbar" />
      <member cname="GTK_ICON_SIZE_LARGE_TOOLBAR" name="LargeToolbar" />
      <member cname="GTK_ICON_SIZE_BUTTON" name="Button" />
      <member cname="GTK_ICON_SIZE_DND" name="Dnd" />
      <member cname="GTK_ICON_SIZE_DIALOG" name="Dialog" />
    </enum>
    <enum name="IconThemeError" cname="GtkIconThemeError" gtype="gtk_icon_theme_error_get_type" type="enum">
      <member cname="GTK_ICON_THEME_NOT_FOUND" name="NotFound" />
      <member cname="GTK_ICON_THEME_FAILED" name="Failed" />
    </enum>
    <enum name="ImageType" cname="GtkImageType" gtype="gtk_image_type_get_type" type="enum">
      <member cname="GTK_IMAGE_EMPTY" name="Empty" />
      <member cname="GTK_IMAGE_PIXMAP" name="Pixmap" />
      <member cname="GTK_IMAGE_IMAGE" name="Image" />
      <member cname="GTK_IMAGE_PIXBUF" name="Pixbuf" />
      <member cname="GTK_IMAGE_STOCK" name="Stock" />
      <member cname="GTK_IMAGE_ICON_SET" name="IconSet" />
      <member cname="GTK_IMAGE_ANIMATION" name="Animation" />
    </enum>
    <enum name="Justification" cname="GtkJustification" gtype="gtk_justification_get_type" type="enum">
      <member cname="GTK_JUSTIFY_LEFT" name="Left" />
      <member cname="GTK_JUSTIFY_RIGHT" name="Right" />
      <member cname="GTK_JUSTIFY_CENTER" name="Center" />
      <member cname="GTK_JUSTIFY_FILL" name="Fill" />
    </enum>
    <enum name="MatchType" cname="GtkMatchType" deprecated="1" gtype="gtk_match_type_get_type" type="enum">
      <member cname="GTK_MATCH_ALL" name="All" />
      <member cname="GTK_MATCH_ALL_TAIL" name="AllTail" />
      <member cname="GTK_MATCH_HEAD" name="Head" />
      <member cname="GTK_MATCH_TAIL" name="Tail" />
      <member cname="GTK_MATCH_EXACT" name="Exact" />
      <member cname="GTK_MATCH_LAST" name="Last" />
    </enum>
    <enum name="MenuDirectionType" cname="GtkMenuDirectionType" gtype="gtk_menu_direction_type_get_type" type="enum">
      <member cname="GTK_MENU_DIR_PARENT" name="Parent" />
      <member cname="GTK_MENU_DIR_CHILD" name="Child" />
      <member cname="GTK_MENU_DIR_NEXT" name="Next" />
      <member cname="GTK_MENU_DIR_PREV" name="Prev" />
    </enum>
    <enum name="MessageType" cname="GtkMessageType" gtype="gtk_message_type_get_type" type="enum">
      <member cname="GTK_MESSAGE_INFO" name="Info" />
      <member cname="GTK_MESSAGE_WARNING" name="Warning" />
      <member cname="GTK_MESSAGE_QUESTION" name="Question" />
      <member cname="GTK_MESSAGE_ERROR" name="Error" />
    </enum>
    <enum name="MetricType" cname="GtkMetricType" gtype="gtk_metric_type_get_type" type="enum">
      <member cname="GTK_PIXELS" name="Pixels" />
      <member cname="GTK_INCHES" name="Inches" />
      <member cname="GTK_CENTIMETERS" name="Centimeters" />
    </enum>
    <enum name="MovementStep" cname="GtkMovementStep" gtype="gtk_movement_step_get_type" type="enum">
      <member cname="GTK_MOVEMENT_LOGICAL_POSITIONS" name="LogicalPositions" />
      <member cname="GTK_MOVEMENT_VISUAL_POSITIONS" name="VisualPositions" />
      <member cname="GTK_MOVEMENT_WORDS" name="Words" />
      <member cname="GTK_MOVEMENT_DISPLAY_LINES" name="DisplayLines" />
      <member cname="GTK_MOVEMENT_DISPLAY_LINE_ENDS" name="DisplayLineEnds" />
      <member cname="GTK_MOVEMENT_PARAGRAPHS" name="Paragraphs" />
      <member cname="GTK_MOVEMENT_PARAGRAPH_ENDS" name="ParagraphEnds" />
      <member cname="GTK_MOVEMENT_PAGES" name="Pages" />
      <member cname="GTK_MOVEMENT_BUFFER_ENDS" name="BufferEnds" />
      <member cname="GTK_MOVEMENT_HORIZONTAL_PAGES" name="HorizontalPages" />
    </enum>
    <enum name="NotebookTab" cname="GtkNotebookTab" gtype="gtk_notebook_tab_get_type" type="enum">
      <member cname="GTK_NOTEBOOK_TAB_FIRST" name="First" />
      <member cname="GTK_NOTEBOOK_TAB_LAST" name="Last" />
    </enum>
    <enum name="ObjectFlags" cname="GtkObjectFlags" gtype="gtk_object_flags_get_type" type="flags">
      <member cname="GTK_IN_DESTRUCTION" name="InDestruction" value="1 &lt;&lt; 0" />
      <member cname="GTK_FLOATING" name="Floating" value="1 &lt;&lt; 1" />
      <member cname="GTK_RESERVED_1" name="Reserved1" value="1 &lt;&lt; 2" />
      <member cname="GTK_RESERVED_2" name="Reserved2" value="1 &lt;&lt; 3" />
    </enum>
    <enum name="Orientation" cname="GtkOrientation" gtype="gtk_orientation_get_type" type="enum">
      <member cname="GTK_ORIENTATION_HORIZONTAL" name="Horizontal" />
      <member cname="GTK_ORIENTATION_VERTICAL" name="Vertical" />
    </enum>
    <enum name="PackType" cname="GtkPackType" gtype="gtk_pack_type_get_type" type="enum">
      <member cname="GTK_PACK_START" name="Start" />
      <member cname="GTK_PACK_END" name="End" />
    </enum>
    <enum name="PathPriorityType" cname="GtkPathPriorityType" gtype="gtk_path_priority_type_get_type" type="enum">
      <member cname="GTK_PATH_PRIO_LOWEST" name="Lowest" />
      <member cname="GTK_PATH_PRIO_GTK" name="Gtk" value="4" />
      <member cname="GTK_PATH_PRIO_APPLICATION" name="Application" value="8" />
      <member cname="GTK_PATH_PRIO_THEME" name="Theme" value="10" />
      <member cname="GTK_PATH_PRIO_RC" name="Rc" value="12" />
      <member cname="GTK_PATH_PRIO_HIGHEST" name="Highest" value="15" />
    </enum>
    <enum name="PathType" cname="GtkPathType" gtype="gtk_path_type_get_type" type="enum">
      <member cname="GTK_PATH_WIDGET" name="Widget" />
      <member cname="GTK_PATH_WIDGET_CLASS" name="WidgetClass" />
      <member cname="GTK_PATH_CLASS" name="Class" />
    </enum>
    <enum name="PolicyType" cname="GtkPolicyType" gtype="gtk_policy_type_get_type" type="enum">
      <member cname="GTK_POLICY_ALWAYS" name="Always" />
      <member cname="GTK_POLICY_AUTOMATIC" name="Automatic" />
      <member cname="GTK_POLICY_NEVER" name="Never" />
    </enum>
    <enum name="PositionType" cname="GtkPositionType" gtype="gtk_position_type_get_type" type="enum">
      <member cname="GTK_POS_LEFT" name="Left" />
      <member cname="GTK_POS_RIGHT" name="Right" />
      <member cname="GTK_POS_TOP" name="Top" />
      <member cname="GTK_POS_BOTTOM" name="Bottom" />
    </enum>
    <enum name="PreviewType" cname="GtkPreviewType" deprecated="1" gtype="gtk_preview_type_get_type" type="enum">
      <member cname="GTK_PREVIEW_COLOR" name="Color" />
      <member cname="GTK_PREVIEW_GRAYSCALE" name="Grayscale" />
    </enum>
    <enum name="ProgressBarOrientation" cname="GtkProgressBarOrientation" gtype="gtk_progress_bar_orientation_get_type" type="enum">
      <member cname="GTK_PROGRESS_LEFT_TO_RIGHT" name="LeftToRight" />
      <member cname="GTK_PROGRESS_RIGHT_TO_LEFT" name="RightToLeft" />
      <member cname="GTK_PROGRESS_BOTTOM_TO_TOP" name="BottomToTop" />
      <member cname="GTK_PROGRESS_TOP_TO_BOTTOM" name="TopToBottom" />
    </enum>
    <enum name="ProgressBarStyle" cname="GtkProgressBarStyle" gtype="gtk_progress_bar_style_get_type" type="enum">
      <member cname="GTK_PROGRESS_CONTINUOUS" name="Continuous" />
      <member cname="GTK_PROGRESS_DISCRETE" name="Discrete" />
    </enum>
    <enum name="RcFlags" cname="GtkRcFlags" gtype="gtk_rc_flags_get_type" type="flags">
      <member cname="GTK_RC_FG" name="Fg" value="1 &lt;&lt; 0" />
      <member cname="GTK_RC_BG" name="Bg" value="1 &lt;&lt; 1" />
      <member cname="GTK_RC_TEXT" name="Text" value="1 &lt;&lt; 2" />
      <member cname="GTK_RC_BASE" name="Base" value="1 &lt;&lt; 3" />
    </enum>
    <enum name="RcTokenType" cname="GtkRcTokenType" gtype="gtk_rc_token_type_get_type" type="enum">
      <member cname="GTK_RC_TOKEN_INVALID" name="Invalid" value="G_TOKEN_LAST" />
      <member cname="GTK_RC_TOKEN_INCLUDE" name="Include" />
      <member cname="GTK_RC_TOKEN_NORMAL" name="Normal" />
      <member cname="GTK_RC_TOKEN_ACTIVE" name="Active" />
      <member cname="GTK_RC_TOKEN_PRELIGHT" name="Prelight" />
      <member cname="GTK_RC_TOKEN_SELECTED" name="Selected" />
      <member cname="GTK_RC_TOKEN_INSENSITIVE" name="Insensitive" />
      <member cname="GTK_RC_TOKEN_FG" name="Fg" />
      <member cname="GTK_RC_TOKEN_BG" name="Bg" />
      <member cname="GTK_RC_TOKEN_TEXT" name="Text" />
      <member cname="GTK_RC_TOKEN_BASE" name="Base" />
      <member cname="GTK_RC_TOKEN_XTHICKNESS" name="Xthickness" />
      <member cname="GTK_RC_TOKEN_YTHICKNESS" name="Ythickness" />
      <member cname="GTK_RC_TOKEN_FONT" name="Font" />
      <member cname="GTK_RC_TOKEN_FONTSET" name="Fontset" />
      <member cname="GTK_RC_TOKEN_FONT_NAME" name="FontName" />
      <member cname="GTK_RC_TOKEN_BG_PIXMAP" name="BgPixmap" />
      <member cname="GTK_RC_TOKEN_PIXMAP_PATH" name="PixmapPath" />
      <member cname="GTK_RC_TOKEN_STYLE" name="Style" />
      <member cname="GTK_RC_TOKEN_BINDING" name="Binding" />
      <member cname="GTK_RC_TOKEN_BIND" name="Bind" />
      <member cname="GTK_RC_TOKEN_WIDGET" name="Widget" />
      <member cname="GTK_RC_TOKEN_WIDGET_CLASS" name="WidgetClass" />
      <member cname="GTK_RC_TOKEN_CLASS" name="Class" />
      <member cname="GTK_RC_TOKEN_LOWEST" name="Lowest" />
      <member cname="GTK_RC_TOKEN_GTK" name="Gtk" />
      <member cname="GTK_RC_TOKEN_APPLICATION" name="Application" />
      <member cname="GTK_RC_TOKEN_THEME" name="Theme" />
      <member cname="GTK_RC_TOKEN_RC" name="Rc" />
      <member cname="GTK_RC_TOKEN_HIGHEST" name="Highest" />
      <member cname="GTK_RC_TOKEN_ENGINE" name="Engine" />
      <member cname="GTK_RC_TOKEN_MODULE_PATH" name="ModulePath" />
      <member cname="GTK_RC_TOKEN_IM_MODULE_PATH" name="ImModulePath" />
      <member cname="GTK_RC_TOKEN_IM_MODULE_FILE" name="ImModuleFile" />
      <member cname="GTK_RC_TOKEN_STOCK" name="Stock" />
      <member cname="GTK_RC_TOKEN_LTR" name="Ltr" />
      <member cname="GTK_RC_TOKEN_RTL" name="Rtl" />
      <member cname="GTK_RC_TOKEN_LAST" name="Last" />
    </enum>
    <enum name="ReliefStyle" cname="GtkReliefStyle" gtype="gtk_relief_style_get_type" type="enum">
      <member cname="GTK_RELIEF_NORMAL" name="Normal" />
      <member cname="GTK_RELIEF_HALF" name="Half" />
      <member cname="GTK_RELIEF_NONE" name="None" />
    </enum>
    <enum name="ResizeMode" cname="GtkResizeMode" gtype="gtk_resize_mode_get_type" type="enum">
      <member cname="GTK_RESIZE_PARENT" name="Parent" />
      <member cname="GTK_RESIZE_QUEUE" name="Queue" />
      <member cname="GTK_RESIZE_IMMEDIATE" name="Immediate" />
    </enum>
    <enum name="ResponseType" cname="GtkResponseType" gtype="gtk_response_type_get_type" type="enum">
      <member cname="GTK_RESPONSE_NONE" name="None" value="-1" />
      <member cname="GTK_RESPONSE_REJECT" name="Reject" value="-2" />
      <member cname="GTK_RESPONSE_ACCEPT" name="Accept" value="-3" />
      <member cname="GTK_RESPONSE_DELETE_EVENT" name="DeleteEvent" value="-4" />
      <member cname="GTK_RESPONSE_OK" name="Ok" value="-5" />
      <member cname="GTK_RESPONSE_CANCEL" name="Cancel" value="-6" />
      <member cname="GTK_RESPONSE_CLOSE" name="Close" value="-7" />
      <member cname="GTK_RESPONSE_YES" name="Yes" value="-8" />
      <member cname="GTK_RESPONSE_NO" name="No" value="-9" />
      <member cname="GTK_RESPONSE_APPLY" name="Apply" value="-10" />
      <member cname="GTK_RESPONSE_HELP" name="Help" value="-11" />
    </enum>
    <enum name="ScrollStep" cname="GtkScrollStep" gtype="gtk_scroll_step_get_type" type="enum">
      <member cname="GTK_SCROLL_STEPS" name="Steps" />
      <member cname="GTK_SCROLL_PAGES" name="Pages" />
      <member cname="GTK_SCROLL_ENDS" name="Ends" />
      <member cname="GTK_SCROLL_HORIZONTAL_STEPS" name="HorizontalSteps" />
      <member cname="GTK_SCROLL_HORIZONTAL_PAGES" name="HorizontalPages" />
      <member cname="GTK_SCROLL_HORIZONTAL_ENDS" name="HorizontalEnds" />
    </enum>
    <enum name="ScrollType" cname="GtkScrollType" gtype="gtk_scroll_type_get_type" type="enum">
      <member cname="GTK_SCROLL_NONE" name="None" />
      <member cname="GTK_SCROLL_JUMP" name="Jump" />
      <member cname="GTK_SCROLL_STEP_BACKWARD" name="StepBackward" />
      <member cname="GTK_SCROLL_STEP_FORWARD" name="StepForward" />
      <member cname="GTK_SCROLL_PAGE_BACKWARD" name="PageBackward" />
      <member cname="GTK_SCROLL_PAGE_FORWARD" name="PageForward" />
      <member cname="GTK_SCROLL_STEP_UP" name="StepUp" />
      <member cname="GTK_SCROLL_STEP_DOWN" name="StepDown" />
      <member cname="GTK_SCROLL_PAGE_UP" name="PageUp" />
      <member cname="GTK_SCROLL_PAGE_DOWN" name="PageDown" />
      <member cname="GTK_SCROLL_STEP_LEFT" name="StepLeft" />
      <member cname="GTK_SCROLL_STEP_RIGHT" name="StepRight" />
      <member cname="GTK_SCROLL_PAGE_LEFT" name="PageLeft" />
      <member cname="GTK_SCROLL_PAGE_RIGHT" name="PageRight" />
      <member cname="GTK_SCROLL_START" name="Start" />
      <member cname="GTK_SCROLL_END" name="End" />
    </enum>
    <enum name="SelectionMode" cname="GtkSelectionMode" gtype="gtk_selection_mode_get_type" type="enum">
      <member cname="GTK_SELECTION_NONE" name="None" />
      <member cname="GTK_SELECTION_SINGLE" name="Single" />
      <member cname="GTK_SELECTION_BROWSE" name="Browse" />
      <member cname="GTK_SELECTION_MULTIPLE" name="Multiple" />
      <member cname="GTK_SELECTION_EXTENDED" name="Extended" value="Multiple" />
    </enum>
    <enum name="ShadowType" cname="GtkShadowType" gtype="gtk_shadow_type_get_type" type="enum">
      <member cname="GTK_SHADOW_NONE" name="None" />
      <member cname="GTK_SHADOW_IN" name="In" />
      <member cname="GTK_SHADOW_OUT" name="Out" />
      <member cname="GTK_SHADOW_ETCHED_IN" name="EtchedIn" />
      <member cname="GTK_SHADOW_ETCHED_OUT" name="EtchedOut" />
    </enum>
    <enum name="SideType" cname="GtkSideType" deprecated="1" gtype="gtk_side_type_get_type" type="enum">
      <member cname="GTK_SIDE_TOP" name="Top" />
      <member cname="GTK_SIDE_BOTTOM" name="Bottom" />
      <member cname="GTK_SIDE_LEFT" name="Left" />
      <member cname="GTK_SIDE_RIGHT" name="Right" />
    </enum>
    <enum name="SignalRunType" cname="GtkSignalRunType" deprecated="1" gtype="gtk_signal_run_type_get_type" type="enum">
      <member cname="GTK_RUN_FIRST" name="First" value="G_SIGNAL_RUN_FIRST" />
      <member cname="GTK_RUN_LAST" name="Last" value="G_SIGNAL_RUN_LAST" />
      <member cname="GTK_RUN_BOTH" name="Both" value="GTK_RUN_FIRST | GTK_RUN_LAST" />
      <member cname="GTK_RUN_NO_RECURSE" name="NoRecurse" value="G_SIGNAL_NO_RECURSE" />
      <member cname="GTK_RUN_ACTION" name="Action" value="G_SIGNAL_ACTION" />
      <member cname="GTK_RUN_NO_HOOKS" name="NoHooks" value="G_SIGNAL_NO_HOOKS" />
    </enum>
    <enum name="SizeGroupMode" cname="GtkSizeGroupMode" gtype="gtk_size_group_mode_get_type" type="enum">
      <member cname="GTK_SIZE_GROUP_NONE" name="None" />
      <member cname="GTK_SIZE_GROUP_HORIZONTAL" name="Horizontal" />
      <member cname="GTK_SIZE_GROUP_VERTICAL" name="Vertical" />
      <member cname="GTK_SIZE_GROUP_BOTH" name="Both" />
    </enum>
    <enum name="SortType" cname="GtkSortType" gtype="gtk_sort_type_get_type" type="enum">
      <member cname="GTK_SORT_ASCENDING" name="Ascending" />
      <member cname="GTK_SORT_DESCENDING" name="Descending" />
    </enum>
    <enum name="SpinButtonUpdatePolicy" cname="GtkSpinButtonUpdatePolicy" gtype="gtk_spin_button_update_policy_get_type" type="enum">
      <member cname="GTK_UPDATE_ALWAYS" name="Always" />
      <member cname="GTK_UPDATE_IF_VALID" name="IfValid" />
    </enum>
    <enum name="SpinType" cname="GtkSpinType" gtype="gtk_spin_type_get_type" type="enum">
      <member cname="GTK_SPIN_STEP_FORWARD" name="StepForward" />
      <member cname="GTK_SPIN_STEP_BACKWARD" name="StepBackward" />
      <member cname="GTK_SPIN_PAGE_FORWARD" name="PageForward" />
      <member cname="GTK_SPIN_PAGE_BACKWARD" name="PageBackward" />
      <member cname="GTK_SPIN_HOME" name="Home" />
      <member cname="GTK_SPIN_END" name="End" />
      <member cname="GTK_SPIN_USER_DEFINED" name="UserDefined" />
    </enum>
    <enum name="StateType" cname="GtkStateType" gtype="gtk_state_type_get_type" type="enum">
      <member cname="GTK_STATE_NORMAL" name="Normal" />
      <member cname="GTK_STATE_ACTIVE" name="Active" />
      <member cname="GTK_STATE_PRELIGHT" name="Prelight" />
      <member cname="GTK_STATE_SELECTED" name="Selected" />
      <member cname="GTK_STATE_INSENSITIVE" name="Insensitive" />
    </enum>
    <enum name="SubmenuDirection" cname="GtkSubmenuDirection" deprecated="1" gtype="gtk_submenu_direction_get_type" type="enum">
      <member cname="GTK_DIRECTION_LEFT" name="Left" />
      <member cname="GTK_DIRECTION_RIGHT" name="Right" />
    </enum>
    <enum name="SubmenuPlacement" cname="GtkSubmenuPlacement" deprecated="1" gtype="gtk_submenu_placement_get_type" type="enum">
      <member cname="GTK_TOP_BOTTOM" name="TopBottom" />
      <member cname="GTK_LEFT_RIGHT" name="LeftRight" />
    </enum>
    <enum name="TargetFlags" cname="GtkTargetFlags" gtype="gtk_target_flags_get_type" type="flags">
      <member cname="GTK_TARGET_SAME_APP" name="App" value="1 &lt;&lt; 0" />
      <member cname="GTK_TARGET_SAME_WIDGET" name="Widget" value="1 &lt;&lt; 1" />
    </enum>
    <enum name="TextDirection" cname="GtkTextDirection" gtype="gtk_text_direction_get_type" type="enum">
      <member cname="GTK_TEXT_DIR_NONE" name="None" />
      <member cname="GTK_TEXT_DIR_LTR" name="Ltr" />
      <member cname="GTK_TEXT_DIR_RTL" name="Rtl" />
    </enum>
    <enum name="TextSearchFlags" cname="GtkTextSearchFlags" gtype="gtk_text_search_flags_get_type" type="flags">
      <member cname="GTK_TEXT_SEARCH_VISIBLE_ONLY" name="VisibleOnly" value="1 &lt;&lt; 0" />
      <member cname="GTK_TEXT_SEARCH_TEXT_ONLY" name="TextOnly" value="1 &lt;&lt; 1" />
    </enum>
    <enum name="TextWindowType" cname="GtkTextWindowType" gtype="gtk_text_window_type_get_type" type="enum">
      <member cname="GTK_TEXT_WINDOW_PRIVATE" name="Private" />
      <member cname="GTK_TEXT_WINDOW_WIDGET" name="Widget" />
      <member cname="GTK_TEXT_WINDOW_TEXT" name="Text" />
      <member cname="GTK_TEXT_WINDOW_LEFT" name="Left" />
      <member cname="GTK_TEXT_WINDOW_RIGHT" name="Right" />
      <member cname="GTK_TEXT_WINDOW_TOP" name="Top" />
      <member cname="GTK_TEXT_WINDOW_BOTTOM" name="Bottom" />
    </enum>
    <enum name="ToolbarChildType" cname="GtkToolbarChildType" deprecated="1" gtype="gtk_toolbar_child_type_get_type" type="enum">
      <member cname="GTK_TOOLBAR_CHILD_SPACE" name="Space" />
      <member cname="GTK_TOOLBAR_CHILD_BUTTON" name="Button" />
      <member cname="GTK_TOOLBAR_CHILD_TOGGLEBUTTON" name="Togglebutton" />
      <member cname="GTK_TOOLBAR_CHILD_RADIOBUTTON" name="Radiobutton" />
      <member cname="GTK_TOOLBAR_CHILD_WIDGET" name="Widget" />
    </enum>
    <enum name="ToolbarSpaceStyle" cname="GtkToolbarSpaceStyle" gtype="gtk_toolbar_space_style_get_type" type="enum">
      <member cname="GTK_TOOLBAR_SPACE_EMPTY" name="Empty" />
      <member cname="GTK_TOOLBAR_SPACE_LINE" name="Line" />
    </enum>
    <enum name="ToolbarStyle" cname="GtkToolbarStyle" gtype="gtk_toolbar_style_get_type" type="enum">
      <member cname="GTK_TOOLBAR_ICONS" name="Icons" />
      <member cname="GTK_TOOLBAR_TEXT" name="Text" />
      <member cname="GTK_TOOLBAR_BOTH" name="Both" />
      <member cname="GTK_TOOLBAR_BOTH_HORIZ" name="BothHoriz" />
    </enum>
    <enum name="TreeModelFlags" cname="GtkTreeModelFlags" gtype="gtk_tree_model_flags_get_type" type="flags">
      <member cname="GTK_TREE_MODEL_ITERS_PERSIST" name="ItersPersist" value="1 &lt;&lt; 0" />
      <member cname="GTK_TREE_MODEL_LIST_ONLY" name="ListOnly" value="1 &lt;&lt; 1" />
    </enum>
    <enum name="TreeViewColumnSizing" cname="GtkTreeViewColumnSizing" gtype="gtk_tree_view_column_sizing_get_type" type="enum">
      <member cname="GTK_TREE_VIEW_COLUMN_GROW_ONLY" name="GrowOnly" />
      <member cname="GTK_TREE_VIEW_COLUMN_AUTOSIZE" name="Autosize" />
      <member cname="GTK_TREE_VIEW_COLUMN_FIXED" name="Fixed" />
    </enum>
    <enum name="TreeViewDropPosition" cname="GtkTreeViewDropPosition" gtype="gtk_tree_view_drop_position_get_type" type="enum">
      <member cname="GTK_TREE_VIEW_DROP_BEFORE" name="Before" />
      <member cname="GTK_TREE_VIEW_DROP_AFTER" name="After" />
      <member cname="GTK_TREE_VIEW_DROP_INTO_OR_BEFORE" name="IntoOrBefore" />
      <member cname="GTK_TREE_VIEW_DROP_INTO_OR_AFTER" name="IntoOrAfter" />
    </enum>
    <enum name="UIManagerItemType" cname="GtkUIManagerItemType" type="flags">
      <member cname="GTK_UI_MANAGER_AUTO" name="Auto" />
      <member cname="GTK_UI_MANAGER_MENUBAR" name="Menubar" value="1 &lt;&lt; 0" />
      <member cname="GTK_UI_MANAGER_MENU" name="Menu" value="1 &lt;&lt; 1" />
      <member cname="GTK_UI_MANAGER_TOOLBAR" name="Toolbar" value="1 &lt;&lt; 2" />
      <member cname="GTK_UI_MANAGER_PLACEHOLDER" name="Placeholder" value="1 &lt;&lt; 3" />
      <member cname="GTK_UI_MANAGER_POPUP" name="Popup" value="1 &lt;&lt; 4" />
      <member cname="GTK_UI_MANAGER_MENUITEM" name="Menuitem" value="1 &lt;&lt; 5" />
      <member cname="GTK_UI_MANAGER_TOOLITEM" name="Toolitem" value="1 &lt;&lt; 6" />
      <member cname="GTK_UI_MANAGER_SEPARATOR" name="Separator" value="1 &lt;&lt; 7" />
      <member cname="GTK_UI_MANAGER_ACCELERATOR" name="Accelerator" value="1 &lt;&lt; 8" />
    </enum>
    <enum name="UpdateType" cname="GtkUpdateType" gtype="gtk_update_type_get_type" type="enum">
      <member cname="GTK_UPDATE_CONTINUOUS" name="Continuous" />
      <member cname="GTK_UPDATE_DISCONTINUOUS" name="Discontinuous" />
      <member cname="GTK_UPDATE_DELAYED" name="Delayed" />
    </enum>
    <enum name="Visibility" cname="GtkVisibility" gtype="gtk_visibility_get_type" type="enum">
      <member cname="GTK_VISIBILITY_NONE" name="None" />
      <member cname="GTK_VISIBILITY_PARTIAL" name="Partial" />
      <member cname="GTK_VISIBILITY_FULL" name="Full" />
    </enum>
    <enum name="WidgetFlags" cname="GtkWidgetFlags" gtype="gtk_widget_flags_get_type" type="flags">
      <member cname="GTK_TOPLEVEL" name="Toplevel" value="1 &lt;&lt; 4" />
      <member cname="GTK_NO_WINDOW" name="NoWindow" value="1 &lt;&lt; 5" />
      <member cname="GTK_REALIZED" name="Realized" value="1 &lt;&lt; 6" />
      <member cname="GTK_MAPPED" name="Mapped" value="1 &lt;&lt; 7" />
      <member cname="GTK_VISIBLE" name="Visible" value="1 &lt;&lt; 8" />
      <member cname="GTK_SENSITIVE" name="Sensitive" value="1 &lt;&lt; 9" />
      <member cname="GTK_PARENT_SENSITIVE" name="ParentSensitive" value="1 &lt;&lt; 10" />
      <member cname="GTK_CAN_FOCUS" name="CanFocus" value="1 &lt;&lt; 11" />
      <member cname="GTK_HAS_FOCUS" name="HasFocus" value="1 &lt;&lt; 12" />
      <member cname="GTK_CAN_DEFAULT" name="CanDefault" value="1 &lt;&lt; 13" />
      <member cname="GTK_HAS_DEFAULT" name="HasDefault" value="1 &lt;&lt; 14" />
      <member cname="GTK_HAS_GRAB" name="HasGrab" value="1 &lt;&lt; 15" />
      <member cname="GTK_RC_STYLE" name="RcStyle" value="1 &lt;&lt; 16" />
      <member cname="GTK_COMPOSITE_CHILD" name="CompositeChild" value="1 &lt;&lt; 17" />
      <member cname="GTK_NO_REPARENT" name="NoReparent" value="1 &lt;&lt; 18" />
      <member cname="GTK_APP_PAINTABLE" name="AppPaintable" value="1 &lt;&lt; 19" />
      <member cname="GTK_RECEIVES_DEFAULT" name="ReceivesDefault" value="1 &lt;&lt; 20" />
      <member cname="GTK_DOUBLE_BUFFERED" name="DoubleBuffered" value="1 &lt;&lt; 21" />
      <member cname="GTK_NO_SHOW_ALL" name="NoShowAll" value="1 &lt;&lt; 22" />
    </enum>
    <enum name="WidgetHelpType" cname="GtkWidgetHelpType" gtype="gtk_widget_help_type_get_type" type="enum">
      <member cname="GTK_WIDGET_HELP_TOOLTIP" name="Tooltip" />
      <member cname="GTK_WIDGET_HELP_WHATS_THIS" name="WhatsThis" />
    </enum>
    <enum name="WindowPosition" cname="GtkWindowPosition" gtype="gtk_window_position_get_type" type="enum">
      <member cname="GTK_WIN_POS_NONE" name="None" />
      <member cname="GTK_WIN_POS_CENTER" name="Center" />
      <member cname="GTK_WIN_POS_MOUSE" name="Mouse" />
      <member cname="GTK_WIN_POS_CENTER_ALWAYS" name="CenterAlways" />
      <member cname="GTK_WIN_POS_CENTER_ON_PARENT" name="CenterOnParent" />
    </enum>
    <enum name="WindowType" cname="GtkWindowType" gtype="gtk_window_type_get_type" type="enum">
      <member cname="GTK_WINDOW_TOPLEVEL" name="Toplevel" />
      <member cname="GTK_WINDOW_POPUP" name="Popup" />
    </enum>
    <enum name="WrapMode" cname="GtkWrapMode" gtype="gtk_wrap_mode_get_type" type="enum">
      <member cname="GTK_WRAP_NONE" name="None" />
      <member cname="GTK_WRAP_CHAR" name="Char" />
      <member cname="GTK_WRAP_WORD" name="Word" />
      <member cname="GTK_WRAP_WORD_CHAR" name="WordChar" />
    </enum>
    <callback name="AccelGroupActivate" cname="GtkAccelGroupActivate">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkAccelGroup*" name="accel_group" />
        <parameter type="GObject*" name="acceleratable" />
        <parameter type="guint" name="keyval" />
        <parameter type="GdkModifierType" name="modifier" />
      </parameters>
    </callback>
    <callback name="AccelGroupFindFunc" cname="GtkAccelGroupFindFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkAccelKey*" name="key" />
        <parameter type="GClosure*" name="closure" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="AccelMapForeach" cname="GtkAccelMapForeach">
      <return-type type="void" />
      <parameters>
        <parameter type="gpointer" name="data" />
        <parameter type="const-gchar*" name="accel_path" />
        <parameter type="guint" name="accel_key" />
        <parameter type="GdkModifierType" name="accel_mods" />
        <parameter type="gboolean" name="changed" />
      </parameters>
    </callback>
    <callback name="Callback" cname="GtkCallback">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkWidget*" name="widget" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="CallbackMarshal" cname="GtkCallbackMarshal">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkObject*" name="object" />
        <parameter type="gpointer" name="data" />
        <parameter type="guint" name="n_args" />
        <parameter type="GtkArg*" name="args" />
      </parameters>
    </callback>
    <callback name="CellLayoutDataFunc" cname="GtkCellLayoutDataFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkCellLayout*" name="cell_layout" />
        <parameter type="GtkCellRenderer*" name="cell" />
        <parameter type="GtkTreeModel*" name="tree_model" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ClipboardClearFunc" cname="GtkClipboardClearFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkClipboard*" name="clipboard" />
        <parameter type="gpointer" name="user_data_or_owner" />
      </parameters>
    </callback>
    <callback name="ClipboardGetFunc" cname="GtkClipboardGetFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkClipboard*" name="clipboard" />
        <parameter type="GtkSelectionData*" name="selection_data" />
        <parameter type="guint" name="info" />
        <parameter type="gpointer" name="user_data_or_owner" />
      </parameters>
    </callback>
    <callback name="ClipboardReceivedFunc" cname="GtkClipboardReceivedFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkClipboard*" name="clipboard" />
        <parameter type="GtkSelectionData*" name="selection_data" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ClipboardTargetsReceivedFunc" cname="GtkClipboardTargetsReceivedFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkClipboard*" name="clipboard" />
        <parameter type="GdkAtom*" name="atoms" />
        <parameter type="gint" name="n_atoms" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ClipboardTextReceivedFunc" cname="GtkClipboardTextReceivedFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkClipboard*" name="clipboard" />
        <parameter type="const-gchar*" name="text" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ColorSelectionChangePaletteFunc" cname="GtkColorSelectionChangePaletteFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="const-GdkColor*" name="colors" />
        <parameter type="gint" name="n_colors" />
      </parameters>
    </callback>
    <callback name="ColorSelectionChangePaletteWithScreenFunc" cname="GtkColorSelectionChangePaletteWithScreenFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GdkScreen*" name="screen" />
        <parameter type="const-GdkColor*" name="colors" />
        <parameter type="gint" name="n_colors" />
      </parameters>
    </callback>
    <callback name="DestroyNotify" cname="GtkDestroyNotify">
      <return-type type="void" />
      <parameters>
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="EntryCompletionMatchFunc" cname="GtkEntryCompletionMatchFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkEntryCompletion*" name="completion" />
        <parameter type="const-gchar*" name="key" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="FileFilterFunc" cname="GtkFileFilterFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="const-GtkFileFilterInfo*" name="filter_info" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="Function" cname="GtkFunction">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="ItemFactoryCallback" cname="GtkItemFactoryCallback">
      <return-type type="void" />
    </callback>
    <callback name="ItemFactoryCallback1" cname="GtkItemFactoryCallback1">
      <return-type type="void" />
      <parameters>
        <parameter type="gpointer" name="callback_data" />
        <parameter type="guint" name="callback_action" />
        <parameter type="GtkWidget*" name="widget" />
      </parameters>
    </callback>
    <callback name="ItemFactoryCallback2" cname="GtkItemFactoryCallback2">
      <return-type type="void" />
    </callback>
    <callback name="KeySnoopFunc" cname="GtkKeySnoopFunc">
      <return-type type="gint" />
      <parameters>
        <parameter type="GtkWidget*" name="grab_widget" />
        <parameter type="GdkEventKey*" name="event" />
        <parameter type="gpointer" name="func_data" />
      </parameters>
    </callback>
    <callback name="MenuCallback" cname="GtkMenuCallback">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkWidget*" name="widget" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="MenuDetachFunc" cname="GtkMenuDetachFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkWidget*" name="attach_widget" />
        <parameter type="GtkMenu*" name="menu" />
      </parameters>
    </callback>
    <callback name="MenuPositionFunc" cname="GtkMenuPositionFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkMenu*" name="menu" />
        <parameter type="gint*" name="x" />
        <parameter type="gint*" name="y" />
        <parameter type="gboolean*" name="push_in" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="ModuleDisplayInitFunc" cname="GtkModuleDisplayInitFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GdkDisplay*" name="display" />
      </parameters>
    </callback>
    <callback name="ModuleInitFunc" cname="GtkModuleInitFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="gint*" name="argc" />
        <parameter type="gchar***" name="argv" />
      </parameters>
    </callback>
    <callback name="PrintFunc" cname="GtkPrintFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="gpointer" name="func_data" />
        <parameter type="const-gchar*" name="str" />
      </parameters>
    </callback>
    <callback name="RcPropertyParser" cname="GtkRcPropertyParser">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="const-GParamSpec*" name="pspec" />
        <parameter type="const-GString*" name="rc_string" />
        <parameter type="GValue*" name="property_value" />
      </parameters>
    </callback>
    <callback name="SignalFunc" cname="GtkSignalFunc">
      <return-type type="void" />
    </callback>
    <callback name="TextCharPredicate" cname="GtkTextCharPredicate">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="gunichar" name="ch" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="TextTagTableForeach" cname="GtkTextTagTableForeach">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkTextTag*" name="tag" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TranslateFunc" cname="GtkTranslateFunc">
      <return-type type="gchar*" />
      <parameters>
        <parameter type="const-gchar*" name="path" />
        <parameter type="gpointer" name="func_data" />
      </parameters>
    </callback>
    <callback name="TreeCellDataFunc" cname="GtkTreeCellDataFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkTreeViewColumn*" name="tree_column" />
        <parameter type="GtkCellRenderer*" name="cell" />
        <parameter type="GtkTreeModel*" name="tree_model" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeDestroyCountFunc" cname="GtkTreeDestroyCountFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkTreeView*" name="tree_view" />
        <parameter type="GtkTreePath*" name="path" />
        <parameter type="gint" name="children" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="TreeIterCompareFunc" cname="GtkTreeIterCompareFunc">
      <return-type type="gint" />
      <parameters>
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="GtkTreeIter*" name="a" />
        <parameter type="GtkTreeIter*" name="b" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="TreeModelFilterModifyFunc" cname="GtkTreeModelFilterModifyFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="GValue*" name="value" />
        <parameter type="gint" name="column" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeModelFilterVisibleFunc" cname="GtkTreeModelFilterVisibleFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeModelForeachFunc" cname="GtkTreeModelForeachFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="GtkTreePath*" name="path" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeSelectionForeachFunc" cname="GtkTreeSelectionForeachFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="GtkTreePath*" name="path" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeSelectionFunc" cname="GtkTreeSelectionFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkTreeSelection*" name="selection" />
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="GtkTreePath*" name="path" />
        <parameter type="gboolean" name="path_currently_selected" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeViewColumnDropFunc" cname="GtkTreeViewColumnDropFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkTreeView*" name="tree_view" />
        <parameter type="GtkTreeViewColumn*" name="column" />
        <parameter type="GtkTreeViewColumn*" name="prev_column" />
        <parameter type="GtkTreeViewColumn*" name="next_column" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <callback name="TreeViewMappingFunc" cname="GtkTreeViewMappingFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkTreeView*" name="tree_view" />
        <parameter type="GtkTreePath*" name="path" />
        <parameter type="gpointer" name="user_data" />
      </parameters>
    </callback>
    <callback name="TreeViewSearchEqualFunc" cname="GtkTreeViewSearchEqualFunc">
      <return-type type="gboolean" />
      <parameters>
        <parameter type="GtkTreeModel*" name="model" />
        <parameter type="gint" name="column" />
        <parameter type="const-gchar*" name="key" />
        <parameter type="GtkTreeIter*" name="iter" />
        <parameter type="gpointer" name="search_data" />
      </parameters>
    </callback>
    <callback name="WindowKeysForeachFunc" cname="GtkWindowKeysForeachFunc">
      <return-type type="void" />
      <parameters>
        <parameter type="GtkWindow*" name="window" />
        <parameter type="guint" name="keyval" />
        <parameter type="GdkModifierType" name="modifiers" />
        <parameter type="gboolean" name="is_mnemonic" />
        <parameter type="gpointer" name="data" />
      </parameters>
    </callback>
    <interface name="CellEditable" cname="GtkCellEditable">
      <signal name="EditingDone" cname="editing_done" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellEditable*" name="cell_editable" />
        </parameters>
      </signal>
      <signal name="RemoveWidget" cname="remove_widget" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellEditable*" name="cell_editable" />
        </parameters>
      </signal>
      <virtual_method name="StartEditing" cname="start_editing">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellEditable*" name="cell_editable" />
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </virtual_method>
      <method name="EditingDone" cname="gtk_cell_editable_editing_done">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_cell_editable_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="RemoveWidget" cname="gtk_cell_editable_remove_widget">
        <return-type type="void" />
      </method>
      <method name="StartEditing" cname="gtk_cell_editable_start_editing">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
    </interface>
    <interface name="CellLayout" cname="GtkCellLayout">
      <virtual_method name="PackStart" cname="pack_start">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellLayout*" name="cell_layout" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gboolean" name="expand" />
        </parameters>
      </virtual_method>
      <virtual_method name="PackEnd" cname="pack_end">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellLayout*" name="cell_layout" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gboolean" name="expand" />
        </parameters>
      </virtual_method>
      <virtual_method name="Clear" cname="clear">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellLayout*" name="cell_layout" />
        </parameters>
      </virtual_method>
      <virtual_method name="AddAttribute" cname="add_attribute">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellLayout*" name="cell_layout" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="const-gchar*" name="attribute" />
          <parameter type="gint" name="column" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetCellDataFunc" cname="set_cell_data_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellLayout*" name="cell_layout" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="GtkCellLayoutDataFunc" name="func" />
          <parameter type="gpointer" name="func_data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </virtual_method>
      <virtual_method name="ClearAttributes" cname="clear_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellLayout*" name="cell_layout" />
          <parameter type="GtkCellRenderer*" name="cell" />
        </parameters>
      </virtual_method>
      <virtual_method name="Reorder" cname="reorder">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellLayout*" name="cell_layout" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gint" name="position" />
        </parameters>
      </virtual_method>
      <method name="AddAttribute" cname="gtk_cell_layout_add_attribute">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="const-gchar*" name="attribute" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="Clear" cname="gtk_cell_layout_clear">
        <return-type type="void" />
      </method>
      <method name="ClearAttributes" cname="gtk_cell_layout_clear_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_cell_layout_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="PackEnd" cname="gtk_cell_layout_pack_end">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gboolean" name="expand" />
        </parameters>
      </method>
      <method name="PackStart" cname="gtk_cell_layout_pack_start">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gboolean" name="expand" />
        </parameters>
      </method>
      <method name="Reorder" cname="gtk_cell_layout_reorder">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetAttributes" cname="gtk_cell_layout_set_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetCellDataFunc" cname="gtk_cell_layout_set_cell_data_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="GtkCellLayoutDataFunc" name="func" />
          <parameter type="gpointer" name="func_data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
    </interface>
    <interface name="Editable" cname="GtkEditable">
      <signal name="InsertText" cname="insert_text" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="length" />
          <parameter type="gint*" name="position" />
        </parameters>
      </signal>
      <signal name="DeleteText" cname="delete_text" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </signal>
      <signal name="Changed" cname="changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
        </parameters>
      </signal>
      <virtual_method name="DoInsertText" cname="do_insert_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="length" />
          <parameter type="gint*" name="position" />
        </parameters>
      </virtual_method>
      <virtual_method name="DoDeleteText" cname="do_delete_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetChars" cname="get_chars">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetSelectionBounds" cname="set_selection_bounds">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSelectionBounds" cname="get_selection_bounds">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="gint*" name="start_pos" />
          <parameter type="gint*" name="end_pos" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetPosition" cname="set_position">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
          <parameter type="gint" name="position" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetPosition" cname="get_position">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkEditable*" name="editable" />
        </parameters>
      </virtual_method>
      <method name="CopyClipboard" cname="gtk_editable_copy_clipboard">
        <return-type type="void" />
      </method>
      <method name="CutClipboard" cname="gtk_editable_cut_clipboard">
        <return-type type="void" />
      </method>
      <method name="DeleteSelection" cname="gtk_editable_delete_selection">
        <return-type type="void" />
      </method>
      <method name="DeleteText" cname="gtk_editable_delete_text">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </method>
      <method name="GetChars" cname="gtk_editable_get_chars">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="gint" name="start_pos" />
          <parameter type="gint" name="end_pos" />
        </parameters>
      </method>
      <method name="GetEditable" cname="gtk_editable_get_editable">
        <return-type type="gboolean" />
      </method>
      <method name="GetPosition" cname="gtk_editable_get_position">
        <return-type type="gint" />
      </method>
      <method name="GetSelectionBounds" cname="gtk_editable_get_selection_bounds">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint*" name="start" />
          <parameter type="gint*" name="end" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_editable_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InsertText" cname="gtk_editable_insert_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="new_text" />
          <parameter type="gint" name="new_text_length" />
          <parameter type="gint*" name="position" />
        </parameters>
      </method>
      <method name="PasteClipboard" cname="gtk_editable_paste_clipboard">
        <return-type type="void" />
      </method>
      <method name="SelectRegion" cname="gtk_editable_select_region">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="start" />
          <parameter type="gint" name="end" />
        </parameters>
      </method>
      <method name="SetEditable" cname="gtk_editable_set_editable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_editable" />
        </parameters>
      </method>
      <method name="SetPosition" cname="gtk_editable_set_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
    </interface>
    <interface name="FileChooser" cname="GtkFileChooser">
      <signal name="CurrentFolderChanged" cname="current-folder-changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
        </parameters>
      </signal>
      <signal name="SelectionChanged" cname="selection-changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
        </parameters>
      </signal>
      <signal name="UpdatePreview" cname="update-preview" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
        </parameters>
      </signal>
      <signal name="FileActivated" cname="file-activated" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
        </parameters>
      </signal>
      <property name="Action" cname="action" type="GtkFileChooserAction" readable="true" writeable="true" />
      <property name="FileSystemBackend" cname="file-system-backend" type="gchar*" writeable="true" construct-only="true" />
      <property name="Filter" cname="filter" type="GtkFileFilter" readable="true" writeable="true" />
      <property name="LocalOnly" cname="local-only" type="gboolean" readable="true" writeable="true" />
      <property name="PreviewWidget" cname="preview-widget" type="GtkWidget" readable="true" writeable="true" />
      <property name="PreviewWidgetActive" cname="preview-widget-active" type="gboolean" readable="true" writeable="true" />
      <property name="UsePreviewLabel" cname="use-preview-label" type="gboolean" readable="true" writeable="true" />
      <property name="ExtraWidget" cname="extra-widget" type="GtkWidget" readable="true" writeable="true" />
      <property name="SelectMultiple" cname="select-multiple" type="gboolean" readable="true" writeable="true" />
      <property name="ShowHidden" cname="show-hidden" type="gboolean" readable="true" writeable="true" />
      <virtual_method name="SetCurrentFolder" cname="set_current_folder">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetCurrentFolder" cname="get_current_folder">
        <return-type type="GtkFilePath*" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetCurrentName" cname="set_current_name">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </virtual_method>
      <virtual_method name="SelectPath" cname="select_path">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="UnselectPath" cname="unselect_path">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
          <parameter type="const-GtkFilePath*" name="path" />
        </parameters>
      </virtual_method>
      <virtual_method name="SelectAll" cname="select_all">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <virtual_method name="UnselectAll" cname="unselect_all">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetPaths" cname="get_paths">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreviewPath" cname="get_preview_path">
        <return-type type="GtkFilePath*" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetFileSystem" cname="get_file_system">
        <return-type type="GtkFileSystem*" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <virtual_method name="AddFilter" cname="add_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
          <parameter type="GtkFileFilter*" name="filter" />
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveFilter" cname="remove_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
          <parameter type="GtkFileFilter*" name="filter" />
        </parameters>
      </virtual_method>
      <virtual_method name="ListFilters" cname="list_filters">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <virtual_method name="AddShortcutFolder" cname="add_shortcut_folder">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="RemoveShortcutFolder" cname="remove_shortcut_folder">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
          <parameter type="const-GtkFilePath*" name="path" />
          <parameter type="GError**" name="error" />
        </parameters>
      </virtual_method>
      <virtual_method name="ListShortcutFolders" cname="list_shortcut_folders">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GtkFileChooser*" name="chooser" />
        </parameters>
      </virtual_method>
      <method name="AddFilter" cname="gtk_file_chooser_add_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileFilter*" name="filter" />
        </parameters>
      </method>
      <method name="AddShortcutFolder" cname="gtk_file_chooser_add_shortcut_folder">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="folder" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="AddShortcutFolderUri" cname="gtk_file_chooser_add_shortcut_folder_uri">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="uri" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="ErrorQuark" cname="gtk_file_chooser_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="GetAction" cname="gtk_file_chooser_get_action">
        <return-type type="GtkFileChooserAction" />
      </method>
      <method name="GetCurrentFolder" cname="gtk_file_chooser_get_current_folder">
        <return-type type="gchar*" />
      </method>
      <method name="GetCurrentFolderUri" cname="gtk_file_chooser_get_current_folder_uri">
        <return-type type="gchar*" />
      </method>
      <method name="GetExtraWidget" cname="gtk_file_chooser_get_extra_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetFilename" cname="gtk_file_chooser_get_filename">
        <return-type type="gchar*" />
      </method>
      <method name="GetFilenames" cname="gtk_file_chooser_get_filenames">
        <return-type type="GSList*" />
      </method>
      <method name="GetFilter" cname="gtk_file_chooser_get_filter">
        <return-type type="GtkFileFilter*" />
      </method>
      <method name="GetLocalOnly" cname="gtk_file_chooser_get_local_only">
        <return-type type="gboolean" />
      </method>
      <method name="GetPreviewFilename" cname="gtk_file_chooser_get_preview_filename">
        <return-type type="char*" />
      </method>
      <method name="GetPreviewUri" cname="gtk_file_chooser_get_preview_uri">
        <return-type type="char*" />
      </method>
      <method name="GetPreviewWidget" cname="gtk_file_chooser_get_preview_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetPreviewWidgetActive" cname="gtk_file_chooser_get_preview_widget_active">
        <return-type type="gboolean" />
      </method>
      <method name="GetSelectMultiple" cname="gtk_file_chooser_get_select_multiple">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_file_chooser_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUri" cname="gtk_file_chooser_get_uri">
        <return-type type="gchar*" />
      </method>
      <method name="GetUris" cname="gtk_file_chooser_get_uris">
        <return-type type="GSList*" />
      </method>
      <method name="GetUsePreviewLabel" cname="gtk_file_chooser_get_use_preview_label">
        <return-type type="gboolean" />
      </method>
      <method name="ListFilters" cname="gtk_file_chooser_list_filters">
        <return-type type="GSList*" />
      </method>
      <method name="ListShortcutFolderUris" cname="gtk_file_chooser_list_shortcut_folder_uris">
        <return-type type="GSList*" />
      </method>
      <method name="ListShortcutFolders" cname="gtk_file_chooser_list_shortcut_folders">
        <return-type type="GSList*" />
      </method>
      <method name="RemoveFilter" cname="gtk_file_chooser_remove_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileFilter*" name="filter" />
        </parameters>
      </method>
      <method name="RemoveShortcutFolder" cname="gtk_file_chooser_remove_shortcut_folder">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="folder" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="RemoveShortcutFolderUri" cname="gtk_file_chooser_remove_shortcut_folder_uri">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="uri" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SelectAll" cname="gtk_file_chooser_select_all">
        <return-type type="void" />
      </method>
      <method name="SelectFilename" cname="gtk_file_chooser_select_filename">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="filename" />
        </parameters>
      </method>
      <method name="SelectUri" cname="gtk_file_chooser_select_uri">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="uri" />
        </parameters>
      </method>
      <method name="SetAction" cname="gtk_file_chooser_set_action">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileChooserAction" name="action" />
        </parameters>
      </method>
      <method name="SetCurrentFolder" cname="gtk_file_chooser_set_current_folder">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetCurrentFolderUri" cname="gtk_file_chooser_set_current_folder_uri">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="uri" />
        </parameters>
      </method>
      <method name="SetCurrentName" cname="gtk_file_chooser_set_current_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetExtraWidget" cname="gtk_file_chooser_set_extra_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="extra_widget" />
        </parameters>
      </method>
      <method name="SetFilename" cname="gtk_file_chooser_set_filename">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="filename" />
        </parameters>
      </method>
      <method name="SetFilter" cname="gtk_file_chooser_set_filter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileFilter*" name="filter" />
        </parameters>
      </method>
      <method name="SetLocalOnly" cname="gtk_file_chooser_set_local_only">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="local_only" />
        </parameters>
      </method>
      <method name="SetPreviewWidget" cname="gtk_file_chooser_set_preview_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="preview_widget" />
        </parameters>
      </method>
      <method name="SetPreviewWidgetActive" cname="gtk_file_chooser_set_preview_widget_active">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="active" />
        </parameters>
      </method>
      <method name="SetSelectMultiple" cname="gtk_file_chooser_set_select_multiple">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="select_multiple" />
        </parameters>
      </method>
      <method name="SetUri" cname="gtk_file_chooser_set_uri">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-char*" name="uri" />
        </parameters>
      </method>
      <method name="SetUsePreviewLabel" cname="gtk_file_chooser_set_use_preview_label">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_label" />
        </parameters>
      </method>
      <method name="UnselectAll" cname="gtk_file_chooser_unselect_all">
        <return-type type="void" />
      </method>
      <method name="UnselectFilename" cname="gtk_file_chooser_unselect_filename">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="filename" />
        </parameters>
      </method>
      <method name="UnselectUri" cname="gtk_file_chooser_unselect_uri">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="uri" />
        </parameters>
      </method>
    </interface>
    <interface name="TreeDragDest" cname="GtkTreeDragDest">
      <virtual_method name="DragDataReceived" cname="drag_data_received">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeDragDest*" name="drag_dest" />
          <parameter type="GtkTreePath*" name="dest" />
          <parameter type="GtkSelectionData*" name="selection_data" />
        </parameters>
      </virtual_method>
      <virtual_method name="RowDropPossible" cname="row_drop_possible">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeDragDest*" name="drag_dest" />
          <parameter type="GtkTreePath*" name="dest_path" />
          <parameter type="GtkSelectionData*" name="selection_data" />
        </parameters>
      </virtual_method>
      <method name="DragDataReceived" cname="gtk_tree_drag_dest_drag_data_received">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="dest" />
          <parameter type="GtkSelectionData*" name="selection_data" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_tree_drag_dest_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="RowDropPossible" cname="gtk_tree_drag_dest_row_drop_possible">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="dest_path" />
          <parameter type="GtkSelectionData*" name="selection_data" />
        </parameters>
      </method>
    </interface>
    <interface name="TreeDragSource" cname="GtkTreeDragSource">
      <virtual_method name="RowDraggable" cname="row_draggable">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeDragSource*" name="drag_source" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </virtual_method>
      <virtual_method name="DragDataGet" cname="drag_data_get">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeDragSource*" name="drag_source" />
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkSelectionData*" name="selection_data" />
        </parameters>
      </virtual_method>
      <virtual_method name="DragDataDelete" cname="drag_data_delete">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeDragSource*" name="drag_source" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </virtual_method>
      <method name="DragDataDelete" cname="gtk_tree_drag_source_drag_data_delete">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="DragDataGet" cname="gtk_tree_drag_source_drag_data_get">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkSelectionData*" name="selection_data" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_tree_drag_source_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="RowDraggable" cname="gtk_tree_drag_source_row_draggable">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
    </interface>
    <interface name="TreeModel" cname="GtkTreeModel">
      <signal name="RowChanged" cname="row_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </signal>
      <signal name="RowInserted" cname="row_inserted" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </signal>
      <signal name="RowHasChildToggled" cname="row_has_child_toggled" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </signal>
      <signal name="RowDeleted" cname="row_deleted" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </signal>
      <signal name="RowsReordered" cname="rows_reordered" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint*" name="new_order" />
        </parameters>
      </signal>
      <virtual_method name="GetFlags" cname="get_flags">
        <return-type type="GtkTreeModelFlags" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetNColumns" cname="get_n_columns">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetColumnType" cname="get_column_type">
        <return-type type="GType" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="gint" name="index_" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetIter" cname="get_iter">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetPath" cname="get_path">
        <return-type type="GtkTreePath*" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetValue" cname="get_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint" name="column" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </virtual_method>
      <virtual_method name="IterNext" cname="iter_next">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="IterChildren" cname="iter_children">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
        </parameters>
      </virtual_method>
      <virtual_method name="IterHasChild" cname="iter_has_child">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="IterNChildren" cname="iter_n_children">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="IterNthChild" cname="iter_nth_child">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
          <parameter type="gint" name="n" />
        </parameters>
      </virtual_method>
      <virtual_method name="IterParent" cname="iter_parent">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="child" />
        </parameters>
      </virtual_method>
      <virtual_method name="RefNode" cname="ref_node">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <virtual_method name="UnrefNode" cname="unref_node">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </virtual_method>
      <method name="Foreach" cname="gtk_tree_model_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModelForeachFunc" name="func" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="Get" cname="gtk_tree_model_get">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="GetColumnType" cname="gtk_tree_model_get_column_type">
        <return-type type="GType" />
        <parameters>
          <parameter type="gint" name="index_" />
        </parameters>
      </method>
      <method name="GetFlags" cname="gtk_tree_model_get_flags">
        <return-type type="GtkTreeModelFlags" />
      </method>
      <method name="GetIter" cname="gtk_tree_model_get_iter">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="GetIterFirst" cname="gtk_tree_model_get_iter_first">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetIterFromString" cname="gtk_tree_model_get_iter_from_string">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="const-gchar*" name="path_string" />
        </parameters>
      </method>
      <method name="GetNColumns" cname="gtk_tree_model_get_n_columns">
        <return-type type="gint" />
      </method>
      <method name="GetPath" cname="gtk_tree_model_get_path">
        <return-type type="GtkTreePath*" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetStringFromIter" cname="gtk_tree_model_get_string_from_iter">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_tree_model_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValist" cname="gtk_tree_model_get_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="GetValue" cname="gtk_tree_model_get_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint" name="column" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="IterChildren" cname="gtk_tree_model_iter_children">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
        </parameters>
      </method>
      <method name="IterHasChild" cname="gtk_tree_model_iter_has_child">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="IterNChildren" cname="gtk_tree_model_iter_n_children">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="IterNext" cname="gtk_tree_model_iter_next">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="IterNthChild" cname="gtk_tree_model_iter_nth_child">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
          <parameter type="gint" name="n" />
        </parameters>
      </method>
      <method name="IterParent" cname="gtk_tree_model_iter_parent">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="child" />
        </parameters>
      </method>
      <method name="RefNode" cname="gtk_tree_model_ref_node">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="RowChanged" cname="gtk_tree_model_row_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="RowDeleted" cname="gtk_tree_model_row_deleted">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="RowHasChildToggled" cname="gtk_tree_model_row_has_child_toggled">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="RowInserted" cname="gtk_tree_model_row_inserted">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="RowsReordered" cname="gtk_tree_model_rows_reordered">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint*" name="new_order" />
        </parameters>
      </method>
      <method name="UnrefNode" cname="gtk_tree_model_unref_node">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
    </interface>
    <interface name="TreeSortable" cname="GtkTreeSortable">
      <signal name="SortColumnChanged" cname="sort_column_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeSortable*" name="sortable" />
        </parameters>
      </signal>
      <virtual_method name="GetSortColumnId" cname="get_sort_column_id">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeSortable*" name="sortable" />
          <parameter type="gint*" name="sort_column_id" />
          <parameter type="GtkSortType*" name="order" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetSortColumnId" cname="set_sort_column_id">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeSortable*" name="sortable" />
          <parameter type="gint" name="sort_column_id" />
          <parameter type="GtkSortType" name="order" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetSortFunc" cname="set_sort_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeSortable*" name="sortable" />
          <parameter type="gint" name="sort_column_id" />
          <parameter type="GtkTreeIterCompareFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetDefaultSortFunc" cname="set_default_sort_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeSortable*" name="sortable" />
          <parameter type="GtkTreeIterCompareFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </virtual_method>
      <virtual_method name="HasDefaultSortFunc" cname="has_default_sort_func">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeSortable*" name="sortable" />
        </parameters>
      </virtual_method>
      <method name="GetSortColumnId" cname="gtk_tree_sortable_get_sort_column_id">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint*" name="sort_column_id" />
          <parameter type="GtkSortType*" name="order" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_tree_sortable_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HasDefaultSortFunc" cname="gtk_tree_sortable_has_default_sort_func">
        <return-type type="gboolean" />
      </method>
      <method name="SetDefaultSortFunc" cname="gtk_tree_sortable_set_default_sort_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIterCompareFunc" name="sort_func" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetSortColumnId" cname="gtk_tree_sortable_set_sort_column_id">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="sort_column_id" />
          <parameter type="GtkSortType" name="order" />
        </parameters>
      </method>
      <method name="SetSortFunc" cname="gtk_tree_sortable_set_sort_func">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="sort_column_id" />
          <parameter type="GtkTreeIterCompareFunc" name="sort_func" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SortColumnChanged" cname="gtk_tree_sortable_sort_column_changed">
        <return-type type="void" />
      </method>
    </interface>
    <object name="AccelGroup" cname="GtkAccelGroup" parent="GObject">
      <field name="LockCount" cname="lock_count" type="guint" />
      <field name="ModifierMask" cname="modifier_mask" type="GdkModifierType" />
      <field name="Acceleratables" cname="acceleratables" type="GSList*" />
      <field name="NAccels" cname="n_accels" type="guint" />
      <field name="PrivAccels" cname="priv_accels" type="GtkAccelGroupEntry*" />
      <signal name="AccelActivate" cname="accel_activate">
        <return-type type="gboolean" />
        <parameters>
          <parameter name="inst" type="GtkAccelGroup*" />
          <parameter name="p0" type="GObject*" />
          <parameter name="p1" type="guint32" />
          <parameter name="p2" type="GdkModifierType" />
        </parameters>
      </signal>
      <signal name="AccelChanged" cname="accel_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAccelGroup*" name="accel_group" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifier" />
          <parameter type="GClosure*" name="accel_closure" />
        </parameters>
      </signal>
      <method name="Activate" cname="gtk_accel_group_activate">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GQuark" name="accel_quark" />
          <parameter type="GObject*" name="acceleratable" />
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
        </parameters>
      </method>
      <method name="Connect" cname="gtk_accel_group_connect">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
          <parameter type="GtkAccelFlags" name="accel_flags" />
          <parameter type="GClosure*" name="closure" />
        </parameters>
      </method>
      <method name="ConnectByPath" cname="gtk_accel_group_connect_by_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
          <parameter type="GClosure*" name="closure" />
        </parameters>
      </method>
      <method name="Disconnect" cname="gtk_accel_group_disconnect">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GClosure*" name="closure" />
        </parameters>
      </method>
      <method name="DisconnectKey" cname="gtk_accel_group_disconnect_key">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
        </parameters>
      </method>
      <method name="Find" cname="gtk_accel_group_find">
        <return-type type="GtkAccelKey*" />
        <parameters>
          <parameter type="GtkAccelGroupFindFunc" name="find_func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="FromAccelClosure" cname="gtk_accel_group_from_accel_closure" shared="true">
        <return-type type="GtkAccelGroup*" />
        <parameters>
          <parameter type="GClosure*" name="closure" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_accel_group_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Lock" cname="gtk_accel_group_lock">
        <return-type type="void" />
      </method>
      <constructor cname="gtk_accel_group_new" />
      <method name="Query" cname="gtk_accel_group_query">
        <return-type type="GtkAccelGroupEntry*" />
        <parameters>
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
          <parameter type="guint*" name="n_entries" />
        </parameters>
      </method>
      <method name="Unlock" cname="gtk_accel_group_unlock">
        <return-type type="void" />
      </method>
    </object>
    <object name="AccelLabel" cname="GtkAccelLabel" parent="GtkLabel">
      <field name="GtkReserved" cname="gtk_reserved" type="guint" />
      <field name="AccelPadding" cname="accel_padding" type="guint" />
      <field name="AccelWidget" cname="accel_widget" type="GtkWidget*" />
      <field name="AccelClosure" cname="accel_closure" type="GClosure*" />
      <field name="AccelGroup" cname="accel_group" type="GtkAccelGroup*" />
      <field name="AccelString" cname="accel_string" type="gchar*" />
      <field name="AccelStringWidth" cname="accel_string_width" type="guint16" />
      <property name="AccelClosure" cname="accel_closure" type="GClosure" readable="true" writeable="true" />
      <property name="AccelWidget" cname="accel_widget" type="GtkWidget" readable="true" writeable="true" />
      <method name="GetAccelWidget" cname="gtk_accel_label_get_accel_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetAccelWidth" cname="gtk_accel_label_get_accel_width">
        <return-type type="guint" />
      </method>
      <method name="GetType" cname="gtk_accel_label_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_accel_label_new">
        <parameters>
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </constructor>
      <method name="Refetch" cname="gtk_accel_label_refetch">
        <return-type type="gboolean" />
      </method>
      <method name="SetAccelClosure" cname="gtk_accel_label_set_accel_closure">
        <return-type type="void" />
        <parameters>
          <parameter type="GClosure*" name="accel_closure" />
        </parameters>
      </method>
      <method name="SetAccelWidget" cname="gtk_accel_label_set_accel_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="accel_widget" />
        </parameters>
      </method>
    </object>
    <object name="AccelMap" cname="GtkAccelMap" parent="GObject">
      <signal name="Changed" cname="changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="GtkAccelMap*" />
          <parameter name="p0" type="gchar*" />
          <parameter name="p1" type="guint32" />
          <parameter name="p2" type="GdkModifierType" />
        </parameters>
      </signal>
      <method name="AddEntry" cname="gtk_accel_map_add_entry" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
        </parameters>
      </method>
      <method name="AddFilter" cname="gtk_accel_map_add_filter" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filter_pattern" />
        </parameters>
      </method>
      <method name="ChangeEntry" cname="gtk_accel_map_change_entry" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
          <parameter type="gboolean" name="replace" />
        </parameters>
      </method>
      <method name="Foreach" cname="gtk_accel_map_foreach" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="data" />
          <parameter type="GtkAccelMapForeach" name="foreach_func" />
        </parameters>
      </method>
      <method name="ForeachUnfiltered" cname="gtk_accel_map_foreach_unfiltered" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="data" />
          <parameter type="GtkAccelMapForeach" name="foreach_func" />
        </parameters>
      </method>
      <method name="Get" cname="gtk_accel_map_get" shared="true">
        <return-type type="GtkAccelMap*" />
      </method>
      <method name="GetType" cname="gtk_accel_map_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Load" cname="gtk_accel_map_load" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="file_name" />
        </parameters>
      </method>
      <method name="LoadFd" cname="gtk_accel_map_load_fd" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="fd" />
        </parameters>
      </method>
      <method name="LoadScanner" cname="gtk_accel_map_load_scanner" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GScanner*" name="scanner" />
        </parameters>
      </method>
      <method name="LockPath" cname="gtk_accel_map_lock_path" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
        </parameters>
      </method>
      <method name="LookupEntry" cname="gtk_accel_map_lookup_entry" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
          <parameter type="GtkAccelKey*" name="key" />
        </parameters>
      </method>
      <method name="Save" cname="gtk_accel_map_save" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="file_name" />
        </parameters>
      </method>
      <method name="SaveFd" cname="gtk_accel_map_save_fd" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="fd" />
        </parameters>
      </method>
      <method name="UnlockPath" cname="gtk_accel_map_unlock_path" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
        </parameters>
      </method>
    </object>
    <object name="Accessible" cname="GtkAccessible" parent="AtkObject">
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <virtual_method name="ConnectWidgetDestroyed" cname="connect_widget_destroyed">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAccessible*" name="accessible" />
        </parameters>
      </virtual_method>
      <method name="ConnectWidgetDestroyed" cname="gtk_accessible_connect_widget_destroyed">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_accessible_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="Action" cname="GtkAction" parent="GObject">
      <field name="PrivateData" cname="private_data" type="GtkActionPrivate*" />
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" />
      <property name="ShortLabel" cname="short_label" type="gchar*" readable="true" writeable="true" />
      <property name="Tooltip" cname="tooltip" type="gchar*" readable="true" writeable="true" />
      <property name="StockId" cname="stock_id" type="gchar*" readable="true" writeable="true" />
      <property name="VisibleHorizontal" cname="visible_horizontal" type="gboolean" readable="true" writeable="true" />
      <property name="VisibleVertical" cname="visible_vertical" type="gboolean" readable="true" writeable="true" />
      <property name="IsImportant" cname="is_important" type="gboolean" readable="true" writeable="true" />
      <property name="HideIfEmpty" cname="hide_if_empty" type="gboolean" readable="true" writeable="true" />
      <property name="Sensitive" cname="sensitive" type="gboolean" readable="true" writeable="true" />
      <property name="Visible" cname="visible" type="gboolean" readable="true" writeable="true" />
      <property name="ActionGroup" cname="action_group" type="GtkActionGroup" readable="true" writeable="true" />
      <signal name="Activate" cname="activate" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAction*" name="action" />
        </parameters>
      </signal>
      <virtual_method name="CreateMenuItem" cname="create_menu_item">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkAction*" name="action" />
        </parameters>
      </virtual_method>
      <virtual_method name="CreateToolItem" cname="create_tool_item">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkAction*" name="action" />
        </parameters>
      </virtual_method>
      <virtual_method name="ConnectProxy" cname="connect_proxy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAction*" name="action" />
          <parameter type="GtkWidget*" name="proxy" />
        </parameters>
      </virtual_method>
      <virtual_method name="DisconnectProxy" cname="disconnect_proxy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAction*" name="action" />
          <parameter type="GtkWidget*" name="proxy" />
        </parameters>
      </virtual_method>
      <method name="Activate" cname="gtk_action_activate">
        <return-type type="void" />
      </method>
      <method name="BlockActivateFrom" cname="gtk_action_block_activate_from">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="proxy" />
        </parameters>
      </method>
      <method name="ConnectAccelerator" cname="gtk_action_connect_accelerator">
        <return-type type="void" />
      </method>
      <method name="ConnectProxy" cname="gtk_action_connect_proxy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="proxy" />
        </parameters>
      </method>
      <method name="CreateIcon" cname="gtk_action_create_icon">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkIconSize" name="icon_size" />
        </parameters>
      </method>
      <method name="CreateMenuItem" cname="gtk_action_create_menu_item">
        <return-type type="GtkWidget*" />
      </method>
      <method name="CreateToolItem" cname="gtk_action_create_tool_item">
        <return-type type="GtkWidget*" />
      </method>
      <method name="DisconnectAccelerator" cname="gtk_action_disconnect_accelerator">
        <return-type type="void" />
      </method>
      <method name="DisconnectProxy" cname="gtk_action_disconnect_proxy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="proxy" />
        </parameters>
      </method>
      <method name="GetName" cname="gtk_action_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetProxies" cname="gtk_action_get_proxies">
        <return-type type="GSList*" />
      </method>
      <method name="GetSensitive" cname="gtk_action_get_sensitive">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_action_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisible" cname="gtk_action_get_visible">
        <return-type type="gboolean" />
      </method>
      <method name="IsSensitive" cname="gtk_action_is_sensitive">
        <return-type type="gboolean" />
      </method>
      <method name="IsVisible" cname="gtk_action_is_visible">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_action_new">
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="label" />
          <parameter type="const-gchar*" name="tooltip" />
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <method name="SetAccelGroup" cname="gtk_action_set_accel_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </method>
      <method name="SetAccelPath" cname="gtk_action_set_accel_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
        </parameters>
      </method>
      <method name="UnblockActivateFrom" cname="gtk_action_unblock_activate_from">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="proxy" />
        </parameters>
      </method>
    </object>
    <object name="ActionGroup" cname="GtkActionGroup" parent="GObject">
      <field name="PrivateData" cname="private_data" type="GtkActionGroupPrivate*" />
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="Sensitive" cname="sensitive" type="gboolean" readable="true" writeable="true" />
      <property name="Visible" cname="visible" type="gboolean" readable="true" writeable="true" />
      <signal name="ConnectProxy" cname="connect_proxy">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="GtkActionGroup*" />
          <parameter name="p0" type="GtkAction" />
          <parameter name="p1" type="GtkWidget" />
        </parameters>
      </signal>
      <signal name="DisconnectProxy" cname="disconnect_proxy">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="GtkActionGroup*" />
          <parameter name="p0" type="GtkAction" />
          <parameter name="p1" type="GtkWidget" />
        </parameters>
      </signal>
      <signal name="PreActivate" cname="pre_activate">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="GtkActionGroup*" />
          <parameter name="p0" type="GtkAction" />
        </parameters>
      </signal>
      <signal name="PostActivate" cname="post_activate">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="GtkActionGroup*" />
          <parameter name="p0" type="GtkAction" />
        </parameters>
      </signal>
      <virtual_method name="GetAction" cname="get_action">
        <return-type type="GtkAction*" />
        <parameters>
          <parameter type="GtkActionGroup*" name="action_group" />
          <parameter type="const-gchar*" name="action_name" />
        </parameters>
      </virtual_method>
      <method name="AddAction" cname="gtk_action_group_add_action">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAction*" name="action" />
        </parameters>
      </method>
      <method name="AddActionWithAccel" cname="gtk_action_group_add_action_with_accel">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAction*" name="action" />
          <parameter type="const-gchar*" name="accelerator" />
        </parameters>
      </method>
      <method name="AddActions" cname="gtk_action_group_add_actions">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkActionEntry*" name="entries" />
          <parameter type="guint" name="n_entries" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="AddActionsFull" cname="gtk_action_group_add_actions_full">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkActionEntry*" name="entries" />
          <parameter type="guint" name="n_entries" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="AddRadioActions" cname="gtk_action_group_add_radio_actions">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRadioActionEntry*" name="entries" />
          <parameter type="guint" name="n_entries" />
          <parameter type="gint" name="value" />
          <parameter type="GCallback" name="on_change" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="AddRadioActionsFull" cname="gtk_action_group_add_radio_actions_full">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRadioActionEntry*" name="entries" />
          <parameter type="guint" name="n_entries" />
          <parameter type="gint" name="value" />
          <parameter type="GCallback" name="on_change" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="AddToggleActions" cname="gtk_action_group_add_toggle_actions">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToggleActionEntry*" name="entries" />
          <parameter type="guint" name="n_entries" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="AddToggleActionsFull" cname="gtk_action_group_add_toggle_actions_full">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToggleActionEntry*" name="entries" />
          <parameter type="guint" name="n_entries" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="GetAction" cname="gtk_action_group_get_action">
        <return-type type="GtkAction*" />
        <parameters>
          <parameter type="const-gchar*" name="action_name" />
        </parameters>
      </method>
      <method name="GetName" cname="gtk_action_group_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetSensitive" cname="gtk_action_group_get_sensitive">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_action_group_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisible" cname="gtk_action_group_get_visible">
        <return-type type="gboolean" />
      </method>
      <method name="ListActions" cname="gtk_action_group_list_actions">
        <return-type type="GList*" />
      </method>
      <constructor cname="gtk_action_group_new">
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </constructor>
      <method name="RemoveAction" cname="gtk_action_group_remove_action">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAction*" name="action" />
        </parameters>
      </method>
      <method name="SetSensitive" cname="gtk_action_group_set_sensitive">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="sensitive" />
        </parameters>
      </method>
      <method name="SetTranslateFunc" cname="gtk_action_group_set_translate_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTranslateFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="SetTranslationDomain" cname="gtk_action_group_set_translation_domain">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="domain" />
        </parameters>
      </method>
      <method name="SetVisible" cname="gtk_action_group_set_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible" />
        </parameters>
      </method>
    </object>
    <object name="Adjustment" cname="GtkAdjustment" parent="GtkObject">
      <field name="Lower" cname="lower" type="gdouble" />
      <field name="Upper" cname="upper" type="gdouble" />
      <field name="Value" cname="value" type="gdouble" />
      <field name="StepIncrement" cname="step_increment" type="gdouble" />
      <field name="PageIncrement" cname="page_increment" type="gdouble" />
      <field name="PageSize" cname="page_size" type="gdouble" />
      <property name="Value" cname="value" type="gdouble" readable="true" writeable="true" />
      <property name="Lower" cname="lower" type="gdouble" readable="true" writeable="true" />
      <property name="Upper" cname="upper" type="gdouble" readable="true" writeable="true" />
      <property name="StepIncrement" cname="step-increment" type="gdouble" readable="true" writeable="true" />
      <property name="PageIncrement" cname="page-increment" type="gdouble" readable="true" writeable="true" />
      <property name="PageSize" cname="page-size" type="gdouble" readable="true" writeable="true" />
      <signal name="Changed" cname="changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </signal>
      <signal name="ValueChanged" cname="value_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </signal>
      <method name="Changed" cname="gtk_adjustment_changed">
        <return-type type="void" />
      </method>
      <method name="ClampPage" cname="gtk_adjustment_clamp_page">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="lower" />
          <parameter type="gdouble" name="upper" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_adjustment_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValue" cname="gtk_adjustment_get_value">
        <return-type type="gdouble" />
      </method>
      <constructor cname="gtk_adjustment_new">
        <parameters>
          <parameter type="gdouble" name="value" />
          <parameter type="gdouble" name="lower" />
          <parameter type="gdouble" name="upper" />
          <parameter type="gdouble" name="step_increment" />
          <parameter type="gdouble" name="page_increment" />
          <parameter type="gdouble" name="page_size" />
        </parameters>
      </constructor>
      <method name="SetValue" cname="gtk_adjustment_set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="value" />
        </parameters>
      </method>
      <method name="ValueChanged" cname="gtk_adjustment_value_changed">
        <return-type type="void" />
      </method>
    </object>
    <object name="Alignment" cname="GtkAlignment" parent="GtkBin">
      <field name="Xalign" cname="xalign" type="gfloat" />
      <field name="Yalign" cname="yalign" type="gfloat" />
      <field name="Xscale" cname="xscale" type="gfloat" />
      <field name="Yscale" cname="yscale" type="gfloat" />
      <property name="Xalign" cname="xalign" type="gfloat" readable="true" writeable="true" />
      <property name="Yalign" cname="yalign" type="gfloat" readable="true" writeable="true" />
      <property name="Xscale" cname="xscale" type="gfloat" readable="true" writeable="true" />
      <property name="Yscale" cname="yscale" type="gfloat" readable="true" writeable="true" />
      <property name="TopPadding" cname="top_padding" type="guint" readable="true" writeable="true" />
      <property name="BottomPadding" cname="bottom_padding" type="guint" readable="true" writeable="true" />
      <property name="LeftPadding" cname="left_padding" type="guint" readable="true" writeable="true" />
      <property name="RightPadding" cname="right_padding" type="guint" readable="true" writeable="true" />
      <method name="GetPadding" cname="gtk_alignment_get_padding">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="padding_top" />
          <parameter type="guint*" name="padding_bottom" />
          <parameter type="guint*" name="padding_left" />
          <parameter type="guint*" name="padding_right" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_alignment_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_alignment_new">
        <parameters>
          <parameter type="gfloat" name="xalign" />
          <parameter type="gfloat" name="yalign" />
          <parameter type="gfloat" name="xscale" />
          <parameter type="gfloat" name="yscale" />
        </parameters>
      </constructor>
      <method name="Set" cname="gtk_alignment_set">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="xalign" />
          <parameter type="gfloat" name="yalign" />
          <parameter type="gfloat" name="xscale" />
          <parameter type="gfloat" name="yscale" />
        </parameters>
      </method>
      <method name="SetPadding" cname="gtk_alignment_set_padding">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="padding_top" />
          <parameter type="guint" name="padding_bottom" />
          <parameter type="guint" name="padding_left" />
          <parameter type="guint" name="padding_right" />
        </parameters>
      </method>
    </object>
    <object name="Arrow" cname="GtkArrow" parent="GtkMisc">
      <field name="ArrowType" cname="arrow_type" type="gint16" />
      <field name="ShadowType" cname="shadow_type" type="gint16" />
      <property name="ArrowType" cname="arrow_type" type="GtkArrowType" readable="true" writeable="true" />
      <property name="ShadowType" cname="shadow_type" type="GtkShadowType" readable="true" writeable="true" />
      <method name="GetType" cname="gtk_arrow_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_arrow_new">
        <parameters>
          <parameter type="GtkArrowType" name="arrow_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
        </parameters>
      </constructor>
      <method name="Set" cname="gtk_arrow_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkArrowType" name="arrow_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
        </parameters>
      </method>
    </object>
    <object name="AspectFrame" cname="GtkAspectFrame" parent="GtkFrame">
      <field name="Xalign" cname="xalign" type="gfloat" />
      <field name="Yalign" cname="yalign" type="gfloat" />
      <field name="Ratio" cname="ratio" type="gfloat" />
      <field name="ObeyChild" cname="obey_child" type="gboolean" />
      <field name="CenterAllocation" cname="center_allocation" type="GtkAllocation" />
      <property name="Xalign" cname="xalign" type="gfloat" readable="true" writeable="true" />
      <property name="Yalign" cname="yalign" type="gfloat" readable="true" writeable="true" />
      <property name="Ratio" cname="ratio" type="gfloat" readable="true" writeable="true" />
      <property name="ObeyChild" cname="obey_child" type="gboolean" readable="true" writeable="true" />
      <method name="GetType" cname="gtk_aspect_frame_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_aspect_frame_new">
        <parameters>
          <parameter type="const-gchar*" name="label" />
          <parameter type="gfloat" name="xalign" />
          <parameter type="gfloat" name="yalign" />
          <parameter type="gfloat" name="ratio" />
          <parameter type="gboolean" name="obey_child" />
        </parameters>
      </constructor>
      <method name="Set" cname="gtk_aspect_frame_set">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="xalign" />
          <parameter type="gfloat" name="yalign" />
          <parameter type="gfloat" name="ratio" />
          <parameter type="gboolean" name="obey_child" />
        </parameters>
      </method>
    </object>
    <object name="Bin" cname="GtkBin" parent="GtkContainer">
      <field name="Child" cname="child" type="GtkWidget*" />
      <method name="GetChild" cname="gtk_bin_get_child">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetType" cname="gtk_bin_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="Box" cname="GtkBox" parent="GtkContainer">
      <field name="Children" cname="children" type="GList*" access="public" />
      <field name="Spacing" cname="spacing" type="gint16" access="public" />
      <field name="Homogeneous" cname="homogeneous" bits="1" type="guint" access="public" />
      <property name="Spacing" cname="spacing" type="gint" readable="true" writeable="true" />
      <property name="Homogeneous" cname="homogeneous" type="gboolean" readable="true" writeable="true" />
      <childprop name="Expand" cname="expand" type="gboolean" readable="true" writeable="true" />
      <childprop name="Fill" cname="fill" type="gboolean" readable="true" writeable="true" />
      <childprop name="Padding" cname="padding" type="guint" readable="true" writeable="true" />
      <childprop name="PackType" cname="pack_type" type="GtkPackType" readable="true" writeable="true" />
      <childprop name="Position" cname="position" type="gint" readable="true" writeable="true" />
      <method name="GetHomogeneous" cname="gtk_box_get_homogeneous">
        <return-type type="gboolean" />
      </method>
      <method name="GetSpacing" cname="gtk_box_get_spacing">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="PackEnd" cname="gtk_box_pack_end">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="expand" />
          <parameter type="gboolean" name="fill" />
          <parameter type="guint" name="padding" />
        </parameters>
      </method>
      <method name="PackEndDefaults" cname="gtk_box_pack_end_defaults">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="PackStart" cname="gtk_box_pack_start">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="expand" />
          <parameter type="gboolean" name="fill" />
          <parameter type="guint" name="padding" />
        </parameters>
      </method>
      <method name="PackStartDefaults" cname="gtk_box_pack_start_defaults">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="QueryChildPacking" cname="gtk_box_query_child_packing">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean*" name="expand" />
          <parameter type="gboolean*" name="fill" />
          <parameter type="guint*" name="padding" />
          <parameter type="GtkPackType*" name="pack_type" />
        </parameters>
      </method>
      <method name="ReorderChild" cname="gtk_box_reorder_child">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetChildPacking" cname="gtk_box_set_child_packing">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="expand" />
          <parameter type="gboolean" name="fill" />
          <parameter type="guint" name="padding" />
          <parameter type="GtkPackType" name="pack_type" />
        </parameters>
      </method>
      <method name="SetHomogeneous" cname="gtk_box_set_homogeneous">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="homogeneous" />
        </parameters>
      </method>
      <method name="SetSpacing" cname="gtk_box_set_spacing">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="spacing" />
        </parameters>
      </method>
    </object>
    <object name="Button" cname="GtkButton" parent="GtkBin">
      <field name="EventWindow" cname="event_window" type="GdkWindow*" />
      <field name="LabelText" cname="label_text" type="gchar*" />
      <field name="ActivateTimeout" cname="activate_timeout" type="guint" />
      <field name="Constructed" cname="constructed" bits="1" type="guint" />
      <field name="InButton" cname="in_button" bits="1" type="guint" />
      <field name="ButtonDown" cname="button_down" bits="1" type="guint" />
      <field name="Relief" cname="relief" bits="2" type="guint" />
      <field name="UseUnderline" cname="use_underline" bits="1" type="guint" />
      <field name="UseStock" cname="use_stock" bits="1" type="guint" />
      <field name="Depressed" cname="depressed" bits="1" type="guint" />
      <field name="DepressOnActivate" cname="depress_on_activate" bits="1" type="guint" />
      <field name="FocusOnClick" cname="focus_on_click" bits="1" type="guint" />
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" construct="true" />
      <property name="UseUnderline" cname="use_underline" type="gboolean" readable="true" writeable="true" construct="true" />
      <property name="UseStock" cname="use_stock" type="gboolean" readable="true" writeable="true" construct="true" />
      <property name="FocusOnClick" cname="focus_on_click" type="gboolean" readable="true" writeable="true" />
      <property name="Relief" cname="relief" type="GtkReliefStyle" readable="true" writeable="true" />
      <property name="Xalign" cname="xalign" type="gfloat" readable="true" writeable="true" />
      <property name="Yalign" cname="yalign" type="gfloat" readable="true" writeable="true" />
      <signal name="Pressed" cname="pressed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkButton*" name="button" />
        </parameters>
      </signal>
      <signal name="Released" cname="released" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkButton*" name="button" />
        </parameters>
      </signal>
      <signal name="Clicked" cname="clicked" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkButton*" name="button" />
        </parameters>
      </signal>
      <signal name="Enter" cname="enter" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkButton*" name="button" />
        </parameters>
      </signal>
      <signal name="Leave" cname="leave" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkButton*" name="button" />
        </parameters>
      </signal>
      <signal name="Activate" cname="activate" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkButton*" name="button" />
        </parameters>
      </signal>
      <method name="ActionGetType" cname="gtk_button_action_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Clicked" cname="gtk_button_clicked">
        <return-type type="void" />
      </method>
      <method name="Enter" cname="gtk_button_enter">
        <return-type type="void" />
      </method>
      <method name="GetAlignment" cname="gtk_button_get_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat*" name="xalign" />
          <parameter type="gfloat*" name="yalign" />
        </parameters>
      </method>
      <method name="GetFocusOnClick" cname="gtk_button_get_focus_on_click">
        <return-type type="gboolean" />
      </method>
      <method name="GetLabel" cname="gtk_button_get_label">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetRelief" cname="gtk_button_get_relief">
        <return-type type="GtkReliefStyle" />
      </method>
      <method name="GetType" cname="gtk_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseStock" cname="gtk_button_get_use_stock">
        <return-type type="gboolean" />
      </method>
      <method name="GetUseUnderline" cname="gtk_button_get_use_underline">
        <return-type type="gboolean" />
      </method>
      <method name="Leave" cname="gtk_button_leave">
        <return-type type="void" />
      </method>
      <constructor cname="gtk_button_new" />
      <constructor cname="gtk_button_new_from_stock">
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <constructor cname="gtk_button_new_with_label">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_button_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="Pressed" cname="gtk_button_pressed">
        <return-type type="void" />
      </method>
      <method name="Released" cname="gtk_button_released">
        <return-type type="void" />
      </method>
      <method name="SetAlignment" cname="gtk_button_set_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="xalign" />
          <parameter type="gfloat" name="yalign" />
        </parameters>
      </method>
      <method name="SetFocusOnClick" cname="gtk_button_set_focus_on_click">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="focus_on_click" />
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_button_set_label">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </method>
      <method name="SetRelief" cname="gtk_button_set_relief">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkReliefStyle" name="newstyle" />
        </parameters>
      </method>
      <method name="SetUseStock" cname="gtk_button_set_use_stock">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_stock" />
        </parameters>
      </method>
      <method name="SetUseUnderline" cname="gtk_button_set_use_underline">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_underline" />
        </parameters>
      </method>
    </object>
    <object name="ButtonBox" cname="GtkButtonBox" parent="GtkBox">
      <field name="ChildMinWidth" cname="child_min_width" type="gint" />
      <field name="ChildMinHeight" cname="child_min_height" type="gint" />
      <field name="ChildIpadX" cname="child_ipad_x" type="gint" />
      <field name="ChildIpadY" cname="child_ipad_y" type="gint" />
      <field name="LayoutStyle" cname="layout_style" type="GtkButtonBoxStyle" />
      <property name="LayoutStyle" cname="layout_style" type="GtkButtonBoxStyle" readable="true" writeable="true" />
      <childprop name="Secondary" cname="secondary" type="gboolean" readable="true" writeable="true" />
      <method name="GetChildIpadding" cname="gtk_button_box_get_child_ipadding" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="ipad_x" />
          <parameter type="gint*" name="ipad_y" />
        </parameters>
      </method>
      <method name="GetChildSecondary" cname="gtk_button_box_get_child_secondary">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="GetChildSize" cname="gtk_button_box_get_child_size" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="min_width" />
          <parameter type="gint*" name="min_height" />
        </parameters>
      </method>
      <method name="GetLayout" cname="gtk_button_box_get_layout">
        <return-type type="GtkButtonBoxStyle" />
      </method>
      <method name="GetType" cname="gtk_button_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetChildIpadding" cname="gtk_button_box_set_child_ipadding" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="ipad_x" />
          <parameter type="gint" name="ipad_y" />
        </parameters>
      </method>
      <method name="SetChildSecondary" cname="gtk_button_box_set_child_secondary">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="is_secondary" />
        </parameters>
      </method>
      <method name="SetChildSize" cname="gtk_button_box_set_child_size" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="min_width" />
          <parameter type="gint" name="min_height" />
        </parameters>
      </method>
      <method name="SetLayout" cname="gtk_button_box_set_layout">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkButtonBoxStyle" name="layout_style" />
        </parameters>
      </method>
    </object>
    <object name="Calendar" cname="GtkCalendar" parent="GtkWidget">
      <field name="HeaderStyle" cname="header_style" type="GtkStyle*" />
      <field name="LabelStyle" cname="label_style" type="GtkStyle*" />
      <field name="Month" cname="month" type="gint" />
      <field name="Year" cname="year" type="gint" />
      <field name="SelectedDay" cname="selected_day" type="gint" />
      <field name="DayMonth" cname="day_month" array_len="6][7" type="gint" />
      <field name="Day" cname="day" array_len="6][7" type="gint" />
      <field name="NumMarkedDates" cname="num_marked_dates" type="gint" />
      <field name="MarkedDate" cname="marked_date" array_len="31" type="gint" />
      <field name="DisplayFlags" cname="display_flags" type="GtkCalendarDisplayOptions" />
      <field name="MarkedDateColor" cname="marked_date_color" array_len="31" type="GdkColor" />
      <field name="Gc" cname="gc" type="GdkGC*" />
      <field name="XorGc" cname="xor_gc" type="GdkGC*" />
      <field name="FocusRow" cname="focus_row" type="gint" />
      <field name="FocusCol" cname="focus_col" type="gint" />
      <field name="HighlightRow" cname="highlight_row" type="gint" />
      <field name="HighlightCol" cname="highlight_col" type="gint" />
      <field name="PrivateData" cname="private_data" type="gpointer" />
      <field name="GrowSpace" cname="grow_space" array_len="32" type="gchar" />
      <callback cname="_gtk_reserved1">
        <return-type type="void" />
        <parameters>
          <parameter type="void" name="arg1" />
        </parameters>
      </callback>
      <callback cname="_gtk_reserved2">
        <return-type type="void" />
        <parameters>
          <parameter type="void" name="arg1" />
        </parameters>
      </callback>
      <callback cname="_gtk_reserved3">
        <return-type type="void" />
        <parameters>
          <parameter type="void" name="arg1" />
        </parameters>
      </callback>
      <callback cname="_gtk_reserved4">
        <return-type type="void" />
        <parameters>
          <parameter type="void" name="arg1" />
        </parameters>
      </callback>
      <property name="Year" cname="year" type="gint" readable="true" writeable="true" />
      <property name="Month" cname="month" type="gint" readable="true" writeable="true" />
      <property name="Day" cname="day" type="gint" readable="true" writeable="true" />
      <property name="ShowHeading" cname="show_heading" type="gboolean" readable="true" writeable="true" />
      <property name="ShowDayNames" cname="show_day_names" type="gboolean" readable="true" writeable="true" />
      <property name="NoMonthChange" cname="no_month_change" type="gboolean" readable="true" writeable="true" />
      <property name="ShowWeekNumbers" cname="show_week_numbers" type="gboolean" readable="true" writeable="true" />
      <signal name="MonthChanged" cname="month_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCalendar*" name="calendar" />
        </parameters>
      </signal>
      <signal name="DaySelected" cname="day_selected" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCalendar*" name="calendar" />
        </parameters>
      </signal>
      <signal name="DaySelectedDoubleClick" cname="day_selected_double_click" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCalendar*" name="calendar" />
        </parameters>
      </signal>
      <signal name="PrevMonth" cname="prev_month" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCalendar*" name="calendar" />
        </parameters>
      </signal>
      <signal name="NextMonth" cname="next_month" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCalendar*" name="calendar" />
        </parameters>
      </signal>
      <signal name="PrevYear" cname="prev_year" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCalendar*" name="calendar" />
        </parameters>
      </signal>
      <signal name="NextYear" cname="next_year" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCalendar*" name="calendar" />
        </parameters>
      </signal>
      <method name="ClearMarks" cname="gtk_calendar_clear_marks">
        <return-type type="void" />
      </method>
      <method name="DisplayOptions" cname="gtk_calendar_display_options" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCalendarDisplayOptions" name="flags" />
        </parameters>
      </method>
      <method name="Freeze" cname="gtk_calendar_freeze">
        <return-type type="void" />
      </method>
      <method name="GetDate" cname="gtk_calendar_get_date">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="year" />
          <parameter type="guint*" name="month" />
          <parameter type="guint*" name="day" />
        </parameters>
      </method>
      <method name="GetDisplayOptions" cname="gtk_calendar_get_display_options">
        <return-type type="GtkCalendarDisplayOptions" />
      </method>
      <method name="GetType" cname="gtk_calendar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="MarkDay" cname="gtk_calendar_mark_day">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="day" />
        </parameters>
      </method>
      <constructor cname="gtk_calendar_new" />
      <method name="SelectDay" cname="gtk_calendar_select_day">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="day" />
        </parameters>
      </method>
      <method name="SelectMonth" cname="gtk_calendar_select_month">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="month" />
          <parameter type="guint" name="year" />
        </parameters>
      </method>
      <method name="SetDisplayOptions" cname="gtk_calendar_set_display_options">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCalendarDisplayOptions" name="flags" />
        </parameters>
      </method>
      <method name="Thaw" cname="gtk_calendar_thaw">
        <return-type type="void" />
      </method>
      <method name="UnmarkDay" cname="gtk_calendar_unmark_day">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="day" />
        </parameters>
      </method>
    </object>
    <object name="CellRenderer" cname="GtkCellRenderer" parent="GtkObject">
      <field name="Xalign" cname="xalign" type="gfloat" />
      <field name="Yalign" cname="yalign" type="gfloat" />
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
      <field name="Xpad" cname="xpad" type="guint16" />
      <field name="Ypad" cname="ypad" type="guint16" />
      <field name="Mode" cname="mode" bits="2" type="guint" />
      <field name="Visible" cname="visible" bits="1" type="guint" />
      <field name="IsExpander" cname="is_expander" bits="1" type="guint" />
      <field name="IsExpanded" cname="is_expanded" bits="1" type="guint" />
      <field name="CellBackgroundSet" cname="cell_background_set" bits="1" type="guint" />
      <signal name="EditingCanceled" cname="editing-canceled" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
        </parameters>
      </signal>
      <property name="Mode" cname="mode" type="GtkCellRendererMode" readable="true" writeable="true" />
      <property name="Visible" cname="visible" type="gboolean" readable="true" writeable="true" />
      <property name="Xalign" cname="xalign" type="gfloat" readable="true" writeable="true" />
      <property name="Yalign" cname="yalign" type="gfloat" readable="true" writeable="true" />
      <property name="Xpad" cname="xpad" type="guint" readable="true" writeable="true" />
      <property name="Ypad" cname="ypad" type="guint" readable="true" writeable="true" />
      <property name="Width" cname="width" type="gint" readable="true" writeable="true" />
      <property name="Height" cname="height" type="gint" readable="true" writeable="true" />
      <property name="IsExpander" cname="is_expander" type="gboolean" readable="true" writeable="true" />
      <property name="IsExpanded" cname="is_expanded" type="gboolean" readable="true" writeable="true" />
      <property name="CellBackground" cname="cell_background" type="gchar*" writeable="true" />
      <property name="CellBackgroundGdk" cname="cell_background_gdk" type="GdkColor" readable="true" writeable="true" />
      <virtual_method name="GetSize" cname="get_size">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkRectangle*" name="cell_area" />
          <parameter type="gint*" name="x_offset" />
          <parameter type="gint*" name="y_offset" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="Render" cname="render">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="GdkDrawable*" name="window" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkRectangle*" name="background_area" />
          <parameter type="GdkRectangle*" name="cell_area" />
          <parameter type="GdkRectangle*" name="expose_area" />
          <parameter type="GtkCellRendererState" name="flags" />
        </parameters>
      </virtual_method>
      <virtual_method name="Activate" cname="activate">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="path" />
          <parameter type="GdkRectangle*" name="background_area" />
          <parameter type="GdkRectangle*" name="cell_area" />
          <parameter type="GtkCellRendererState" name="flags" />
        </parameters>
      </virtual_method>
      <virtual_method name="StartEditing" cname="start_editing">
        <return-type type="GtkCellEditable*" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="path" />
          <parameter type="GdkRectangle*" name="background_area" />
          <parameter type="GdkRectangle*" name="cell_area" />
          <parameter type="GtkCellRendererState" name="flags" />
        </parameters>
      </virtual_method>
      <method name="Activate" cname="gtk_cell_renderer_activate">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="path" />
          <parameter type="GdkRectangle*" name="background_area" />
          <parameter type="GdkRectangle*" name="cell_area" />
          <parameter type="GtkCellRendererState" name="flags" />
        </parameters>
      </method>
      <method name="EditingCanceled" cname="gtk_cell_renderer_editing_canceled">
        <return-type type="void" />
      </method>
      <method name="GetFixedSize" cname="gtk_cell_renderer_get_fixed_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetSize" cname="gtk_cell_renderer_get_size">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkRectangle*" name="cell_area" />
          <parameter type="gint*" name="x_offset" />
          <parameter type="gint*" name="y_offset" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_cell_renderer_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Render" cname="gtk_cell_renderer_render">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkRectangle*" name="background_area" />
          <parameter type="GdkRectangle*" name="cell_area" />
          <parameter type="GdkRectangle*" name="expose_area" />
          <parameter type="GtkCellRendererState" name="flags" />
        </parameters>
      </method>
      <method name="SetFixedSize" cname="gtk_cell_renderer_set_fixed_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="StartEditing" cname="gtk_cell_renderer_start_editing">
        <return-type type="GtkCellEditable*" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="path" />
          <parameter type="GdkRectangle*" name="background_area" />
          <parameter type="GdkRectangle*" name="cell_area" />
          <parameter type="GtkCellRendererState" name="flags" />
        </parameters>
      </method>
    </object>
    <object name="CellRendererPixbuf" cname="GtkCellRendererPixbuf" parent="GtkCellRenderer">
      <field name="Pixbuf" cname="pixbuf" type="GdkPixbuf*" />
      <field name="PixbufExpanderOpen" cname="pixbuf_expander_open" type="GdkPixbuf*" />
      <field name="PixbufExpanderClosed" cname="pixbuf_expander_closed" type="GdkPixbuf*" />
      <property name="Pixbuf" cname="pixbuf" type="GdkPixbuf" readable="true" writeable="true" />
      <property name="PixbufExpanderOpen" cname="pixbuf_expander_open" type="GdkPixbuf" readable="true" writeable="true" />
      <property name="PixbufExpanderClosed" cname="pixbuf_expander_closed" type="GdkPixbuf" readable="true" writeable="true" />
      <property name="StockId" cname="stock_id" type="gchar*" readable="true" writeable="true" />
      <property name="StockSize" cname="stock_size" type="guint" readable="true" writeable="true" />
      <property name="StockDetail" cname="stock_detail" type="gchar*" readable="true" writeable="true" />
      <method name="GetType" cname="gtk_cell_renderer_pixbuf_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_cell_renderer_pixbuf_new" />
    </object>
    <object name="CellRendererSepText" cname="GtkCellRendererSepText" parent="GtkCellRendererText" />
    <object name="CellRendererText" cname="GtkCellRendererText" parent="GtkCellRenderer">
      <field name="Text" cname="text" type="gchar*" />
      <field name="Font" cname="font" type="PangoFontDescription*" />
      <field name="FontScale" cname="font_scale" type="gdouble" />
      <field name="Foreground" cname="foreground" type="PangoColor" />
      <field name="Background" cname="background" type="PangoColor" />
      <field name="ExtraAttrs" cname="extra_attrs" type="PangoAttrList*" />
      <field name="UnderlineStyle" cname="underline_style" type="PangoUnderline" />
      <field name="Rise" cname="rise" type="gint" />
      <field name="FixedHeightRows" cname="fixed_height_rows" type="gint" />
      <field name="Strikethrough" cname="strikethrough" bits="1" type="guint" />
      <field name="Editable" cname="editable" bits="1" type="guint" />
      <field name="ScaleSet" cname="scale_set" bits="1" type="guint" />
      <field name="ForegroundSet" cname="foreground_set" bits="1" type="guint" />
      <field name="BackgroundSet" cname="background_set" bits="1" type="guint" />
      <field name="UnderlineSet" cname="underline_set" bits="1" type="guint" />
      <field name="RiseSet" cname="rise_set" bits="1" type="guint" />
      <field name="StrikethroughSet" cname="strikethrough_set" bits="1" type="guint" />
      <field name="EditableSet" cname="editable_set" bits="1" type="guint" />
      <field name="CalcFixedHeight" cname="calc_fixed_height" bits="1" type="guint" />
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" />
      <property name="Markup" cname="markup" type="gchar*" writeable="true" />
      <property name="Attributes" cname="attributes" type="PangoAttrList" readable="true" writeable="true" />
      <property name="SingleParagraphMode" cname="single_paragraph_mode" type="gboolean" readable="true" writeable="true" />
      <property name="Background" cname="background" type="gchar*" writeable="true" />
      <property name="BackgroundGdk" cname="background_gdk" type="GdkColor" readable="true" writeable="true" />
      <property name="Foreground" cname="foreground" type="gchar*" writeable="true" />
      <property name="ForegroundGdk" cname="foreground_gdk" type="GdkColor" readable="true" writeable="true" />
      <property name="Editable" cname="editable" type="gboolean" readable="true" writeable="true" />
      <property name="Font" cname="font" type="gchar*" readable="true" writeable="true" />
      <property name="FontDesc" cname="font_desc" type="PangoFontDescription" readable="true" writeable="true" />
      <property name="Family" cname="family" type="gchar*" readable="true" writeable="true" />
      <property name="Style" cname="style" type="PangoStyle" readable="true" writeable="true" />
      <property name="Variant" cname="variant" type="PangoVariant" readable="true" writeable="true" />
      <property name="Weight" cname="weight" type="gint" readable="true" writeable="true" />
      <property name="Stretch" cname="stretch" type="PangoStretch" readable="true" writeable="true" />
      <property name="Size" cname="size" type="gint" readable="true" writeable="true" />
      <property name="SizePoints" cname="size_points" type="gdouble" readable="true" writeable="true" />
      <property name="Scale" cname="scale" type="gdouble" readable="true" writeable="true" />
      <property name="Rise" cname="rise" type="gint" readable="true" writeable="true" />
      <property name="Strikethrough" cname="strikethrough" type="gboolean" readable="true" writeable="true" />
      <property name="Underline" cname="underline" type="PangoUnderline" readable="true" writeable="true" />
      <property name="Language" cname="language" type="gchar*" readable="true" writeable="true" />
      <signal name="Edited" cname="edited" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRendererText*" name="cell_renderer_text" />
          <parameter type="const-gchar*" name="path" />
          <parameter type="const-gchar*" name="new_text" />
        </parameters>
      </signal>
      <method name="GetType" cname="gtk_cell_renderer_text_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_cell_renderer_text_new" />
      <method name="SetFixedHeightFromFont" cname="gtk_cell_renderer_text_set_fixed_height_from_font">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="number_of_rows" />
        </parameters>
      </method>
    </object>
    <object name="CellRendererToggle" cname="GtkCellRendererToggle" parent="GtkCellRenderer">
      <field name="Active" cname="active" bits="1" type="guint" />
      <field name="Activatable" cname="activatable" bits="1" type="guint" />
      <field name="Radio" cname="radio" bits="1" type="guint" />
      <property name="Active" cname="active" type="gboolean" readable="true" writeable="true" />
      <property name="Inconsistent" cname="inconsistent" type="gboolean" readable="true" writeable="true" />
      <property name="Activatable" cname="activatable" type="gboolean" readable="true" writeable="true" />
      <property name="Radio" cname="radio" type="gboolean" readable="true" writeable="true" />
      <signal name="Toggled" cname="toggled" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRendererToggle*" name="cell_renderer_toggle" />
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </signal>
      <method name="GetActive" cname="gtk_cell_renderer_toggle_get_active">
        <return-type type="gboolean" />
      </method>
      <method name="GetRadio" cname="gtk_cell_renderer_toggle_get_radio">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_cell_renderer_toggle_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_cell_renderer_toggle_new" />
      <method name="SetActive" cname="gtk_cell_renderer_toggle_set_active">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetRadio" cname="gtk_cell_renderer_toggle_set_radio">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="radio" />
        </parameters>
      </method>
    </object>
    <object name="CellView" cname="GtkCellView" parent="GtkWidget">
      <field name="Priv" cname="priv" type="GtkCellViewPrivate*" />
      <property name="Background" cname="background" type="gchar*" writeable="true" />
      <property name="BackgroundGdk" cname="background_gdk" type="GdkColor" readable="true" writeable="true" />
      <implements>
        <interface cname="GtkCellLayout" />
      </implements>
      <method name="GetDisplayedRow" cname="gtk_cell_view_get_displayed_row">
        <return-type type="GtkTreePath*" />
      </method>
      <method name="GetSizeOfRow" cname="gtk_cell_view_get_size_of_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkRequisition*" name="requisition" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_cell_view_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_cell_view_new" />
      <constructor cname="gtk_cell_view_new_with_markup">
        <parameters>
          <parameter type="const-gchar*" name="markup" />
        </parameters>
      </constructor>
      <constructor cname="gtk_cell_view_new_with_pixbuf">
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </constructor>
      <constructor cname="gtk_cell_view_new_with_text">
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </constructor>
      <method name="SetBackgroundColor" cname="gtk_cell_view_set_background_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetDisplayedRow" cname="gtk_cell_view_set_displayed_row">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="SetModel" cname="gtk_cell_view_set_model">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_cell_view_set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="renderer" />
          <parameter type="gchar*" name="property" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="SetValues" cname="gtk_cell_view_set_values">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="renderer" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
    </object>
    <object name="CellViewMenuItem" cname="GtkCellViewMenuItem" parent="GtkMenuItem">
      <field name="Priv" cname="priv" type="GtkCellViewMenuItemPrivate*" />
      <method name="GetType" cname="gtk_cell_view_menu_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_cell_view_menu_item_new" />
      <constructor cname="gtk_cell_view_menu_item_new_from_model">
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </constructor>
      <constructor cname="gtk_cell_view_menu_item_new_with_markup">
        <parameters>
          <parameter type="const-gchar*" name="markup" />
        </parameters>
      </constructor>
      <constructor cname="gtk_cell_view_menu_item_new_with_pixbuf">
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </constructor>
      <constructor cname="gtk_cell_view_menu_item_new_with_text">
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </constructor>
    </object>
    <object name="CheckButton" cname="GtkCheckButton" parent="GtkToggleButton">
      <virtual_method name="DrawIndicator" cname="draw_indicator">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCheckButton*" name="check_button" />
          <parameter type="GdkRectangle*" name="area" />
        </parameters>
      </virtual_method>
      <method name="GetType" cname="gtk_check_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_check_button_new" />
      <constructor cname="gtk_check_button_new_with_label">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_check_button_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
    </object>
    <object name="CheckMenuItem" cname="GtkCheckMenuItem" parent="GtkMenuItem">
      <field name="Active" cname="active" bits="1" type="guint" />
      <field name="AlwaysShowToggle" cname="always_show_toggle" bits="1" type="guint" />
      <field name="Inconsistent" cname="inconsistent" bits="1" type="guint" />
      <field name="DrawAsRadio" cname="draw_as_radio" bits="1" type="guint" />
      <property name="Active" cname="active" type="gboolean" readable="true" writeable="true" />
      <property name="Inconsistent" cname="inconsistent" type="gboolean" readable="true" writeable="true" />
      <property name="DrawAsRadio" cname="draw_as_radio" type="gboolean" readable="true" writeable="true" />
      <signal name="Toggled" cname="toggled" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCheckMenuItem*" name="check_menu_item" />
        </parameters>
      </signal>
      <virtual_method name="DrawIndicator" cname="draw_indicator">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCheckMenuItem*" name="check_menu_item" />
          <parameter type="GdkRectangle*" name="area" />
        </parameters>
      </virtual_method>
      <method name="GetActive" cname="gtk_check_menu_item_get_active">
        <return-type type="gboolean" />
      </method>
      <method name="GetDrawAsRadio" cname="gtk_check_menu_item_get_draw_as_radio">
        <return-type type="gboolean" />
      </method>
      <method name="GetInconsistent" cname="gtk_check_menu_item_get_inconsistent">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_check_menu_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_check_menu_item_new" />
      <constructor cname="gtk_check_menu_item_new_with_label">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_check_menu_item_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetActive" cname="gtk_check_menu_item_set_active">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_active" />
        </parameters>
      </method>
      <method name="SetDrawAsRadio" cname="gtk_check_menu_item_set_draw_as_radio">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="draw_as_radio" />
        </parameters>
      </method>
      <method name="SetInconsistent" cname="gtk_check_menu_item_set_inconsistent">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetShowToggle" cname="gtk_check_menu_item_set_show_toggle" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="always" />
        </parameters>
      </method>
      <method name="Toggled" cname="gtk_check_menu_item_toggled">
        <return-type type="void" />
      </method>
    </object>
    <object name="Clipboard" cname="GtkClipboard" parent="GObject">
      <method name="Clear" cname="gtk_clipboard_clear">
        <return-type type="void" />
      </method>
      <method name="Get" cname="gtk_clipboard_get" shared="true">
        <return-type type="GtkClipboard*" />
        <parameters>
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </method>
      <method name="GetDisplay" cname="gtk_clipboard_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetForDisplay" cname="gtk_clipboard_get_for_display" shared="true">
        <return-type type="GtkClipboard*" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </method>
      <method name="GetOwner" cname="gtk_clipboard_get_owner">
        <return-type type="GObject*" />
      </method>
      <method name="GetType" cname="gtk_clipboard_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="RequestContents" cname="gtk_clipboard_request_contents">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkAtom" name="target" />
          <parameter type="GtkClipboardReceivedFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="RequestTargets" cname="gtk_clipboard_request_targets">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboardTargetsReceivedFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="RequestText" cname="gtk_clipboard_request_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboardTextReceivedFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="SetText" cname="gtk_clipboard_set_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
        </parameters>
      </method>
      <method name="SetWithData" cname="gtk_clipboard_set_with_data">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="guint" name="n_targets" />
          <parameter type="GtkClipboardGetFunc" name="get_func" />
          <parameter type="GtkClipboardClearFunc" name="clear_func" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="SetWithOwner" cname="gtk_clipboard_set_with_owner">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="guint" name="n_targets" />
          <parameter type="GtkClipboardGetFunc" name="get_func" />
          <parameter type="GtkClipboardClearFunc" name="clear_func" />
          <parameter type="GObject*" name="owner" />
        </parameters>
      </method>
      <method name="WaitForContents" cname="gtk_clipboard_wait_for_contents">
        <return-type type="GtkSelectionData*" />
        <parameters>
          <parameter type="GdkAtom" name="target" />
        </parameters>
      </method>
      <method name="WaitForTargets" cname="gtk_clipboard_wait_for_targets">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom**" name="targets" />
          <parameter type="gint*" name="n_targets" />
        </parameters>
      </method>
      <method name="WaitForText" cname="gtk_clipboard_wait_for_text">
        <return-type type="gchar*" />
      </method>
      <method name="WaitIsTextAvailable" cname="gtk_clipboard_wait_is_text_available">
        <return-type type="gboolean" />
      </method>
    </object>
    <object name="ColorButton" cname="GtkColorButton" parent="GtkButton">
      <field name="Priv" cname="priv" type="GtkColorButtonPrivate*" />
      <property name="UseAlpha" cname="use_alpha" type="gboolean" readable="true" writeable="true" />
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true" />
      <property name="Color" cname="color" type="GdkColor" readable="true" writeable="true" />
      <property name="Alpha" cname="alpha" type="guint" readable="true" writeable="true" />
      <signal name="ColorSet" cname="color_set" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkColorButton*" name="cp" />
        </parameters>
      </signal>
      <method name="GetAlpha" cname="gtk_color_button_get_alpha">
        <return-type type="guint16" />
      </method>
      <method name="GetColor" cname="gtk_color_button_get_color">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="GetTitle" cname="gtk_color_button_get_title">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_color_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseAlpha" cname="gtk_color_button_get_use_alpha">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_color_button_new" />
      <constructor cname="gtk_color_button_new_with_color">
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </constructor>
      <method name="SetAlpha" cname="gtk_color_button_set_alpha">
        <return-type type="void" />
        <parameters>
          <parameter type="guint16" name="alpha" />
        </parameters>
      </method>
      <method name="SetColor" cname="gtk_color_button_set_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_color_button_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetUseAlpha" cname="gtk_color_button_set_use_alpha">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_alpha" />
        </parameters>
      </method>
    </object>
    <object name="ColorSelection" cname="GtkColorSelection" parent="GtkVBox">
      <field name="PrivateData" cname="private_data" type="gpointer" />
      <property name="HasOpacityControl" cname="has_opacity_control" type="gboolean" readable="true" writeable="true" />
      <property name="HasPalette" cname="has_palette" type="gboolean" readable="true" writeable="true" />
      <property name="CurrentColor" cname="current_color" type="GdkColor" readable="true" writeable="true" />
      <property name="CurrentAlpha" cname="current_alpha" type="guint" readable="true" writeable="true" />
      <signal name="ColorChanged" cname="color_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkColorSelection*" name="color_selection" />
        </parameters>
      </signal>
      <method name="GetColor" cname="gtk_color_selection_get_color" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="color" />
        </parameters>
      </method>
      <method name="GetCurrentAlpha" cname="gtk_color_selection_get_current_alpha">
        <return-type type="guint16" />
      </method>
      <method name="GetCurrentColor" cname="gtk_color_selection_get_current_color">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="GetHasOpacityControl" cname="gtk_color_selection_get_has_opacity_control">
        <return-type type="gboolean" />
      </method>
      <method name="GetHasPalette" cname="gtk_color_selection_get_has_palette">
        <return-type type="gboolean" />
      </method>
      <method name="GetPreviousAlpha" cname="gtk_color_selection_get_previous_alpha">
        <return-type type="guint16" />
      </method>
      <method name="GetPreviousColor" cname="gtk_color_selection_get_previous_color">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_color_selection_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsAdjusting" cname="gtk_color_selection_is_adjusting">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_color_selection_new" />
      <method name="PaletteFromString" cname="gtk_color_selection_palette_from_string" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
          <parameter type="GdkColor**" name="colors" />
          <parameter type="gint*" name="n_colors" />
        </parameters>
      </method>
      <method name="PaletteToString" cname="gtk_color_selection_palette_to_string" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GdkColor*" name="colors" />
          <parameter type="gint" name="n_colors" />
        </parameters>
      </method>
      <method name="SetChangePaletteHook" cname="gtk_color_selection_set_change_palette_hook" deprecated="1" shared="true">
        <return-type type="GtkColorSelectionChangePaletteFunc" />
        <parameters>
          <parameter type="GtkColorSelectionChangePaletteFunc" name="func" />
        </parameters>
      </method>
      <method name="SetChangePaletteWithScreenHook" cname="gtk_color_selection_set_change_palette_with_screen_hook" shared="true">
        <return-type type="GtkColorSelectionChangePaletteWithScreenFunc" />
        <parameters>
          <parameter type="GtkColorSelectionChangePaletteWithScreenFunc" name="func" />
        </parameters>
      </method>
      <method name="SetColor" cname="gtk_color_selection_set_color" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="color" />
        </parameters>
      </method>
      <method name="SetCurrentAlpha" cname="gtk_color_selection_set_current_alpha">
        <return-type type="void" />
        <parameters>
          <parameter type="guint16" name="alpha" />
        </parameters>
      </method>
      <method name="SetCurrentColor" cname="gtk_color_selection_set_current_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetHasOpacityControl" cname="gtk_color_selection_set_has_opacity_control">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="has_opacity" />
        </parameters>
      </method>
      <method name="SetHasPalette" cname="gtk_color_selection_set_has_palette">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="has_palette" />
        </parameters>
      </method>
      <method name="SetPreviousAlpha" cname="gtk_color_selection_set_previous_alpha">
        <return-type type="void" />
        <parameters>
          <parameter type="guint16" name="alpha" />
        </parameters>
      </method>
      <method name="SetPreviousColor" cname="gtk_color_selection_set_previous_color">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="SetUpdatePolicy" cname="gtk_color_selection_set_update_policy" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkUpdateType" name="policy" />
        </parameters>
      </method>
    </object>
    <object name="ColorSelectionDialog" cname="GtkColorSelectionDialog" parent="GtkDialog">
      <field name="Colorsel" cname="colorsel" type="GtkWidget*" />
      <field name="OkButton" cname="ok_button" type="GtkWidget*" />
      <field name="CancelButton" cname="cancel_button" type="GtkWidget*" />
      <field name="HelpButton" cname="help_button" type="GtkWidget*" />
      <method name="GetType" cname="gtk_color_selection_dialog_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_color_selection_dialog_new">
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </constructor>
    </object>
    <object name="Combo" cname="GtkCombo" deprecated="1" parent="GtkHBox">
      <field name="Entry" cname="entry" type="GtkWidget*" access="public" />
      <field name="Button" cname="button" type="GtkWidget*" />
      <field name="Popup" cname="popup" type="GtkWidget*" />
      <field name="Popwin" cname="popwin" type="GtkWidget*" />
      <field name="List" cname="list" type="GtkWidget*" access="public" />
      <field name="EntryChangeId" cname="entry_change_id" type="guint" />
      <field name="ListChangeId" cname="list_change_id" type="guint" />
      <field name="ValueInList" cname="value_in_list" bits="1" type="guint" />
      <field name="OkIfEmpty" cname="ok_if_empty" bits="1" type="guint" />
      <field name="CaseSensitive" cname="case_sensitive" bits="1" type="guint" />
      <field name="UseArrows" cname="use_arrows" bits="1" type="guint" />
      <field name="UseArrowsAlways" cname="use_arrows_always" bits="1" type="guint" />
      <field name="CurrentButton" cname="current_button" type="guint16" />
      <field name="ActivateId" cname="activate_id" type="guint" />
      <property name="EnableArrowKeys" cname="enable_arrow_keys" type="gboolean" readable="true" writeable="true" />
      <property name="EnableArrowsAlways" cname="enable_arrows_always" type="gboolean" readable="true" writeable="true" />
      <property name="CaseSensitive" cname="case_sensitive" type="gboolean" readable="true" writeable="true" />
      <property name="AllowEmpty" cname="allow_empty" type="gboolean" readable="true" writeable="true" />
      <property name="ValueInList" cname="value_in_list" type="gboolean" readable="true" writeable="true" />
      <method name="DisableActivate" cname="gtk_combo_disable_activate" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_combo_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_combo_new" deprecated="1" />
      <method name="SetCaseSensitive" cname="gtk_combo_set_case_sensitive" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="val" />
        </parameters>
      </method>
      <method name="SetItemString" cname="gtk_combo_set_item_string" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkItem*" name="item" />
          <parameter type="const-gchar*" name="item_value" />
        </parameters>
      </method>
      <method name="SetPopdownStrings" cname="gtk_combo_set_popdown_strings" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="strings" />
        </parameters>
      </method>
      <method name="SetUseArrows" cname="gtk_combo_set_use_arrows" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="val" />
        </parameters>
      </method>
      <method name="SetUseArrowsAlways" cname="gtk_combo_set_use_arrows_always" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="val" />
        </parameters>
      </method>
      <method name="SetValueInList" cname="gtk_combo_set_value_in_list" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="val" />
          <parameter type="gboolean" name="ok_if_empty" />
        </parameters>
      </method>
    </object>
    <object name="ComboBox" cname="GtkComboBox" parent="GtkBin">
      <field name="Priv" cname="priv" type="GtkComboBoxPrivate*" />
      <signal name="Changed" cname="changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkComboBox*" name="combo_box" />
        </parameters>
      </signal>
      <property name="Model" cname="model" type="GtkTreeModel" readable="true" writeable="true" />
      <property name="WrapWidth" cname="wrap_width" type="gint" readable="true" writeable="true" />
      <property name="RowSpanColumn" cname="row_span_column" type="gint" readable="true" writeable="true" />
      <property name="ColumnSpanColumn" cname="column_span_column" type="gint" readable="true" writeable="true" />
      <property name="Active" cname="active" type="gint" readable="true" writeable="true" />
      <implements>
        <interface cname="GtkCellLayout" />
      </implements>
      <method name="AppendText" cname="gtk_combo_box_append_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="GetActive" cname="gtk_combo_box_get_active">
        <return-type type="gint" />
      </method>
      <method name="GetActiveIter" cname="gtk_combo_box_get_active_iter">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetModel" cname="gtk_combo_box_get_model">
        <return-type type="GtkTreeModel*" />
      </method>
      <method name="GetType" cname="gtk_combo_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InsertText" cname="gtk_combo_box_insert_text">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <constructor cname="gtk_combo_box_new" />
      <constructor cname="gtk_combo_box_new_text" />
      <constructor cname="gtk_combo_box_new_with_model">
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
        </parameters>
      </constructor>
      <method name="Popdown" cname="gtk_combo_box_popdown">
        <return-type type="void" />
      </method>
      <method name="Popup" cname="gtk_combo_box_popup">
        <return-type type="void" />
      </method>
      <method name="PrependText" cname="gtk_combo_box_prepend_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="RemoveText" cname="gtk_combo_box_remove_text">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetActive" cname="gtk_combo_box_set_active">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="index" />
        </parameters>
      </method>
      <method name="SetActiveIter" cname="gtk_combo_box_set_active_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="SetColumnSpanColumn" cname="gtk_combo_box_set_column_span_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column_span" />
        </parameters>
      </method>
      <method name="SetModel" cname="gtk_combo_box_set_model">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
        </parameters>
      </method>
      <method name="SetRowSpanColumn" cname="gtk_combo_box_set_row_span_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="row_span" />
        </parameters>
      </method>
      <method name="SetWrapWidth" cname="gtk_combo_box_set_wrap_width">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
        </parameters>
      </method>
    </object>
    <object name="ComboBoxEntry" cname="GtkComboBoxEntry" parent="GtkComboBox">
      <field name="Priv" cname="priv" type="GtkComboBoxEntryPrivate*" />
      <property name="TextColumn" cname="text_column" type="gint" readable="true" writeable="true" />
      <method name="GetTextColumn" cname="gtk_combo_box_entry_get_text_column">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_combo_box_entry_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_combo_box_entry_new" />
      <constructor cname="gtk_combo_box_entry_new_text" />
      <constructor cname="gtk_combo_box_entry_new_with_model">
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
          <parameter type="gint" name="text_column" />
        </parameters>
      </constructor>
      <method name="SetTextColumn" cname="gtk_combo_box_entry_set_text_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="text_column" />
        </parameters>
      </method>
    </object>
    <object name="Container" cname="GtkContainer" parent="GtkWidget">
      <field name="FocusChild" cname="focus_child" type="GtkWidget*" />
      <field name="BorderWidth" cname="border_width" bits="16" type="guint" />
      <field name="NeedResize" cname="need_resize" bits="1" type="guint" />
      <field name="ResizeMode" cname="resize_mode" bits="2" type="guint" />
      <field name="ReallocateRedraws" cname="reallocate_redraws" bits="1" type="guint" />
      <field name="HasFocusChain" cname="has_focus_chain" bits="1" type="guint" />
      <property name="ResizeMode" cname="resize_mode" type="GtkResizeMode" readable="true" writeable="true" />
      <property name="BorderWidth" cname="border_width" type="guint" readable="true" writeable="true" />
      <property name="Child" cname="child" type="GtkWidget" writeable="true" />
      <signal name="Add" cname="add" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkContainer*" name="container" />
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </signal>
      <signal name="Remove" cname="remove" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkContainer*" name="container" />
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </signal>
      <signal name="CheckResize" cname="check_resize" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkContainer*" name="container" />
        </parameters>
      </signal>
      <signal name="SetFocusChild" cname="set-focus-child" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkContainer*" name="container" />
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </signal>
      <virtual_method name="Forall" cname="forall">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkContainer*" name="container" />
          <parameter type="gboolean" name="include_internals" />
          <parameter type="GtkCallback" name="callback" />
          <parameter type="gpointer" name="callback_data" />
        </parameters>
      </virtual_method>
      <virtual_method name="ChildType" cname="child_type">
        <return-type type="GType" />
        <parameters>
          <parameter type="GtkContainer*" name="container" />
        </parameters>
      </virtual_method>
      <virtual_method name="CompositeName" cname="composite_name">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GtkContainer*" name="container" />
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetChildProperty" cname="set_child_property">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkContainer*" name="container" />
          <parameter type="GtkWidget*" name="child" />
          <parameter type="guint" name="property_id" />
          <parameter type="const-GValue*" name="value" />
          <parameter type="GParamSpec*" name="pspec" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetChildProperty" cname="get_child_property">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkContainer*" name="container" />
          <parameter type="GtkWidget*" name="child" />
          <parameter type="guint" name="property_id" />
          <parameter type="GValue*" name="value" />
          <parameter type="GParamSpec*" name="pspec" />
        </parameters>
      </virtual_method>
      <method name="Add" cname="gtk_container_add">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="AddWithProperties" cname="gtk_container_add_with_properties">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="first_prop_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="CheckResize" cname="gtk_container_check_resize">
        <return-type type="void" />
      </method>
      <method name="ChildGet" cname="gtk_container_child_get">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="first_prop_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="ChildGetProperty" cname="gtk_container_child_get_property">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="property_name" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="ChildGetValist" cname="gtk_container_child_get_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="ChildSet" cname="gtk_container_child_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="first_prop_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="ChildSetProperty" cname="gtk_container_child_set_property">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="property_name" />
          <parameter type="const-GValue*" name="value" />
        </parameters>
      </method>
      <method name="ChildSetValist" cname="gtk_container_child_set_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="ChildType" cname="gtk_container_child_type">
        <return-type type="GType" />
      </method>
      <method name="ClassFindChildProperty" cname="gtk_container_class_find_child_property" shared="true">
        <return-type type="GParamSpec*" />
        <parameters>
          <parameter type="GObjectClass*" name="cclass" />
          <parameter type="const-gchar*" name="property_name" />
        </parameters>
      </method>
      <method name="ClassInstallChildProperty" cname="gtk_container_class_install_child_property" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkContainerClass*" name="cclass" />
          <parameter type="guint" name="property_id" />
          <parameter type="GParamSpec*" name="pspec" />
        </parameters>
      </method>
      <method name="ClassListChildProperties" cname="gtk_container_class_list_child_properties" shared="true">
        <return-type type="GParamSpec**" />
        <parameters>
          <parameter type="GObjectClass*" name="cclass" />
          <parameter type="guint*" name="n_properties" />
        </parameters>
      </method>
      <method name="Forall" cname="gtk_container_forall">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCallback" name="callback" />
          <parameter type="gpointer" name="callback_data" />
        </parameters>
      </method>
      <method name="Foreach" cname="gtk_container_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCallback" name="callback" />
          <parameter type="gpointer" name="callback_data" />
        </parameters>
      </method>
      <method name="ForeachFull" cname="gtk_container_foreach_full" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCallback" name="callback" />
          <parameter type="GtkCallbackMarshal" name="marshal" />
          <parameter type="gpointer" name="callback_data" />
          <parameter type="GtkDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="GetBorderWidth" cname="gtk_container_get_border_width">
        <return-type type="guint" />
      </method>
      <method name="GetChildren" cname="gtk_container_get_children">
        <return-type type="GList*" />
      </method>
      <method name="GetFocusChain" cname="gtk_container_get_focus_chain">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GList**" name="focusable_widgets" />
        </parameters>
      </method>
      <method name="GetFocusHadjustment" cname="gtk_container_get_focus_hadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetFocusVadjustment" cname="gtk_container_get_focus_vadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetResizeMode" cname="gtk_container_get_resize_mode">
        <return-type type="GtkResizeMode" />
      </method>
      <method name="GetType" cname="gtk_container_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="PropagateExpose" cname="gtk_container_propagate_expose">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GdkEventExpose*" name="event" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_container_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="ResizeChildren" cname="gtk_container_resize_children">
        <return-type type="void" />
      </method>
      <method name="SetBorderWidth" cname="gtk_container_set_border_width">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="border_width" />
        </parameters>
      </method>
      <method name="SetFocusChain" cname="gtk_container_set_focus_chain">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="focusable_widgets" />
        </parameters>
      </method>
      <method name="SetFocusChild" cname="gtk_container_set_focus_child">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="SetFocusHadjustment" cname="gtk_container_set_focus_hadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetFocusVadjustment" cname="gtk_container_set_focus_vadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetReallocateRedraws" cname="gtk_container_set_reallocate_redraws">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="needs_redraws" />
        </parameters>
      </method>
      <method name="SetResizeMode" cname="gtk_container_set_resize_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkResizeMode" name="resize_mode" />
        </parameters>
      </method>
      <method name="UnsetFocusChain" cname="gtk_container_unset_focus_chain">
        <return-type type="void" />
      </method>
    </object>
    <object name="Curve" cname="GtkCurve" parent="GtkDrawingArea">
      <field name="CursorType" cname="cursor_type" type="gint" />
      <field name="MinX" cname="min_x" type="gfloat" />
      <field name="MaxX" cname="max_x" type="gfloat" />
      <field name="MinY" cname="min_y" type="gfloat" />
      <field name="MaxY" cname="max_y" type="gfloat" />
      <field name="Pixmap" cname="pixmap" type="GdkPixmap*" />
      <field name="CurveType" cname="curve_type" type="GtkCurveType" />
      <field name="Height" cname="height" type="gint" />
      <field name="GrabPoint" cname="grab_point" type="gint" />
      <field name="Last" cname="last" type="gint" />
      <field name="NumPoints" cname="num_points" type="gint" />
      <field name="Point" cname="point" type="GdkPoint*" />
      <field name="NumCtlpoints" cname="num_ctlpoints" type="gint" />
      <field name="Ctlpoint" cname="(*ctlpoint)[2]" type="gfloat" />
      <property name="CurveType" cname="curve_type" type="GtkCurveType" readable="true" writeable="true" />
      <property name="MinX" cname="min_x" type="gfloat" readable="true" writeable="true" />
      <property name="MaxX" cname="max_x" type="gfloat" readable="true" writeable="true" />
      <property name="MinY" cname="min_y" type="gfloat" readable="true" writeable="true" />
      <property name="MaxY" cname="max_y" type="gfloat" readable="true" writeable="true" />
      <signal name="CurveTypeChanged" cname="curve_type_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCurve*" name="curve" />
        </parameters>
      </signal>
      <method name="GetType" cname="gtk_curve_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVector" cname="gtk_curve_get_vector">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="veclen" />
          <parameter type="gfloat" array="true" name="vector" />
        </parameters>
      </method>
      <constructor cname="gtk_curve_new" />
      <method name="Reset" cname="gtk_curve_reset">
        <return-type type="void" />
      </method>
      <method name="SetCurveType" cname="gtk_curve_set_curve_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCurveType" name="type" />
        </parameters>
      </method>
      <method name="SetGamma" cname="gtk_curve_set_gamma">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="gamma_" />
        </parameters>
      </method>
      <method name="SetRange" cname="gtk_curve_set_range">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="min_x" />
          <parameter type="gfloat" name="max_x" />
          <parameter type="gfloat" name="min_y" />
          <parameter type="gfloat" name="max_y" />
        </parameters>
      </method>
      <method name="SetVector" cname="gtk_curve_set_vector">
        <return-type type="void" />
        <parameters>
          <parameter type="int" name="veclen" />
          <parameter type="gfloat" array="true" name="vector" />
        </parameters>
      </method>
    </object>
    <object name="Dialog" cname="GtkDialog" parent="GtkWindow">
      <field name="Vbox" cname="vbox" type="GtkWidget*" access="public" />
      <field name="ActionArea" cname="action_area" type="GtkWidget*" access="public" />
      <field name="Separator" cname="separator" type="GtkWidget*" />
      <property name="HasSeparator" cname="has_separator" type="gboolean" readable="true" writeable="true" />
      <signal name="Response" cname="response" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkDialog*" name="dialog" />
          <parameter type="gint" name="response_id" />
        </parameters>
      </signal>
      <signal name="Close" cname="close" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkDialog*" name="dialog" />
        </parameters>
      </signal>
      <method name="AddActionWidget" cname="gtk_dialog_add_action_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gint" name="response_id" />
        </parameters>
      </method>
      <method name="AddButton" cname="gtk_dialog_add_button">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-gchar*" name="button_text" />
          <parameter type="gint" name="response_id" />
        </parameters>
      </method>
      <method name="AddButtons" cname="gtk_dialog_add_buttons">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="first_button_text" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="GetHasSeparator" cname="gtk_dialog_get_has_separator">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_dialog_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_dialog_new" />
      <constructor cname="gtk_dialog_new_with_buttons">
        <parameters>
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="GtkDialogFlags" name="flags" />
          <parameter type="const-gchar*" name="first_button_text" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <method name="Response" cname="gtk_dialog_response">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="response_id" />
        </parameters>
      </method>
      <method name="Run" cname="gtk_dialog_run">
        <return-type type="gint" />
      </method>
      <method name="SetDefaultResponse" cname="gtk_dialog_set_default_response">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="response_id" />
        </parameters>
      </method>
      <method name="SetHasSeparator" cname="gtk_dialog_set_has_separator">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetResponseSensitive" cname="gtk_dialog_set_response_sensitive">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="response_id" />
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
    </object>
    <object name="DrawingArea" cname="GtkDrawingArea" parent="GtkWidget">
      <field name="DrawData" cname="draw_data" type="gpointer" />
      <method name="GetType" cname="gtk_drawing_area_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_drawing_area_new" />
      <method name="Size" cname="gtk_drawing_area_size" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
    </object>
    <object name="Entry" cname="GtkEntry" parent="GtkWidget">
      <field name="Text" cname="text" type="gchar*" />
      <field name="Editable" cname="editable" bits="1" type="guint" />
      <field name="Visible" cname="visible" bits="1" type="guint" />
      <field name="OverwriteMode" cname="overwrite_mode" bits="1" type="guint" />
      <field name="InDrag" cname="in_drag" bits="1" type="guint" />
      <field name="TextLength" cname="text_length" type="guint16" />
      <field name="TextMaxLength" cname="text_max_length" type="guint16" />
      <field name="TextArea" cname="text_area" type="GdkWindow*" />
      <field name="ImContext" cname="im_context" type="GtkIMContext*" />
      <field name="PopupMenu" cname="popup_menu" type="GtkWidget*" />
      <field name="CurrentPos" cname="current_pos" type="gint" />
      <field name="SelectionBound" cname="selection_bound" type="gint" />
      <field name="CachedLayout" cname="cached_layout" type="PangoLayout*" />
      <field name="CacheIncludesPreedit" cname="cache_includes_preedit" bits="1" type="guint" />
      <field name="NeedImReset" cname="need_im_reset" bits="1" type="guint" />
      <field name="HasFrame" cname="has_frame" bits="1" type="guint" />
      <field name="ActivatesDefault" cname="activates_default" bits="1" type="guint" />
      <field name="CursorVisible" cname="cursor_visible" bits="1" type="guint" />
      <field name="InClick" cname="in_click" bits="1" type="guint" />
      <field name="IsCellRenderer" cname="is_cell_renderer" bits="1" type="guint" />
      <field name="EditingCanceled" cname="editing_canceled" bits="1" type="guint" />
      <field name="MouseCursorObscured" cname="mouse_cursor_obscured" bits="1" type="guint" />
      <field name="SelectWords" cname="select_words" bits="1" type="guint" />
      <field name="SelectLines" cname="select_lines" bits="1" type="guint" />
      <field name="ResolvedDir" cname="resolved_dir" bits="4" type="guint" />
      <field name="Button" cname="button" type="guint" />
      <field name="BlinkTimeout" cname="blink_timeout" type="guint" />
      <field name="RecomputeIdle" cname="recompute_idle" type="guint" />
      <field name="ScrollOffset" cname="scroll_offset" type="gint" />
      <field name="Ascent" cname="ascent" type="gint" />
      <field name="Descent" cname="descent" type="gint" />
      <field name="TextSize" cname="text_size" type="guint16" />
      <field name="NBytes" cname="n_bytes" type="guint16" />
      <field name="PreeditLength" cname="preedit_length" type="guint16" />
      <field name="PreeditCursor" cname="preedit_cursor" type="guint16" />
      <field name="DndPosition" cname="dnd_position" type="gint" />
      <field name="DragStartX" cname="drag_start_x" type="gint" />
      <field name="DragStartY" cname="drag_start_y" type="gint" />
      <field name="InvisibleChar" cname="invisible_char" type="gunichar" />
      <field name="WidthChars" cname="width_chars" type="gint" />
      <property name="CursorPosition" cname="cursor_position" type="gint" readable="true" />
      <property name="SelectionBound" cname="selection_bound" type="gint" readable="true" />
      <property name="Editable" cname="editable" type="gboolean" readable="true" writeable="true" />
      <property name="MaxLength" cname="max_length" type="gint" readable="true" writeable="true" />
      <property name="Visibility" cname="visibility" type="gboolean" readable="true" writeable="true" />
      <property name="HasFrame" cname="has_frame" type="gboolean" readable="true" writeable="true" />
      <property name="InvisibleChar" cname="invisible_char" type="gunichar" readable="true" writeable="true" />
      <property name="ActivatesDefault" cname="activates_default" type="gboolean" readable="true" writeable="true" />
      <property name="WidthChars" cname="width_chars" type="gint" readable="true" writeable="true" />
      <property name="ScrollOffset" cname="scroll_offset" type="gint" readable="true" />
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" />
      <property name="Xalign" cname="xalign" type="gfloat" readable="true" writeable="true" />
      <signal name="PopulatePopup" cname="populate_popup" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntry*" name="entry" />
          <parameter type="GtkMenu*" name="menu" />
        </parameters>
      </signal>
      <signal name="Activate" cname="activate" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntry*" name="entry" />
        </parameters>
      </signal>
      <signal name="MoveCursor" cname="move_cursor" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntry*" name="entry" />
          <parameter type="GtkMovementStep" name="step" />
          <parameter type="gint" name="count" />
          <parameter type="gboolean" name="extend_selection" />
        </parameters>
      </signal>
      <signal name="InsertAtCursor" cname="insert_at_cursor" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntry*" name="entry" />
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </signal>
      <signal name="DeleteFromCursor" cname="delete_from_cursor" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntry*" name="entry" />
          <parameter type="GtkDeleteType" name="type" />
          <parameter type="gint" name="count" />
        </parameters>
      </signal>
      <signal name="CutClipboard" cname="cut_clipboard" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntry*" name="entry" />
        </parameters>
      </signal>
      <signal name="CopyClipboard" cname="copy_clipboard" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntry*" name="entry" />
        </parameters>
      </signal>
      <signal name="PasteClipboard" cname="paste_clipboard" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntry*" name="entry" />
        </parameters>
      </signal>
      <signal name="ToggleOverwrite" cname="toggle_overwrite" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntry*" name="entry" />
        </parameters>
      </signal>
      <implements>
        <interface cname="GtkEditable" />
        <interface cname="GtkCellEditable" />
      </implements>
      <method name="AppendText" cname="gtk_entry_append_text" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="GetActivatesDefault" cname="gtk_entry_get_activates_default">
        <return-type type="gboolean" />
      </method>
      <method name="GetAlignment" cname="gtk_entry_get_alignment">
        <return-type type="gfloat" />
      </method>
      <method name="GetCompletion" cname="gtk_entry_get_completion">
        <return-type type="GtkEntryCompletion*" />
      </method>
      <method name="GetHasFrame" cname="gtk_entry_get_has_frame">
        <return-type type="gboolean" />
      </method>
      <method name="GetInvisibleChar" cname="gtk_entry_get_invisible_char">
        <return-type type="gunichar" />
      </method>
      <method name="GetLayout" cname="gtk_entry_get_layout">
        <return-type type="PangoLayout*" />
      </method>
      <method name="GetLayoutOffsets" cname="gtk_entry_get_layout_offsets">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetMaxLength" cname="gtk_entry_get_max_length">
        <return-type type="gint" />
      </method>
      <method name="GetText" cname="gtk_entry_get_text">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_entry_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisibility" cname="gtk_entry_get_visibility">
        <return-type type="gboolean" />
      </method>
      <method name="GetWidthChars" cname="gtk_entry_get_width_chars">
        <return-type type="gint" />
      </method>
      <constructor cname="gtk_entry_new" />
      <constructor cname="gtk_entry_new_with_max_length" deprecated="1">
        <parameters>
          <parameter type="gint" name="max" />
        </parameters>
      </constructor>
      <method name="PrependText" cname="gtk_entry_prepend_text" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="SelectRegion" cname="gtk_entry_select_region" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="start" />
          <parameter type="gint" name="end" />
        </parameters>
      </method>
      <method name="SetActivatesDefault" cname="gtk_entry_set_activates_default">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetAlignment" cname="gtk_entry_set_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="xalign" />
        </parameters>
      </method>
      <method name="SetCompletion" cname="gtk_entry_set_completion">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntryCompletion*" name="completion" />
        </parameters>
      </method>
      <method name="SetEditable" cname="gtk_entry_set_editable" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="editable" />
        </parameters>
      </method>
      <method name="SetHasFrame" cname="gtk_entry_set_has_frame">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetInvisibleChar" cname="gtk_entry_set_invisible_char">
        <return-type type="void" />
        <parameters>
          <parameter type="gunichar" name="ch" />
        </parameters>
      </method>
      <method name="SetMaxLength" cname="gtk_entry_set_max_length">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="max" />
        </parameters>
      </method>
      <method name="SetPosition" cname="gtk_entry_set_position" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetText" cname="gtk_entry_set_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="SetVisibility" cname="gtk_entry_set_visibility">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible" />
        </parameters>
      </method>
      <method name="SetWidthChars" cname="gtk_entry_set_width_chars">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="n_chars" />
        </parameters>
      </method>
    </object>
    <object name="EntryCompletion" cname="GtkEntryCompletion" parent="GObject">
      <field name="Priv" cname="priv" type="GtkEntryCompletionPrivate*" />
      <signal name="MatchSelected" cname="match_selected" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkEntryCompletion*" name="completion" />
          <parameter type="GtkTreeModel*" name="model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </signal>
      <signal name="ActionActivated" cname="action_activated" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntryCompletion*" name="completion" />
          <parameter type="gint" name="index" />
        </parameters>
      </signal>
      <property name="Model" cname="model" type="GtkTreeModel" readable="true" writeable="true" />
      <property name="MinimumKeyLength" cname="minimum_key_length" type="gint" readable="true" writeable="true" />
      <implements>
        <interface cname="GtkCellLayout" />
      </implements>
      <method name="Complete" cname="gtk_entry_completion_complete">
        <return-type type="void" />
      </method>
      <method name="DeleteAction" cname="gtk_entry_completion_delete_action">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="index" />
        </parameters>
      </method>
      <method name="GetEntry" cname="gtk_entry_completion_get_entry">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetMinimumKeyLength" cname="gtk_entry_completion_get_minimum_key_length">
        <return-type type="gint" />
      </method>
      <method name="GetModel" cname="gtk_entry_completion_get_model">
        <return-type type="GtkTreeModel*" />
      </method>
      <method name="GetType" cname="gtk_entry_completion_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InsertActionMarkup" cname="gtk_entry_completion_insert_action_markup">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="index" />
          <parameter type="const-gchar*" name="markup" />
        </parameters>
      </method>
      <method name="InsertActionText" cname="gtk_entry_completion_insert_action_text">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="index" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <constructor cname="gtk_entry_completion_new" />
      <method name="SetMatchFunc" cname="gtk_entry_completion_set_match_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkEntryCompletionMatchFunc" name="func" />
          <parameter type="gpointer" name="func_data" />
          <parameter type="GDestroyNotify" name="func_notify" />
        </parameters>
      </method>
      <method name="SetMinimumKeyLength" cname="gtk_entry_completion_set_minimum_key_length">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="length" />
        </parameters>
      </method>
      <method name="SetModel" cname="gtk_entry_completion_set_model">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
        </parameters>
      </method>
      <method name="SetTextColumn" cname="gtk_entry_completion_set_text_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
    </object>
    <object name="EventBox" cname="GtkEventBox" parent="GtkBin">
      <property name="VisibleWindow" cname="visible-window" type="gboolean" readable="true" writeable="true" />
      <property name="AboveChild" cname="above-child" type="gboolean" readable="true" writeable="true" />
      <method name="GetAboveChild" cname="gtk_event_box_get_above_child">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_event_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisibleWindow" cname="gtk_event_box_get_visible_window">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_event_box_new" />
      <method name="SetAboveChild" cname="gtk_event_box_set_above_child">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="above_child" />
        </parameters>
      </method>
      <method name="SetVisibleWindow" cname="gtk_event_box_set_visible_window">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible_window" />
        </parameters>
      </method>
    </object>
    <object name="Expander" cname="GtkExpander" parent="GtkBin">
      <field name="Priv" cname="priv" type="GtkExpanderPrivate*" />
      <property name="Expanded" cname="expanded" type="gboolean" readable="true" writeable="true" construct="true" />
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" construct="true" />
      <property name="UseUnderline" cname="use_underline" type="gboolean" readable="true" writeable="true" construct="true" />
      <property name="UseMarkup" cname="use_markup" type="gboolean" readable="true" writeable="true" construct="true" />
      <property name="Spacing" cname="spacing" type="gint" readable="true" writeable="true" />
      <property name="LabelWidget" cname="label_widget" type="GtkWidget" readable="true" writeable="true" />
      <signal name="Activate" cname="activate" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkExpander*" name="expander" />
        </parameters>
      </signal>
      <method name="GetExpanded" cname="gtk_expander_get_expanded">
        <return-type type="gboolean" />
      </method>
      <method name="GetLabel" cname="gtk_expander_get_label">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetLabelWidget" cname="gtk_expander_get_label_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetSpacing" cname="gtk_expander_get_spacing">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_expander_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseMarkup" cname="gtk_expander_get_use_markup">
        <return-type type="gboolean" />
      </method>
      <method name="GetUseUnderline" cname="gtk_expander_get_use_underline">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_expander_new">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_expander_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetExpanded" cname="gtk_expander_set_expanded">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="expanded" />
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_expander_set_label">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </method>
      <method name="SetLabelWidget" cname="gtk_expander_set_label_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="label_widget" />
        </parameters>
      </method>
      <method name="SetSpacing" cname="gtk_expander_set_spacing">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="spacing" />
        </parameters>
      </method>
      <method name="SetUseMarkup" cname="gtk_expander_set_use_markup">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_markup" />
        </parameters>
      </method>
      <method name="SetUseUnderline" cname="gtk_expander_set_use_underline">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_underline" />
        </parameters>
      </method>
    </object>
    <object name="FileChooserDialog" cname="GtkFileChooserDialog" parent="GtkDialog">
      <field name="Priv" cname="priv" type="GtkFileChooserDialogPrivate*" />
      <implements>
        <interface cname="GtkFileChooser" />
      </implements>
      <method name="GetType" cname="gtk_file_chooser_dialog_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_file_chooser_dialog_new">
        <parameters>
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="GtkFileChooserAction" name="action" />
          <parameter type="const-gchar*" name="first_button_text" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <constructor cname="gtk_file_chooser_dialog_new_with_backend">
        <parameters>
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="GtkFileChooserAction" name="action" />
          <parameter type="const-gchar*" name="backend" />
          <parameter type="const-gchar*" name="first_button_text" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
    </object>
    <object name="FileChooserWidget" cname="GtkFileChooserWidget" parent="GtkVBox">
      <field name="Priv" cname="priv" type="GtkFileChooserWidgetPrivate*" />
      <implements>
        <interface cname="GtkFileChooser" />
        <interface cname="GtkFileChooserEmbed" />
      </implements>
      <method name="GetType" cname="gtk_file_chooser_widget_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_file_chooser_widget_new">
        <parameters>
          <parameter type="GtkFileChooserAction" name="action" />
        </parameters>
      </constructor>
      <constructor cname="gtk_file_chooser_widget_new_with_backend">
        <parameters>
          <parameter type="GtkFileChooserAction" name="action" />
          <parameter type="const-gchar*" name="backend" />
        </parameters>
      </constructor>
    </object>
    <object name="FileFilter" cname="GtkFileFilter" parent="GtkObject">
      <method name="AddCustom" cname="gtk_file_filter_add_custom">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFileFilterFlags" name="needed" />
          <parameter type="GtkFileFilterFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="notify" />
        </parameters>
      </method>
      <method name="AddMimeType" cname="gtk_file_filter_add_mime_type">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="mime_type" />
        </parameters>
      </method>
      <method name="AddPattern" cname="gtk_file_filter_add_pattern">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="pattern" />
        </parameters>
      </method>
      <method name="Filter" cname="gtk_file_filter_filter">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkFileFilterInfo*" name="filter_info" />
        </parameters>
      </method>
      <method name="GetName" cname="gtk_file_filter_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetNeeded" cname="gtk_file_filter_get_needed">
        <return-type type="GtkFileFilterFlags" />
      </method>
      <method name="GetType" cname="gtk_file_filter_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_file_filter_new" />
      <method name="SetName" cname="gtk_file_filter_set_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
    </object>
    <object name="FileSelection" cname="GtkFileSelection" parent="GtkDialog">
      <field name="DirList" cname="dir_list" type="GtkWidget*" access="public" />
      <field name="FileList" cname="file_list" type="GtkWidget*" access="public" />
      <field name="SelectionEntry" cname="selection_entry" type="GtkWidget*" access="public" />
      <field name="SelectionText" cname="selection_text" type="GtkWidget*" access="public" />
      <field name="MainVbox" cname="main_vbox" type="GtkWidget*" access="public" />
      <field name="OkButton" cname="ok_button" type="GtkWidget*" access="public" />
      <field name="CancelButton" cname="cancel_button" type="GtkWidget*" access="public" />
      <field name="HelpButton" cname="help_button" type="GtkWidget*" access="public" />
      <field name="HistoryPulldown" cname="history_pulldown" type="GtkWidget*" access="public" />
      <field name="HistoryMenu" cname="history_menu" type="GtkWidget*" access="public" />
      <field name="HistoryList" cname="history_list" type="GList*" access="public" />
      <field name="FileopDialog" cname="fileop_dialog" type="GtkWidget*" access="public" />
      <field name="FileopEntry" cname="fileop_entry" type="GtkWidget*" access="public" />
      <field name="FileopFile" cname="fileop_file" type="gchar*" access="public" />
      <field name="CmplState" cname="cmpl_state" type="gpointer" access="public" />
      <field name="FileopCDir" cname="fileop_c_dir" type="GtkWidget*" access="public" />
      <field name="FileopDelFile" cname="fileop_del_file" type="GtkWidget*" access="public" />
      <field name="FileopRenFile" cname="fileop_ren_file" type="GtkWidget*" access="public" />
      <field name="ButtonArea" cname="button_area" type="GtkWidget*" access="public" />
      <field name="ActionArea" cname="action_area" type="GtkWidget*" access="public" />
      <field name="SelectedNames" cname="selected_names" type="GPtrArray*" />
      <field name="LastSelected" cname="last_selected" type="gchar*" />
      <property name="Filename" cname="filename" type="gchar*" readable="true" writeable="true" />
      <property name="ShowFileops" cname="show_fileops" type="gboolean" readable="true" writeable="true" />
      <property name="SelectMultiple" cname="select_multiple" type="gboolean" readable="true" writeable="true" />
      <method name="Complete" cname="gtk_file_selection_complete">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="pattern" />
        </parameters>
      </method>
      <method name="GetFilename" cname="gtk_file_selection_get_filename">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetSelectMultiple" cname="gtk_file_selection_get_select_multiple">
        <return-type type="gboolean" />
      </method>
      <method name="GetSelections" cname="gtk_file_selection_get_selections">
        <return-type type="gchar**" />
      </method>
      <method name="GetType" cname="gtk_file_selection_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HideFileopButtons" cname="gtk_file_selection_hide_fileop_buttons">
        <return-type type="void" />
      </method>
      <constructor cname="gtk_file_selection_new">
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </constructor>
      <method name="SetFilename" cname="gtk_file_selection_set_filename">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetSelectMultiple" cname="gtk_file_selection_set_select_multiple">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="select_multiple" />
        </parameters>
      </method>
      <method name="ShowFileopButtons" cname="gtk_file_selection_show_fileop_buttons">
        <return-type type="void" />
      </method>
    </object>
    <object name="Fixed" cname="GtkFixed" parent="GtkContainer">
      <field name="Children" cname="children" type="GList*" />
      <childprop name="X" cname="x" type="gint" readable="true" writeable="true" />
      <childprop name="Y" cname="y" type="gint" readable="true" writeable="true" />
      <method name="GetHasWindow" cname="gtk_fixed_get_has_window">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_fixed_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Move" cname="gtk_fixed_move">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <constructor cname="gtk_fixed_new" />
      <method name="Put" cname="gtk_fixed_put">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="SetHasWindow" cname="gtk_fixed_set_has_window">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="has_window" />
        </parameters>
      </method>
    </object>
    <object name="FontButton" cname="GtkFontButton" parent="GtkButton">
      <field name="Priv" cname="priv" type="GtkFontButtonPrivate*" />
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true" />
      <property name="FontName" cname="font_name" type="gchar*" readable="true" writeable="true" />
      <property name="UseFont" cname="use_font" type="gboolean" readable="true" writeable="true" />
      <property name="UseSize" cname="use_size" type="gboolean" readable="true" writeable="true" />
      <property name="ShowStyle" cname="show_style" type="gboolean" readable="true" writeable="true" />
      <property name="ShowSize" cname="show_size" type="gboolean" readable="true" writeable="true" />
      <signal name="FontSet" cname="font_set" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFontButton*" name="gfp" />
        </parameters>
      </signal>
      <method name="GetFontName" cname="gtk_font_button_get_font_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetShowSize" cname="gtk_font_button_get_show_size">
        <return-type type="gboolean" />
      </method>
      <method name="GetShowStyle" cname="gtk_font_button_get_show_style">
        <return-type type="gboolean" />
      </method>
      <method name="GetTitle" cname="gtk_font_button_get_title">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_font_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseFont" cname="gtk_font_button_get_use_font">
        <return-type type="gboolean" />
      </method>
      <method name="GetUseSize" cname="gtk_font_button_get_use_size">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_font_button_new" />
      <constructor cname="gtk_font_button_new_with_font">
        <parameters>
          <parameter type="const-gchar*" name="fontname" />
        </parameters>
      </constructor>
      <method name="SetFontName" cname="gtk_font_button_set_font_name">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="fontname" />
        </parameters>
      </method>
      <method name="SetShowSize" cname="gtk_font_button_set_show_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_size" />
        </parameters>
      </method>
      <method name="SetShowStyle" cname="gtk_font_button_set_show_style">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_style" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_font_button_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetUseFont" cname="gtk_font_button_set_use_font">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_font" />
        </parameters>
      </method>
      <method name="SetUseSize" cname="gtk_font_button_set_use_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_size" />
        </parameters>
      </method>
    </object>
    <object name="FontSelection" cname="GtkFontSelection" parent="GtkVBox">
      <field name="FontEntry" cname="font_entry" type="GtkWidget*" />
      <field name="FamilyList" cname="family_list" type="GtkWidget*" />
      <field name="FontStyleEntry" cname="font_style_entry" type="GtkWidget*" />
      <field name="FaceList" cname="face_list" type="GtkWidget*" />
      <field name="SizeEntry" cname="size_entry" type="GtkWidget*" />
      <field name="SizeList" cname="size_list" type="GtkWidget*" />
      <field name="PixelsButton" cname="pixels_button" type="GtkWidget*" />
      <field name="PointsButton" cname="points_button" type="GtkWidget*" />
      <field name="FilterButton" cname="filter_button" type="GtkWidget*" />
      <field name="PreviewEntry" cname="preview_entry" type="GtkWidget*" />
      <field name="Family" cname="family" type="PangoFontFamily*" />
      <field name="Face" cname="face" type="PangoFontFace*" />
      <field name="Size" cname="size" type="gint" />
      <field name="Font" cname="font" type="GdkFont*" />
      <property name="FontName" cname="font_name" type="gchar*" readable="true" writeable="true" />
      <property name="Font" cname="font" type="GdkFont" readable="true" />
      <property name="PreviewText" cname="preview_text" type="gchar*" readable="true" writeable="true" />
      <method name="GetFont" cname="gtk_font_selection_get_font" deprecated="1">
        <return-type type="GdkFont*" />
      </method>
      <method name="GetFontName" cname="gtk_font_selection_get_font_name">
        <return-type type="gchar*" />
      </method>
      <method name="GetPreviewText" cname="gtk_font_selection_get_preview_text">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_font_selection_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_font_selection_new" />
      <method name="SetFontName" cname="gtk_font_selection_set_font_name">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="fontname" />
        </parameters>
      </method>
      <method name="SetPreviewText" cname="gtk_font_selection_set_preview_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
    </object>
    <object name="FontSelectionDialog" cname="GtkFontSelectionDialog" parent="GtkDialog">
      <field name="Fontsel" cname="fontsel" type="GtkWidget*" />
      <field name="MainVbox" cname="main_vbox" type="GtkWidget*" />
      <field name="ActionArea" cname="action_area" type="GtkWidget*" />
      <field name="OkButton" cname="ok_button" type="GtkWidget*" access="public" />
      <field name="ApplyButton" cname="apply_button" type="GtkWidget*" access="public" />
      <field name="CancelButton" cname="cancel_button" type="GtkWidget*" access="public" />
      <field name="DialogWidth" cname="dialog_width" type="gint" />
      <field name="AutoResize" cname="auto_resize" type="gboolean" />
      <method name="GetFont" cname="gtk_font_selection_dialog_get_font" deprecated="1">
        <return-type type="GdkFont*" />
      </method>
      <method name="GetFontName" cname="gtk_font_selection_dialog_get_font_name">
        <return-type type="gchar*" />
      </method>
      <method name="GetPreviewText" cname="gtk_font_selection_dialog_get_preview_text">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_font_selection_dialog_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_font_selection_dialog_new">
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </constructor>
      <method name="SetFontName" cname="gtk_font_selection_dialog_set_font_name">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="fontname" />
        </parameters>
      </method>
      <method name="SetPreviewText" cname="gtk_font_selection_dialog_set_preview_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
    </object>
    <object name="Frame" cname="GtkFrame" parent="GtkBin">
      <field name="LabelWidget" cname="label_widget" type="GtkWidget*" />
      <field name="ShadowType" cname="shadow_type" type="gint16" />
      <field name="LabelXalign" cname="label_xalign" type="gfloat" />
      <field name="LabelYalign" cname="label_yalign" type="gfloat" />
      <field name="ChildAllocation" cname="child_allocation" type="GtkAllocation" />
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" />
      <property name="LabelXalign" cname="label_xalign" type="gfloat" readable="true" writeable="true" />
      <property name="LabelYalign" cname="label_yalign" type="gfloat" readable="true" writeable="true" />
      <property name="Shadow" cname="shadow" type="GtkShadowType" readable="true" writeable="true" />
      <property name="ShadowType" cname="shadow_type" type="GtkShadowType" readable="true" writeable="true" />
      <property name="LabelWidget" cname="label_widget" type="GtkWidget" readable="true" writeable="true" />
      <virtual_method name="ComputeChildAllocation" cname="compute_child_allocation">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFrame*" name="frame" />
          <parameter type="GtkAllocation*" name="allocation" />
        </parameters>
      </virtual_method>
      <method name="GetLabel" cname="gtk_frame_get_label">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetLabelAlign" cname="gtk_frame_get_label_align">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat*" name="xalign" />
          <parameter type="gfloat*" name="yalign" />
        </parameters>
      </method>
      <method name="GetLabelWidget" cname="gtk_frame_get_label_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetShadowType" cname="gtk_frame_get_shadow_type">
        <return-type type="GtkShadowType" />
      </method>
      <method name="GetType" cname="gtk_frame_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_frame_new">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetLabel" cname="gtk_frame_set_label">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </method>
      <method name="SetLabelAlign" cname="gtk_frame_set_label_align">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="xalign" />
          <parameter type="gfloat" name="yalign" />
        </parameters>
      </method>
      <method name="SetLabelWidget" cname="gtk_frame_set_label_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="label_widget" />
        </parameters>
      </method>
      <method name="SetShadowType" cname="gtk_frame_set_shadow_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkShadowType" name="type" />
        </parameters>
      </method>
    </object>
    <object name="GammaCurve" cname="GtkGammaCurve" parent="GtkVBox">
      <field name="Table" cname="table" type="GtkWidget*" />
      <field name="Curve" cname="curve" type="GtkWidget*" />
      <field name="Button" cname="button" array_len="5" type="GtkWidget*" />
      <field name="Gamma" cname="gamma" type="gfloat" />
      <field name="GammaDialog" cname="gamma_dialog" type="GtkWidget*" />
      <field name="GammaText" cname="gamma_text" type="GtkWidget*" />
      <method name="GetType" cname="gtk_gamma_curve_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_gamma_curve_new" />
    </object>
    <object name="HandleBox" cname="GtkHandleBox" parent="GtkBin">
      <field name="BinWindow" cname="bin_window" type="GdkWindow*" />
      <field name="FloatWindow" cname="float_window" type="GdkWindow*" />
      <field name="ShadowType" cname="shadow_type" type="GtkShadowType" />
      <field name="HandlePosition" cname="handle_position" bits="2" type="guint" />
      <field name="FloatWindowMapped" cname="float_window_mapped" bits="1" type="guint" />
      <field name="ChildDetached" cname="child_detached" bits="1" type="guint" />
      <field name="InDrag" cname="in_drag" bits="1" type="guint" />
      <field name="ShrinkOnDetach" cname="shrink_on_detach" bits="1" type="guint" />
      <field name="SnapEdge" cname="snap_edge" bits="3" type="signed" />
      <field name="DeskoffX" cname="deskoff_x" type="gint" />
      <field name="DeskoffY" cname="deskoff_y" type="gint" />
      <field name="AttachAllocation" cname="attach_allocation" type="GtkAllocation" />
      <field name="FloatAllocation" cname="float_allocation" type="GtkAllocation" />
      <property name="Shadow" cname="shadow" type="GtkShadowType" readable="true" writeable="true" />
      <property name="ShadowType" cname="shadow_type" type="GtkShadowType" readable="true" writeable="true" />
      <property name="HandlePosition" cname="handle_position" type="GtkPositionType" readable="true" writeable="true" />
      <property name="SnapEdge" cname="snap_edge" type="GtkPositionType" readable="true" writeable="true" />
      <property name="SnapEdgeSet" cname="snap_edge_set" type="gboolean" readable="true" writeable="true" />
      <signal name="ChildAttached" cname="child_attached" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkHandleBox*" name="handle_box" />
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </signal>
      <signal name="ChildDetached" cname="child_detached" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkHandleBox*" name="handle_box" />
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </signal>
      <method name="GetHandlePosition" cname="gtk_handle_box_get_handle_position">
        <return-type type="GtkPositionType" />
      </method>
      <method name="GetShadowType" cname="gtk_handle_box_get_shadow_type">
        <return-type type="GtkShadowType" />
      </method>
      <method name="GetSnapEdge" cname="gtk_handle_box_get_snap_edge">
        <return-type type="GtkPositionType" />
      </method>
      <method name="GetType" cname="gtk_handle_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_handle_box_new" />
      <method name="SetHandlePosition" cname="gtk_handle_box_set_handle_position">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPositionType" name="position" />
        </parameters>
      </method>
      <method name="SetShadowType" cname="gtk_handle_box_set_shadow_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkShadowType" name="type" />
        </parameters>
      </method>
      <method name="SetSnapEdge" cname="gtk_handle_box_set_snap_edge">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPositionType" name="edge" />
        </parameters>
      </method>
    </object>
    <object name="HBox" cname="GtkHBox" parent="GtkBox">
      <method name="GetType" cname="gtk_hbox_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_hbox_new">
        <parameters>
          <parameter type="gboolean" name="homogeneous" />
          <parameter type="gint" name="spacing" />
        </parameters>
      </constructor>
    </object>
    <object name="HButtonBox" cname="GtkHButtonBox" parent="GtkButtonBox">
      <method name="GetLayoutDefault" cname="gtk_hbutton_box_get_layout_default" deprecated="1" shared="true">
        <return-type type="GtkButtonBoxStyle" />
      </method>
      <method name="GetSpacingDefault" cname="gtk_hbutton_box_get_spacing_default" deprecated="1" shared="true">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_hbutton_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_hbutton_box_new" />
      <method name="SetLayoutDefault" cname="gtk_hbutton_box_set_layout_default" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkButtonBoxStyle" name="layout" />
        </parameters>
      </method>
      <method name="SetSpacingDefault" cname="gtk_hbutton_box_set_spacing_default" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="spacing" />
        </parameters>
      </method>
    </object>
    <object name="HPaned" cname="GtkHPaned" parent="GtkPaned">
      <method name="GetType" cname="gtk_hpaned_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_hpaned_new" />
    </object>
    <object name="HRuler" cname="GtkHRuler" parent="GtkRuler">
      <method name="GetType" cname="gtk_hruler_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_hruler_new" />
    </object>
    <object name="HScale" cname="GtkHScale" parent="GtkScale">
      <method name="GetType" cname="gtk_hscale_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_hscale_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </constructor>
      <constructor cname="gtk_hscale_new_with_range">
        <parameters>
          <parameter type="gdouble" name="min" />
          <parameter type="gdouble" name="max" />
          <parameter type="gdouble" name="step" />
        </parameters>
      </constructor>
    </object>
    <object name="HScrollbar" cname="GtkHScrollbar" parent="GtkScrollbar">
      <method name="GetType" cname="gtk_hscrollbar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_hscrollbar_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </constructor>
    </object>
    <object name="HSeparator" cname="GtkHSeparator" parent="GtkSeparator">
      <method name="GetType" cname="gtk_hseparator_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_hseparator_new" />
    </object>
    <object name="HSV" cname="GtkHSV" parent="GtkWidget">
      <field name="Priv" cname="priv" type="gpointer" />
      <signal name="Changed" cname="changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkHSV*" name="hsv" />
        </parameters>
      </signal>
      <signal name="Move" cname="move" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkHSV*" name="hsv" />
          <parameter type="GtkDirectionType" name="type" />
        </parameters>
      </signal>
      <method name="GetColor" cname="gtk_hsv_get_color">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="h" />
          <parameter type="gdouble*" name="s" />
          <parameter type="gdouble*" name="v" />
        </parameters>
      </method>
      <method name="GetMetrics" cname="gtk_hsv_get_metrics">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="size" />
          <parameter type="gint*" name="ring_width" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_hsv_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsAdjusting" cname="gtk_hsv_is_adjusting">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_hsv_new" />
      <method name="SetColor" cname="gtk_hsv_set_color">
        <return-type type="void" />
        <parameters>
          <parameter type="double" name="h" />
          <parameter type="double" name="s" />
          <parameter type="double" name="v" />
        </parameters>
      </method>
      <method name="SetMetrics" cname="gtk_hsv_set_metrics">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="size" />
          <parameter type="gint" name="ring_width" />
        </parameters>
      </method>
      <method name="ToRgb" cname="gtk_hsv_to_rgb" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="h" />
          <parameter type="gdouble" name="s" />
          <parameter type="gdouble" name="v" />
          <parameter type="gdouble*" name="r" />
          <parameter type="gdouble*" name="g" />
          <parameter type="gdouble*" name="b" />
        </parameters>
      </method>
    </object>
    <object name="IconFactory" cname="GtkIconFactory" parent="GObject">
      <field name="Icons" cname="icons" type="GHashTable*" />
      <method name="Add" cname="gtk_icon_factory_add">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="GtkIconSet*" name="icon_set" />
        </parameters>
      </method>
      <method name="AddDefault" cname="gtk_icon_factory_add_default">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_icon_factory_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Lookup" cname="gtk_icon_factory_lookup">
        <return-type type="GtkIconSet*" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </method>
      <method name="LookupDefault" cname="gtk_icon_factory_lookup_default" shared="true">
        <return-type type="GtkIconSet*" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </method>
      <constructor cname="gtk_icon_factory_new" />
      <method name="RemoveDefault" cname="gtk_icon_factory_remove_default">
        <return-type type="void" />
      </method>
    </object>
    <object name="IconTheme" cname="GtkIconTheme" parent="GObject">
      <field name="Priv" cname="priv" type="GtkIconThemePrivate*" />
      <signal name="Changed" cname="changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIconTheme*" name="icon_theme" />
        </parameters>
      </signal>
      <method name="AddBuiltinIcon" cname="gtk_icon_theme_add_builtin_icon" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
          <parameter type="gint" name="size" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="AppendSearchPath" cname="gtk_icon_theme_append_search_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="ErrorQuark" cname="gtk_icon_theme_error_quark" shared="true">
        <return-type type="GQuark" />
      </method>
      <method name="GetDefault" cname="gtk_icon_theme_get_default" shared="true">
        <return-type type="GtkIconTheme*" />
      </method>
      <method name="GetExampleIconName" cname="gtk_icon_theme_get_example_icon_name">
        <return-type type="char*" />
      </method>
      <method name="GetForScreen" cname="gtk_icon_theme_get_for_screen" shared="true">
        <return-type type="GtkIconTheme*" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="GetSearchPath" cname="gtk_icon_theme_get_search_path">
        <return-type type="void" />
        <parameters>
          <parameter type="gchar**" array="true" name="path" />
          <parameter type="gint*" name="n_elements" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_icon_theme_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="HasIcon" cname="gtk_icon_theme_has_icon">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
        </parameters>
      </method>
      <method name="ListIcons" cname="gtk_icon_theme_list_icons">
        <return-type type="GList*" />
        <parameters>
          <parameter type="const-gchar*" name="context" />
        </parameters>
      </method>
      <method name="LoadIcon" cname="gtk_icon_theme_load_icon">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
          <parameter type="gint" name="size" />
          <parameter type="GtkIconLookupFlags" name="flags" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="LookupIcon" cname="gtk_icon_theme_lookup_icon">
        <return-type type="GtkIconInfo*" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
          <parameter type="gint" name="size" />
          <parameter type="GtkIconLookupFlags" name="flags" />
        </parameters>
      </method>
      <constructor cname="gtk_icon_theme_new" />
      <method name="PrependSearchPath" cname="gtk_icon_theme_prepend_search_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="RescanIfNeeded" cname="gtk_icon_theme_rescan_if_needed">
        <return-type type="gboolean" />
      </method>
      <method name="SetCustomTheme" cname="gtk_icon_theme_set_custom_theme">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="theme_name" />
        </parameters>
      </method>
      <method name="SetScreen" cname="gtk_icon_theme_set_screen">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="SetSearchPath" cname="gtk_icon_theme_set_search_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" array="true" name="path" />
          <parameter type="gint" name="n_elements" />
        </parameters>
      </method>
    </object>
    <object name="Image" cname="GtkImage" parent="GtkMisc">
      <field name="StorageType" cname="storage_type" type="GtkImageType" />
      <field name="Pixmap" cname="pixmap" type="union{GtkImagePixmapData" />
      <field name="Image" cname="image" type="GtkImageImageData" />
      <field name="Pixbuf" cname="pixbuf" type="GtkImagePixbufData" />
      <field name="Stock" cname="stock" type="GtkImageStockData" />
      <field name="IconSet" cname="icon_set" type="GtkImageIconSetData" />
      <field name="Anim" cname="anim" type="GtkImageAnimationData" />
      <field name="Data" cname="data" type="}" />
      <field name="Mask" cname="mask" type="GdkBitmap*" />
      <field name="IconSize" cname="icon_size" type="GtkIconSize" />
      <property name="Pixbuf" cname="pixbuf" type="GdkPixbuf" readable="true" writeable="true" />
      <property name="Pixmap" cname="pixmap" type="GdkPixmap" readable="true" writeable="true" />
      <property name="Image" cname="image" type="GdkImage" readable="true" writeable="true" />
      <property name="Mask" cname="mask" type="GdkPixmap" readable="true" writeable="true" />
      <property name="File" cname="file" type="gchar*" writeable="true" />
      <property name="Stock" cname="stock" type="gchar*" readable="true" writeable="true" />
      <property name="IconSet" cname="icon_set" type="GtkIconSet" readable="true" writeable="true" />
      <property name="IconSize" cname="icon_size" type="gint" readable="true" writeable="true" />
      <property name="PixbufAnimation" cname="pixbuf_animation" type="GdkPixbufAnimation" readable="true" writeable="true" />
      <property name="StorageType" cname="storage_type" type="GtkImageType" readable="true" />
      <method name="Get" cname="gtk_image_get" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkImage**" name="val" />
          <parameter type="GdkBitmap**" name="mask" />
        </parameters>
      </method>
      <method name="GetAnimation" cname="gtk_image_get_animation">
        <return-type type="GdkPixbufAnimation*" />
      </method>
      <method name="GetIconSet" cname="gtk_image_get_icon_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIconSet**" name="icon_set" />
          <parameter type="GtkIconSize*" name="size" />
        </parameters>
      </method>
      <method name="GetImage" cname="gtk_image_get_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkImage**" name="gdk_image" />
          <parameter type="GdkBitmap**" name="mask" />
        </parameters>
      </method>
      <method name="GetPixbuf" cname="gtk_image_get_pixbuf">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetPixmap" cname="gtk_image_get_pixmap">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixmap**" name="pixmap" />
          <parameter type="GdkBitmap**" name="mask" />
        </parameters>
      </method>
      <method name="GetStock" cname="gtk_image_get_stock">
        <return-type type="void" />
        <parameters>
          <parameter type="gchar**" name="stock_id" />
          <parameter type="GtkIconSize*" name="size" />
        </parameters>
      </method>
      <method name="GetStorageType" cname="gtk_image_get_storage_type">
        <return-type type="GtkImageType" />
      </method>
      <method name="GetType" cname="gtk_image_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_image_new" />
      <constructor cname="gtk_image_new_from_animation">
        <parameters>
          <parameter type="GdkPixbufAnimation*" name="animation" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_file">
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_icon_set">
        <parameters>
          <parameter type="GtkIconSet*" name="icon_set" />
          <parameter type="GtkIconSize" name="size" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_image">
        <parameters>
          <parameter type="GdkImage*" name="image" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_pixbuf">
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_pixmap">
        <parameters>
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_new_from_stock">
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="GtkIconSize" name="size" />
        </parameters>
      </constructor>
      <method name="Set" cname="gtk_image_set" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkImage*" name="val" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SetFromAnimation" cname="gtk_image_set_from_animation">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbufAnimation*" name="animation" />
        </parameters>
      </method>
      <method name="SetFromFile" cname="gtk_image_set_from_file">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetFromIconSet" cname="gtk_image_set_from_icon_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIconSet*" name="icon_set" />
          <parameter type="GtkIconSize" name="size" />
        </parameters>
      </method>
      <method name="SetFromImage" cname="gtk_image_set_from_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkImage*" name="gdk_image" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SetFromPixbuf" cname="gtk_image_set_from_pixbuf">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="SetFromPixmap" cname="gtk_image_set_from_pixmap">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SetFromStock" cname="gtk_image_set_from_stock">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="GtkIconSize" name="size" />
        </parameters>
      </method>
    </object>
    <object name="ImageMenuItem" cname="GtkImageMenuItem" parent="GtkMenuItem">
      <field name="Image" cname="image" type="GtkWidget*" />
      <property name="Image" cname="image" type="GtkWidget" readable="true" writeable="true" />
      <method name="GetImage" cname="gtk_image_menu_item_get_image">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetType" cname="gtk_image_menu_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_image_menu_item_new" />
      <constructor cname="gtk_image_menu_item_new_from_stock">
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_menu_item_new_with_label">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_image_menu_item_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetImage" cname="gtk_image_menu_item_set_image">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="image" />
        </parameters>
      </method>
    </object>
    <object name="IMContext" cname="GtkIMContext" parent="GObject">
      <signal name="PreeditStart" cname="preedit_start" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
        </parameters>
      </signal>
      <signal name="PreeditEnd" cname="preedit_end" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
        </parameters>
      </signal>
      <signal name="PreeditChanged" cname="preedit_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
        </parameters>
      </signal>
      <signal name="Commit" cname="commit" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </signal>
      <signal name="RetrieveSurrounding" cname="retrieve_surrounding" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
        </parameters>
      </signal>
      <signal name="DeleteSurrounding" cname="delete_surrounding" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
          <parameter type="gint" name="offset" />
          <parameter type="gint" name="n_chars" />
        </parameters>
      </signal>
      <virtual_method name="SetClientWindow" cname="set_client_window">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetPreeditString" cname="get_preedit_string">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
          <parameter type="gchar**" name="str" />
          <parameter type="PangoAttrList**" name="attrs" />
          <parameter type="gint*" name="cursor_pos" />
        </parameters>
      </virtual_method>
      <virtual_method name="FilterKeypress" cname="filter_keypress">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
          <parameter type="GdkEventKey*" name="event" />
        </parameters>
      </virtual_method>
      <virtual_method name="FocusIn" cname="focus_in">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
        </parameters>
      </virtual_method>
      <virtual_method name="FocusOut" cname="focus_out">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
        </parameters>
      </virtual_method>
      <virtual_method name="Reset" cname="reset">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetCursorLocation" cname="set_cursor_location">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
          <parameter type="GdkRectangle*" name="area" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetUsePreedit" cname="set_use_preedit">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
          <parameter type="gboolean" name="use_preedit" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetSurrounding" cname="set_surrounding">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
          <parameter type="gint" name="cursor_index" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetSurrounding" cname="get_surrounding">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkIMContext*" name="context" />
          <parameter type="gchar**" name="text" />
          <parameter type="gint*" name="cursor_index" />
        </parameters>
      </virtual_method>
      <method name="DeleteSurrounding" cname="gtk_im_context_delete_surrounding">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="offset" />
          <parameter type="gint" name="n_chars" />
        </parameters>
      </method>
      <method name="FilterKeypress" cname="gtk_im_context_filter_keypress">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEventKey*" name="event" />
        </parameters>
      </method>
      <method name="FocusIn" cname="gtk_im_context_focus_in">
        <return-type type="void" />
      </method>
      <method name="FocusOut" cname="gtk_im_context_focus_out">
        <return-type type="void" />
      </method>
      <method name="GetPreeditString" cname="gtk_im_context_get_preedit_string">
        <return-type type="void" />
        <parameters>
          <parameter type="gchar**" name="str" />
          <parameter type="PangoAttrList**" name="attrs" />
          <parameter type="gint*" name="cursor_pos" />
        </parameters>
      </method>
      <method name="GetSurrounding" cname="gtk_im_context_get_surrounding">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gchar**" name="text" />
          <parameter type="gint*" name="cursor_index" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_im_context_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Reset" cname="gtk_im_context_reset">
        <return-type type="void" />
      </method>
      <method name="SetClientWindow" cname="gtk_im_context_set_client_window">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </method>
      <method name="SetCursorLocation" cname="gtk_im_context_set_cursor_location">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="area" />
        </parameters>
      </method>
      <method name="SetSurrounding" cname="gtk_im_context_set_surrounding">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
          <parameter type="gint" name="cursor_index" />
        </parameters>
      </method>
      <method name="SetUsePreedit" cname="gtk_im_context_set_use_preedit">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_preedit" />
        </parameters>
      </method>
    </object>
    <object name="IMContextSimple" cname="GtkIMContextSimple" parent="GtkIMContext">
      <field name="Tables" cname="tables" type="GSList*" />
      <field name="ComposeBuffer" cname="compose_buffer" array_len="GTK_MAX_COMPOSE_LEN + 1" type="guint" />
      <field name="TentativeMatch" cname="tentative_match" type="gunichar" />
      <field name="TentativeMatchLen" cname="tentative_match_len" type="gint" />
      <field name="InHexSequence" cname="in_hex_sequence" bits="1" type="guint" />
      <method name="AddTable" cname="gtk_im_context_simple_add_table">
        <return-type type="void" />
        <parameters>
          <parameter type="guint16*" name="data" />
          <parameter type="gint" name="max_seq_len" />
          <parameter type="gint" name="n_seqs" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_im_context_simple_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_im_context_simple_new" />
    </object>
    <object name="IMMulticontext" cname="GtkIMMulticontext" parent="GtkIMContext">
      <field name="Slave" cname="slave" type="GtkIMContext*" />
      <field name="Priv" cname="priv" type="GtkIMMulticontextPrivate*" />
      <field name="ContextId" cname="context_id" type="const-gchar*" />
      <method name="AppendMenuitems" cname="gtk_im_multicontext_append_menuitems">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuShell*" name="menushell" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_im_multicontext_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_im_multicontext_new" />
    </object>
    <object name="InputDialog" cname="GtkInputDialog" parent="GtkDialog">
      <field name="AxisList" cname="axis_list" type="GtkWidget*" />
      <field name="AxisListbox" cname="axis_listbox" type="GtkWidget*" />
      <field name="ModeOptionmenu" cname="mode_optionmenu" type="GtkWidget*" />
      <field name="CloseButton" cname="close_button" type="GtkWidget*" />
      <field name="SaveButton" cname="save_button" type="GtkWidget*" />
      <field name="AxisItems" cname="axis_items" array_len="GDK_AXIS_LAST" type="GtkWidget*" />
      <field name="CurrentDevice" cname="current_device" type="GdkDevice*" />
      <field name="KeysList" cname="keys_list" type="GtkWidget*" />
      <field name="KeysListbox" cname="keys_listbox" type="GtkWidget*" />
      <signal name="EnableDevice" cname="enable_device" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkInputDialog*" name="inputd" />
          <parameter type="GdkDevice*" name="device" />
        </parameters>
      </signal>
      <signal name="DisableDevice" cname="disable_device" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkInputDialog*" name="inputd" />
          <parameter type="GdkDevice*" name="device" />
        </parameters>
      </signal>
      <method name="GetType" cname="gtk_input_dialog_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_input_dialog_new" />
    </object>
    <object name="Invisible" cname="GtkInvisible" parent="GtkWidget">
      <field name="HasUserRefCount" cname="has_user_ref_count" type="gboolean" />
      <field name="Screen" cname="screen" type="GdkScreen*" />
      <property name="Screen" cname="screen" type="GdkScreen" readable="true" writeable="true" />
      <method name="GetScreen" cname="gtk_invisible_get_screen">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetType" cname="gtk_invisible_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_invisible_new" />
      <constructor cname="gtk_invisible_new_for_screen">
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </constructor>
      <method name="SetScreen" cname="gtk_invisible_set_screen">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
    </object>
    <object name="Item" cname="GtkItem" parent="GtkBin">
      <signal name="Select" cname="select" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkItem*" name="item" />
        </parameters>
      </signal>
      <signal name="Deselect" cname="deselect" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkItem*" name="item" />
        </parameters>
      </signal>
      <signal name="Toggle" cname="toggle" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkItem*" name="item" />
        </parameters>
      </signal>
      <method name="Deselect" cname="gtk_item_deselect">
        <return-type type="void" />
      </method>
      <method name="FactoriesPathDelete" cname="gtk_item_factories_path_delete" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="ifactory_path" />
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Select" cname="gtk_item_select">
        <return-type type="void" />
      </method>
      <method name="Toggle" cname="gtk_item_toggle">
        <return-type type="void" />
      </method>
    </object>
    <object name="ItemFactory" cname="GtkItemFactory" deprecated="1" parent="GtkObject">
      <field name="Path" cname="path" type="gchar*" />
      <field name="AccelGroup" cname="accel_group" type="GtkAccelGroup*" />
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <field name="Items" cname="items" type="GSList*" />
      <field name="TranslateFunc" cname="translate_func" type="GtkTranslateFunc" />
      <field name="TranslateData" cname="translate_data" type="gpointer" />
      <field name="TranslateNotify" cname="translate_notify" type="GtkDestroyNotify" />
      <method name="AddForeign" cname="gtk_item_factory_add_foreign" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="accel_widget" />
          <parameter type="const-gchar*" name="full_path" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
        </parameters>
      </method>
      <method name="Construct" cname="gtk_item_factory_construct" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GType" name="container_type" />
          <parameter type="const-gchar*" name="path" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </method>
      <method name="CreateItem" cname="gtk_item_factory_create_item" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkItemFactoryEntry*" name="entry" />
          <parameter type="gpointer" name="callback_data" />
          <parameter type="guint" name="callback_type" />
        </parameters>
      </method>
      <method name="CreateItems" cname="gtk_item_factory_create_items" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_entries" />
          <parameter type="GtkItemFactoryEntry*" name="entries" />
          <parameter type="gpointer" name="callback_data" />
        </parameters>
      </method>
      <method name="CreateItemsAc" cname="gtk_item_factory_create_items_ac" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_entries" />
          <parameter type="GtkItemFactoryEntry*" name="entries" />
          <parameter type="gpointer" name="callback_data" />
          <parameter type="guint" name="callback_type" />
        </parameters>
      </method>
      <method name="CreateMenuEntries" cname="gtk_item_factory_create_menu_entries" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_entries" />
          <parameter type="GtkMenuEntry*" name="entries" />
        </parameters>
      </method>
      <method name="DeleteEntries" cname="gtk_item_factory_delete_entries" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="n_entries" />
          <parameter type="GtkItemFactoryEntry*" name="entries" />
        </parameters>
      </method>
      <method name="DeleteEntry" cname="gtk_item_factory_delete_entry" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkItemFactoryEntry*" name="entry" />
        </parameters>
      </method>
      <method name="DeleteItem" cname="gtk_item_factory_delete_item" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="FromPath" cname="gtk_item_factory_from_path" deprecated="1" shared="true">
        <return-type type="GtkItemFactory*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="FromWidget" cname="gtk_item_factory_from_widget" deprecated="1" shared="true">
        <return-type type="GtkItemFactory*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="GetItem" cname="gtk_item_factory_get_item" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetItemByAction" cname="gtk_item_factory_get_item_by_action" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="guint" name="action" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_item_factory_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidget" cname="gtk_item_factory_get_widget" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetWidgetByAction" cname="gtk_item_factory_get_widget_by_action" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="guint" name="action" />
        </parameters>
      </method>
      <constructor cname="gtk_item_factory_new" deprecated="1">
        <parameters>
          <parameter type="GType" name="container_type" />
          <parameter type="const-gchar*" name="path" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </constructor>
      <method name="PathFromWidget" cname="gtk_item_factory_path_from_widget" deprecated="1" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="Popup" cname="gtk_item_factory_popup" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="x" />
          <parameter type="guint" name="y" />
          <parameter type="guint" name="mouse_button" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="PopupData" cname="gtk_item_factory_popup_data" deprecated="1">
        <return-type type="gpointer" />
      </method>
      <method name="PopupDataFromWidget" cname="gtk_item_factory_popup_data_from_widget" deprecated="1" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="PopupWithData" cname="gtk_item_factory_popup_with_data" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="popup_data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
          <parameter type="guint" name="x" />
          <parameter type="guint" name="y" />
          <parameter type="guint" name="mouse_button" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="SetTranslateFunc" cname="gtk_item_factory_set_translate_func" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTranslateFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="notify" />
        </parameters>
      </method>
    </object>
    <object name="Label" cname="GtkLabel" parent="GtkMisc">
      <field name="Label" cname="label" type="gchar*" />
      <field name="Jtype" cname="jtype" bits="2" type="guint" />
      <field name="Wrap" cname="wrap" bits="1" type="guint" />
      <field name="UseUnderline" cname="use_underline" bits="1" type="guint" />
      <field name="UseMarkup" cname="use_markup" bits="1" type="guint" />
      <field name="MnemonicKeyval" cname="mnemonic_keyval" type="guint" />
      <field name="Text" cname="text" type="gchar*" />
      <field name="Attrs" cname="attrs" type="PangoAttrList*" />
      <field name="EffectiveAttrs" cname="effective_attrs" type="PangoAttrList*" />
      <field name="Layout" cname="layout" type="PangoLayout*" />
      <field name="MnemonicWidget" cname="mnemonic_widget" type="GtkWidget*" />
      <field name="MnemonicWindow" cname="mnemonic_window" type="GtkWindow*" />
      <field name="SelectInfo" cname="select_info" type="GtkLabelSelectionInfo*" />
      <signal name="MoveCursor" cname="move_cursor" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkLabel*" name="label" />
          <parameter type="GtkMovementStep" name="step" />
          <parameter type="gint" name="count" />
          <parameter type="gboolean" name="extend_selection" />
        </parameters>
      </signal>
      <signal name="CopyClipboard" cname="copy_clipboard" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkLabel*" name="label" />
        </parameters>
      </signal>
      <signal name="PopulatePopup" cname="populate_popup" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkLabel*" name="label" />
          <parameter type="GtkMenu*" name="menu" />
        </parameters>
      </signal>
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" />
      <property name="Attributes" cname="attributes" type="PangoAttrList" readable="true" writeable="true" />
      <property name="UseMarkup" cname="use_markup" type="gboolean" readable="true" writeable="true" />
      <property name="UseUnderline" cname="use_underline" type="gboolean" readable="true" writeable="true" />
      <property name="Justify" cname="justify" type="GtkJustification" readable="true" writeable="true" />
      <property name="Pattern" cname="pattern" type="gchar*" writeable="true" />
      <property name="Wrap" cname="wrap" type="gboolean" readable="true" writeable="true" />
      <property name="Selectable" cname="selectable" type="gboolean" readable="true" writeable="true" />
      <property name="MnemonicKeyval" cname="mnemonic_keyval" type="guint" readable="true" />
      <property name="MnemonicWidget" cname="mnemonic_widget" type="GtkWidget" readable="true" writeable="true" />
      <property name="CursorPosition" cname="cursor_position" type="gint" readable="true" />
      <property name="SelectionBound" cname="selection_bound" type="gint" readable="true" />
      <method name="Get" cname="gtk_label_get" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="char**" name="str" />
        </parameters>
      </method>
      <method name="GetAttributes" cname="gtk_label_get_attributes">
        <return-type type="PangoAttrList*" />
      </method>
      <method name="GetJustify" cname="gtk_label_get_justify">
        <return-type type="GtkJustification" />
      </method>
      <method name="GetLabel" cname="gtk_label_get_label">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetLayout" cname="gtk_label_get_layout">
        <return-type type="PangoLayout*" />
      </method>
      <method name="GetLayoutOffsets" cname="gtk_label_get_layout_offsets">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetLineWrap" cname="gtk_label_get_line_wrap">
        <return-type type="gboolean" />
      </method>
      <method name="GetMnemonicKeyval" cname="gtk_label_get_mnemonic_keyval">
        <return-type type="guint" />
      </method>
      <method name="GetMnemonicWidget" cname="gtk_label_get_mnemonic_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetSelectable" cname="gtk_label_get_selectable">
        <return-type type="gboolean" />
      </method>
      <method name="GetSelectionBounds" cname="gtk_label_get_selection_bounds">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint*" name="start" />
          <parameter type="gint*" name="end" />
        </parameters>
      </method>
      <method name="GetText" cname="gtk_label_get_text">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_label_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseMarkup" cname="gtk_label_get_use_markup">
        <return-type type="gboolean" />
      </method>
      <method name="GetUseUnderline" cname="gtk_label_get_use_underline">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_label_new">
        <parameters>
          <parameter type="const-char*" name="str" />
        </parameters>
      </constructor>
      <constructor cname="gtk_label_new_with_mnemonic">
        <parameters>
          <parameter type="const-char*" name="str" />
        </parameters>
      </constructor>
      <method name="ParseUline" cname="gtk_label_parse_uline" deprecated="1">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
      <method name="SelectRegion" cname="gtk_label_select_region">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="start_offset" />
          <parameter type="gint" name="end_offset" />
        </parameters>
      </method>
      <method name="SetAttributes" cname="gtk_label_set_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoAttrList*" name="attrs" />
        </parameters>
      </method>
      <method name="SetJustify" cname="gtk_label_set_justify">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkJustification" name="jtype" />
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_label_set_label">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </method>
      <method name="SetLineWrap" cname="gtk_label_set_line_wrap">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="wrap" />
        </parameters>
      </method>
      <method name="SetMarkup" cname="gtk_label_set_markup">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </method>
      <method name="SetMarkupWithMnemonic" cname="gtk_label_set_markup_with_mnemonic">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </method>
      <method name="SetMnemonicWidget" cname="gtk_label_set_mnemonic_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="SetPattern" cname="gtk_label_set_pattern">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="pattern" />
        </parameters>
      </method>
      <method name="SetSelectable" cname="gtk_label_set_selectable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetText" cname="gtk_label_set_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-char*" name="str" />
        </parameters>
      </method>
      <method name="SetTextWithMnemonic" cname="gtk_label_set_text_with_mnemonic">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </method>
      <method name="SetUseMarkup" cname="gtk_label_set_use_markup">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetUseUnderline" cname="gtk_label_set_use_underline">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
    </object>
    <object name="Layout" cname="GtkLayout" parent="GtkContainer">
      <field name="Children" cname="children" type="GList*" />
      <field name="Width" cname="width" type="guint" />
      <field name="Height" cname="height" type="guint" />
      <field name="Hadjustment" cname="hadjustment" type="GtkAdjustment*" />
      <field name="Vadjustment" cname="vadjustment" type="GtkAdjustment*" />
      <field name="BinWindow" cname="bin_window" type="GdkWindow*" access="public" />
      <field name="Visibility" cname="visibility" type="GdkVisibilityState" />
      <field name="ScrollX" cname="scroll_x" type="gint" />
      <field name="ScrollY" cname="scroll_y" type="gint" />
      <field name="FreezeCount" cname="freeze_count" type="guint" />
      <childprop name="X" cname="x" type="gint" readable="true" writeable="true" />
      <childprop name="Y" cname="y" type="gint" readable="true" writeable="true" />
      <property name="Hadjustment" cname="hadjustment" type="GtkAdjustment" readable="true" writeable="true" />
      <property name="Vadjustment" cname="vadjustment" type="GtkAdjustment" readable="true" writeable="true" />
      <property name="Width" cname="width" type="guint" readable="true" writeable="true" />
      <property name="Height" cname="height" type="guint" readable="true" writeable="true" />
      <signal name="SetScrollAdjustments" cname="set_scroll_adjustments" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkLayout*" name="layout" />
          <parameter type="GtkAdjustment*" name="hadjustment" />
          <parameter type="GtkAdjustment*" name="vadjustment" />
        </parameters>
      </signal>
      <method name="Freeze" cname="gtk_layout_freeze" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="GetHadjustment" cname="gtk_layout_get_hadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetSize" cname="gtk_layout_get_size">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="width" />
          <parameter type="guint*" name="height" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_layout_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVadjustment" cname="gtk_layout_get_vadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="Move" cname="gtk_layout_move">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child_widget" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <constructor cname="gtk_layout_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="hadjustment" />
          <parameter type="GtkAdjustment*" name="vadjustment" />
        </parameters>
      </constructor>
      <method name="Put" cname="gtk_layout_put">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child_widget" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="SetHadjustment" cname="gtk_layout_set_hadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetSize" cname="gtk_layout_set_size">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="width" />
          <parameter type="guint" name="height" />
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gtk_layout_set_vadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="Thaw" cname="gtk_layout_thaw" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="ListStore" cname="GtkListStore" parent="GObject">
      <field name="Stamp" cname="stamp" type="gint" />
      <field name="Root" cname="root" type="gpointer" />
      <field name="Tail" cname="tail" type="gpointer" />
      <field name="SortList" cname="sort_list" type="GList*" />
      <field name="NColumns" cname="n_columns" type="gint" />
      <field name="SortColumnId" cname="sort_column_id" type="gint" />
      <field name="Order" cname="order" type="GtkSortType" />
      <field name="ColumnHeaders" cname="column_headers" type="GType*" />
      <field name="Length" cname="length" type="gint" />
      <field name="DefaultSortFunc" cname="default_sort_func" type="GtkTreeIterCompareFunc" />
      <field name="DefaultSortData" cname="default_sort_data" type="gpointer" />
      <field name="DefaultSortDestroy" cname="default_sort_destroy" type="GtkDestroyNotify" />
      <field name="ColumnsDirty" cname="columns_dirty" bits="1" type="guint" />
      <implements>
        <interface cname="GtkTreeModel" />
        <interface cname="GtkTreeDragSource" />
        <interface cname="GtkTreeDragDest" />
        <interface cname="GtkTreeSortable" />
      </implements>
      <method name="Append" cname="gtk_list_store_append">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="Clear" cname="gtk_list_store_clear">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_list_store_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Insert" cname="gtk_list_store_insert">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertAfter" cname="gtk_list_store_insert_after">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="sibling" />
        </parameters>
      </method>
      <method name="InsertBefore" cname="gtk_list_store_insert_before">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="sibling" />
        </parameters>
      </method>
      <method name="IterIsValid" cname="gtk_list_store_iter_is_valid">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="MoveAfter" cname="gtk_list_store_move_after">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="position" />
        </parameters>
      </method>
      <method name="MoveBefore" cname="gtk_list_store_move_before">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="position" />
        </parameters>
      </method>
      <constructor cname="gtk_list_store_new">
        <parameters>
          <parameter type="gint" name="n_columns" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <constructor cname="gtk_list_store_newv">
        <parameters>
          <parameter type="gint" name="n_columns" />
          <parameter type="GType*" name="types" />
        </parameters>
      </constructor>
      <method name="Prepend" cname="gtk_list_store_prepend">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_list_store_remove">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="Reorder" cname="gtk_list_store_reorder">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="new_order" />
        </parameters>
      </method>
      <method name="Set" cname="gtk_list_store_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetColumnTypes" cname="gtk_list_store_set_column_types">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="n_columns" />
          <parameter type="GType*" name="types" />
        </parameters>
      </method>
      <method name="SetValist" cname="gtk_list_store_set_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_list_store_set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint" name="column" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="Swap" cname="gtk_list_store_swap">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="a" />
          <parameter type="GtkTreeIter*" name="b" />
        </parameters>
      </method>
    </object>
    <object name="Menu" cname="GtkMenu" parent="GtkMenuShell">
      <field name="ParentMenuItem" cname="parent_menu_item" type="GtkWidget*" />
      <field name="OldActiveMenuItem" cname="old_active_menu_item" type="GtkWidget*" />
      <field name="AccelGroup" cname="accel_group" type="GtkAccelGroup*" />
      <field name="AccelPath" cname="accel_path" type="gchar*" />
      <field name="PositionFunc" cname="position_func" type="GtkMenuPositionFunc" />
      <field name="PositionFuncData" cname="position_func_data" type="gpointer" />
      <field name="ToggleSize" cname="toggle_size" type="guint" />
      <field name="Toplevel" cname="toplevel" type="GtkWidget*" />
      <field name="TearoffWindow" cname="tearoff_window" type="GtkWidget*" />
      <field name="TearoffHbox" cname="tearoff_hbox" type="GtkWidget*" />
      <field name="TearoffScrollbar" cname="tearoff_scrollbar" type="GtkWidget*" />
      <field name="TearoffAdjustment" cname="tearoff_adjustment" type="GtkAdjustment*" />
      <field name="ViewWindow" cname="view_window" type="GdkWindow*" />
      <field name="BinWindow" cname="bin_window" type="GdkWindow*" />
      <field name="ScrollOffset" cname="scroll_offset" type="gint" />
      <field name="SavedScrollOffset" cname="saved_scroll_offset" type="gint" />
      <field name="ScrollStep" cname="scroll_step" type="gint" />
      <field name="TimeoutId" cname="timeout_id" type="guint" />
      <field name="NavigationRegion" cname="navigation_region" type="GdkRegion*" />
      <field name="NavigationTimeout" cname="navigation_timeout" type="guint" />
      <field name="NeedsDestructionRefCount" cname="needs_destruction_ref_count" bits="1" type="guint" />
      <field name="TornOff" cname="torn_off" bits="1" type="guint" />
      <field name="TearoffActive" cname="tearoff_active" bits="1" type="guint" />
      <field name="ScrollFast" cname="scroll_fast" bits="1" type="guint" />
      <field name="UpperArrowVisible" cname="upper_arrow_visible" bits="1" type="guint" />
      <field name="LowerArrowVisible" cname="lower_arrow_visible" bits="1" type="guint" />
      <field name="UpperArrowPrelight" cname="upper_arrow_prelight" bits="1" type="guint" />
      <field name="LowerArrowPrelight" cname="lower_arrow_prelight" bits="1" type="guint" />
      <property name="TearoffTitle" cname="tearoff-title" type="gchar*" readable="true" writeable="true" />
      <childprop name="LeftAttach" cname="left_attach" type="gint" readable="true" writeable="true" />
      <childprop name="RightAttach" cname="right_attach" type="gint" readable="true" writeable="true" />
      <childprop name="TopAttach" cname="top_attach" type="gint" readable="true" writeable="true" />
      <childprop name="BottomAttach" cname="bottom_attach" type="gint" readable="true" writeable="true" />
      <method name="Attach" cname="gtk_menu_attach">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="guint" name="left_attach" />
          <parameter type="guint" name="right_attach" />
          <parameter type="guint" name="top_attach" />
          <parameter type="guint" name="bottom_attach" />
        </parameters>
      </method>
      <method name="AttachToWidget" cname="gtk_menu_attach_to_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="attach_widget" />
          <parameter type="GtkMenuDetachFunc" name="detacher" />
        </parameters>
      </method>
      <method name="Detach" cname="gtk_menu_detach">
        <return-type type="void" />
      </method>
      <method name="GetAccelGroup" cname="gtk_menu_get_accel_group">
        <return-type type="GtkAccelGroup*" />
      </method>
      <method name="GetActive" cname="gtk_menu_get_active">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetAttachWidget" cname="gtk_menu_get_attach_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetTearoffState" cname="gtk_menu_get_tearoff_state">
        <return-type type="gboolean" />
      </method>
      <method name="GetTitle" cname="gtk_menu_get_title">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_menu_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_menu_new" />
      <method name="Popdown" cname="gtk_menu_popdown">
        <return-type type="void" />
      </method>
      <method name="Popup" cname="gtk_menu_popup">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="parent_menu_shell" />
          <parameter type="GtkWidget*" name="parent_menu_item" />
          <parameter type="GtkMenuPositionFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="guint" name="button" />
          <parameter type="guint32" name="activate_time" />
        </parameters>
      </method>
      <method name="ReorderChild" cname="gtk_menu_reorder_child">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="Reposition" cname="gtk_menu_reposition">
        <return-type type="void" />
      </method>
      <method name="SetAccelGroup" cname="gtk_menu_set_accel_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </method>
      <method name="SetAccelPath" cname="gtk_menu_set_accel_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
        </parameters>
      </method>
      <method name="SetActive" cname="gtk_menu_set_active">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="index_" />
        </parameters>
      </method>
      <method name="SetMonitor" cname="gtk_menu_set_monitor">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="monitor_num" />
        </parameters>
      </method>
      <method name="SetScreen" cname="gtk_menu_set_screen">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="SetTearoffState" cname="gtk_menu_set_tearoff_state">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="torn_off" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_menu_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
    </object>
    <object name="MenuBar" cname="GtkMenuBar" parent="GtkMenuShell">
      <method name="GetType" cname="gtk_menu_bar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_menu_bar_new" />
    </object>
    <object name="MenuItem" cname="GtkMenuItem" parent="GtkItem">
      <field name="Submenu" cname="submenu" type="GtkWidget*" />
      <field name="EventWindow" cname="event_window" type="GdkWindow*" />
      <field name="ToggleSize" cname="toggle_size" type="guint16" />
      <field name="AcceleratorWidth" cname="accelerator_width" type="guint16" />
      <field name="AccelPath" cname="accel_path" type="gchar*" />
      <field name="ShowSubmenuIndicator" cname="show_submenu_indicator" bits="1" type="guint" />
      <field name="SubmenuPlacement" cname="submenu_placement" bits="1" type="guint" />
      <field name="SubmenuDirection" cname="submenu_direction" bits="1" type="guint" />
      <field name="RightJustify" cname="right_justify" bits="1" type="guint" />
      <field name="TimerFromKeypress" cname="timer_from_keypress" bits="1" type="guint" />
      <field name="Timer" cname="timer" type="guint" />
      <signal name="Activate" cname="activate" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuItem*" name="menu_item" />
        </parameters>
      </signal>
      <signal name="ActivateItem" cname="activate_item" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuItem*" name="menu_item" />
        </parameters>
      </signal>
      <signal name="ToggleSizeRequest" cname="toggle_size_request" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuItem*" name="menu_item" />
          <parameter type="gint*" name="requisition" />
        </parameters>
      </signal>
      <signal name="ToggleSizeAllocate" cname="toggle_size_allocate" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuItem*" name="menu_item" />
          <parameter type="gint" name="allocation" />
        </parameters>
      </signal>
      <method name="Activate" cname="gtk_menu_item_activate">
        <return-type type="void" />
      </method>
      <method name="Deselect" cname="gtk_menu_item_deselect">
        <return-type type="void" />
      </method>
      <method name="GetRightJustified" cname="gtk_menu_item_get_right_justified">
        <return-type type="gboolean" />
      </method>
      <method name="GetSubmenu" cname="gtk_menu_item_get_submenu">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetType" cname="gtk_menu_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_menu_item_new" />
      <constructor cname="gtk_menu_item_new_with_label">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_menu_item_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="RemoveSubmenu" cname="gtk_menu_item_remove_submenu">
        <return-type type="void" />
      </method>
      <method name="Select" cname="gtk_menu_item_select">
        <return-type type="void" />
      </method>
      <method name="SetAccelPath" cname="gtk_menu_item_set_accel_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
        </parameters>
      </method>
      <method name="SetRightJustified" cname="gtk_menu_item_set_right_justified">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="right_justified" />
        </parameters>
      </method>
      <method name="SetSubmenu" cname="gtk_menu_item_set_submenu">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="submenu" />
        </parameters>
      </method>
      <method name="ToggleSizeAllocate" cname="gtk_menu_item_toggle_size_allocate">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="allocation" />
        </parameters>
      </method>
      <method name="ToggleSizeRequest" cname="gtk_menu_item_toggle_size_request">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="requisition" />
        </parameters>
      </method>
    </object>
    <object name="MenuShell" cname="GtkMenuShell" parent="GtkContainer">
      <field name="Children" cname="children" type="GList*" />
      <field name="ActiveMenuItem" cname="active_menu_item" type="GtkWidget*" />
      <field name="ParentMenuShell" cname="parent_menu_shell" type="GtkWidget*" />
      <field name="Button" cname="button" type="guint" />
      <field name="ActivateTime" cname="activate_time" type="guint32" />
      <field name="Active" cname="active" bits="1" type="guint" />
      <field name="HaveGrab" cname="have_grab" bits="1" type="guint" />
      <field name="HaveXgrab" cname="have_xgrab" bits="1" type="guint" />
      <field name="IgnoreLeave" cname="ignore_leave" bits="1" type="guint" />
      <field name="MenuFlag" cname="menu_flag" bits="1" type="guint" />
      <field name="IgnoreEnter" cname="ignore_enter" bits="1" type="guint" />
      <signal name="Deactivate" cname="deactivate" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuShell*" name="menu_shell" />
        </parameters>
      </signal>
      <signal name="SelectionDone" cname="selection-done" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuShell*" name="menu_shell" />
        </parameters>
      </signal>
      <signal name="MoveCurrent" cname="move_current" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuShell*" name="menu_shell" />
          <parameter type="GtkMenuDirectionType" name="direction" />
        </parameters>
      </signal>
      <signal name="ActivateCurrent" cname="activate_current" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuShell*" name="menu_shell" />
          <parameter type="gboolean" name="force_hide" />
        </parameters>
      </signal>
      <signal name="Cancel" cname="cancel" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuShell*" name="menu_shell" />
        </parameters>
      </signal>
      <virtual_method name="SelectItem" cname="select_item">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuShell*" name="menu_shell" />
          <parameter type="GtkWidget*" name="menu_item" />
        </parameters>
      </virtual_method>
      <virtual_method name="Insert" cname="insert">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenuShell*" name="menu_shell" />
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gint" name="position" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetPopupDelay" cname="get_popup_delay">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkMenuShell*" name="menu_shell" />
        </parameters>
      </virtual_method>
      <method name="ActivateItem" cname="gtk_menu_shell_activate_item">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="menu_item" />
          <parameter type="gboolean" name="force_deactivate" />
        </parameters>
      </method>
      <method name="Append" cname="gtk_menu_shell_append">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="Cancel" cname="gtk_menu_shell_cancel">
        <return-type type="void" />
      </method>
      <method name="Deactivate" cname="gtk_menu_shell_deactivate">
        <return-type type="void" />
      </method>
      <method name="Deselect" cname="gtk_menu_shell_deselect">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_menu_shell_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Insert" cname="gtk_menu_shell_insert">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="Prepend" cname="gtk_menu_shell_prepend">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="SelectFirst" cname="gtk_menu_shell_select_first">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="search_sensitive" />
        </parameters>
      </method>
      <method name="SelectItem" cname="gtk_menu_shell_select_item">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="menu_item" />
        </parameters>
      </method>
    </object>
    <object name="MessageDialog" cname="GtkMessageDialog" parent="GtkDialog">
      <field name="Image" cname="image" type="GtkWidget*" />
      <field name="Label" cname="label" type="GtkWidget*" />
      <property name="MessageType" cname="message_type" type="GtkMessageType" readable="true" writeable="true" construct="true" />
      <property name="Buttons" cname="buttons" type="GtkButtonsType" writeable="true" construct-only="true" />
      <method name="GetType" cname="gtk_message_dialog_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_message_dialog_new">
        <parameters>
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="GtkDialogFlags" name="flags" />
          <parameter type="GtkMessageType" name="type" />
          <parameter type="GtkButtonsType" name="buttons" />
          <parameter type="const-gchar*" name="message_format" printf_format="true" />
          <parameter ellipsis="true" printf_format_args="true" />
        </parameters>
      </constructor>
      <constructor cname="gtk_message_dialog_new_with_markup">
        <parameters>
          <parameter type="GtkWindow*" name="parent" />
          <parameter type="GtkDialogFlags" name="flags" />
          <parameter type="GtkMessageType" name="type" />
          <parameter type="GtkButtonsType" name="buttons" />
          <parameter type="const-gchar*" name="message_format" printf_format="true" />
          <parameter ellipsis="true" printf_format_args="true" />
        </parameters>
      </constructor>
      <method name="SetMarkup" cname="gtk_message_dialog_set_markup">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </method>
    </object>
    <object name="Misc" cname="GtkMisc" parent="GtkWidget">
      <field name="Xalign" cname="xalign" type="gfloat" />
      <field name="Yalign" cname="yalign" type="gfloat" />
      <field name="Xpad" cname="xpad" type="guint16" />
      <field name="Ypad" cname="ypad" type="guint16" />
      <property name="Xalign" cname="xalign" type="gfloat" readable="true" writeable="true" />
      <property name="Yalign" cname="yalign" type="gfloat" readable="true" writeable="true" />
      <property name="Xpad" cname="xpad" type="gint" readable="true" writeable="true" />
      <property name="Ypad" cname="ypad" type="gint" readable="true" writeable="true" />
      <method name="GetAlignment" cname="gtk_misc_get_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat*" name="xalign" />
          <parameter type="gfloat*" name="yalign" />
        </parameters>
      </method>
      <method name="GetPadding" cname="gtk_misc_get_padding">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="xpad" />
          <parameter type="gint*" name="ypad" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_misc_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetAlignment" cname="gtk_misc_set_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="xalign" />
          <parameter type="gfloat" name="yalign" />
        </parameters>
      </method>
      <method name="SetPadding" cname="gtk_misc_set_padding">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="xpad" />
          <parameter type="gint" name="ypad" />
        </parameters>
      </method>
    </object>
    <object name="Notebook" cname="GtkNotebook" parent="GtkContainer">
      <field name="CurPage" cname="cur_page" type="GtkNotebookPage*" />
      <field name="Children" cname="children" type="GList*" />
      <field name="FirstTab" cname="first_tab" type="GList*" />
      <field name="FocusTab" cname="focus_tab" type="GList*" />
      <field name="Menu" cname="menu" type="GtkWidget*" />
      <field name="EventWindow" cname="event_window" type="GdkWindow*" />
      <field name="Timer" cname="timer" type="guint32" />
      <field name="TabHborder" cname="tab_hborder" type="guint16" />
      <field name="TabVborder" cname="tab_vborder" type="guint16" />
      <field name="ShowTabs" cname="show_tabs" bits="1" type="guint" />
      <field name="Homogeneous" cname="homogeneous" bits="1" type="guint" />
      <field name="ShowBorder" cname="show_border" bits="1" type="guint" />
      <field name="TabPos" cname="tab_pos" bits="2" type="guint" />
      <field name="Scrollable" cname="scrollable" bits="1" type="guint" />
      <field name="InChild" cname="in_child" bits="3" type="guint" />
      <field name="ClickChild" cname="click_child" bits="3" type="guint" />
      <field name="Button" cname="button" bits="2" type="guint" />
      <field name="NeedTimer" cname="need_timer" bits="1" type="guint" />
      <field name="ChildHasFocus" cname="child_has_focus" bits="1" type="guint" />
      <field name="HaveVisibleChild" cname="have_visible_child" bits="1" type="guint" />
      <field name="FocusOut" cname="focus_out" bits="1" type="guint" />
      <field name="HasBeforePrevious" cname="has_before_previous" bits="1" type="guint" />
      <field name="HasBeforeNext" cname="has_before_next" bits="1" type="guint" />
      <field name="HasAfterPrevious" cname="has_after_previous" bits="1" type="guint" />
      <field name="HasAfterNext" cname="has_after_next" bits="1" type="guint" />
      <property name="Page" cname="page" type="gint" readable="true" writeable="true" />
      <property name="TabPos" cname="tab_pos" type="GtkPositionType" readable="true" writeable="true" />
      <property name="TabBorder" cname="tab_border" type="guint" writeable="true" />
      <property name="TabHborder" cname="tab_hborder" type="guint" readable="true" writeable="true" />
      <property name="TabVborder" cname="tab_vborder" type="guint" readable="true" writeable="true" />
      <property name="ShowTabs" cname="show_tabs" type="gboolean" readable="true" writeable="true" />
      <property name="ShowBorder" cname="show_border" type="gboolean" readable="true" writeable="true" />
      <property name="Scrollable" cname="scrollable" type="gboolean" readable="true" writeable="true" />
      <property name="EnablePopup" cname="enable_popup" type="gboolean" readable="true" writeable="true" />
      <property name="Homogeneous" cname="homogeneous" type="gboolean" readable="true" writeable="true" />
      <childprop name="TabLabel" cname="tab_label" type="gchar*" readable="true" writeable="true" />
      <childprop name="MenuLabel" cname="menu_label" type="gchar*" readable="true" writeable="true" />
      <childprop name="Position" cname="position" type="gint" readable="true" writeable="true" />
      <childprop name="TabExpand" cname="tab_expand" type="gboolean" readable="true" writeable="true" />
      <childprop name="TabFill" cname="tab_fill" type="gboolean" readable="true" writeable="true" />
      <childprop name="TabPack" cname="tab_pack" type="GtkPackType" readable="true" writeable="true" />
      <signal name="SwitchPage" cname="switch_page" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkNotebook*" name="notebook" />
          <parameter type="GtkNotebookPage*" name="page" />
          <parameter type="guint" name="page_num" />
        </parameters>
      </signal>
      <signal name="FocusTab" cname="focus_tab" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkNotebook*" name="notebook" />
          <parameter type="GtkNotebookTab" name="type" />
        </parameters>
      </signal>
      <signal name="SelectPage" cname="select_page" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkNotebook*" name="notebook" />
          <parameter type="gboolean" name="move_focus" />
        </parameters>
      </signal>
      <signal name="ChangeCurrentPage" cname="change_current_page" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkNotebook*" name="notebook" />
          <parameter type="gint" name="offset" />
        </parameters>
      </signal>
      <signal name="MoveFocusOut" cname="move_focus_out" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkNotebook*" name="notebook" />
          <parameter type="GtkDirectionType" name="direction" />
        </parameters>
      </signal>
      <method name="AppendPage" cname="gtk_notebook_append_page">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="tab_label" />
        </parameters>
      </method>
      <method name="AppendPageMenu" cname="gtk_notebook_append_page_menu">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="tab_label" />
          <parameter type="GtkWidget*" name="menu_label" />
        </parameters>
      </method>
      <method name="GetCurrentPage" cname="gtk_notebook_get_current_page">
        <return-type type="gint" />
      </method>
      <method name="GetMenuLabel" cname="gtk_notebook_get_menu_label">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="GetMenuLabelText" cname="gtk_notebook_get_menu_label_text">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="GetNPages" cname="gtk_notebook_get_n_pages">
        <return-type type="gint" />
      </method>
      <method name="GetNthPage" cname="gtk_notebook_get_nth_page">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="gint" name="page_num" />
        </parameters>
      </method>
      <method name="GetScrollable" cname="gtk_notebook_get_scrollable">
        <return-type type="gboolean" />
      </method>
      <method name="GetShowBorder" cname="gtk_notebook_get_show_border">
        <return-type type="gboolean" />
      </method>
      <method name="GetShowTabs" cname="gtk_notebook_get_show_tabs">
        <return-type type="gboolean" />
      </method>
      <method name="GetTabLabel" cname="gtk_notebook_get_tab_label">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="GetTabLabelText" cname="gtk_notebook_get_tab_label_text">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="GetTabPos" cname="gtk_notebook_get_tab_pos">
        <return-type type="GtkPositionType" />
      </method>
      <method name="GetType" cname="gtk_notebook_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InsertPage" cname="gtk_notebook_insert_page">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="tab_label" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertPageMenu" cname="gtk_notebook_insert_page_menu">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="tab_label" />
          <parameter type="GtkWidget*" name="menu_label" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <constructor cname="gtk_notebook_new" />
      <method name="NextPage" cname="gtk_notebook_next_page">
        <return-type type="void" />
      </method>
      <method name="PopupDisable" cname="gtk_notebook_popup_disable">
        <return-type type="void" />
      </method>
      <method name="PopupEnable" cname="gtk_notebook_popup_enable">
        <return-type type="void" />
      </method>
      <method name="PrependPage" cname="gtk_notebook_prepend_page">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="tab_label" />
        </parameters>
      </method>
      <method name="PrependPageMenu" cname="gtk_notebook_prepend_page_menu">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="tab_label" />
          <parameter type="GtkWidget*" name="menu_label" />
        </parameters>
      </method>
      <method name="PrevPage" cname="gtk_notebook_prev_page">
        <return-type type="void" />
      </method>
      <method name="QueryTabLabelPacking" cname="gtk_notebook_query_tab_label_packing">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean*" name="expand" />
          <parameter type="gboolean*" name="fill" />
          <parameter type="GtkPackType*" name="pack_type" />
        </parameters>
      </method>
      <method name="RemovePage" cname="gtk_notebook_remove_page">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="page_num" />
        </parameters>
      </method>
      <method name="ReorderChild" cname="gtk_notebook_reorder_child">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetCurrentPage" cname="gtk_notebook_set_current_page">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="page_num" />
        </parameters>
      </method>
      <method name="SetHomogeneousTabs" cname="gtk_notebook_set_homogeneous_tabs" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="homogeneous" />
        </parameters>
      </method>
      <method name="SetMenuLabel" cname="gtk_notebook_set_menu_label">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="menu_label" />
        </parameters>
      </method>
      <method name="SetMenuLabelText" cname="gtk_notebook_set_menu_label_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="menu_text" />
        </parameters>
      </method>
      <method name="SetScrollable" cname="gtk_notebook_set_scrollable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="scrollable" />
        </parameters>
      </method>
      <method name="SetShowBorder" cname="gtk_notebook_set_show_border">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_border" />
        </parameters>
      </method>
      <method name="SetShowTabs" cname="gtk_notebook_set_show_tabs">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_tabs" />
        </parameters>
      </method>
      <method name="SetTabBorder" cname="gtk_notebook_set_tab_border" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="border_width" />
        </parameters>
      </method>
      <method name="SetTabHborder" cname="gtk_notebook_set_tab_hborder" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="tab_hborder" />
        </parameters>
      </method>
      <method name="SetTabLabel" cname="gtk_notebook_set_tab_label">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkWidget*" name="tab_label" />
        </parameters>
      </method>
      <method name="SetTabLabelPacking" cname="gtk_notebook_set_tab_label_packing">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="expand" />
          <parameter type="gboolean" name="fill" />
          <parameter type="GtkPackType" name="pack_type" />
        </parameters>
      </method>
      <method name="SetTabLabelText" cname="gtk_notebook_set_tab_label_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="const-gchar*" name="tab_text" />
        </parameters>
      </method>
      <method name="SetTabPos" cname="gtk_notebook_set_tab_pos">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPositionType" name="pos" />
        </parameters>
      </method>
      <method name="SetTabVborder" cname="gtk_notebook_set_tab_vborder" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="tab_vborder" />
        </parameters>
      </method>
    </object>
    <object name="Object" cname="GtkObject" parent="GObject">
      <field name="Flags" cname="flags" type="guint32" />
      <property name="UserData" cname="user_data" type="gpointer" readable="true" writeable="true" />
      <signal name="Destroy" cname="destroy" when="CLEANUP">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
        </parameters>
      </signal>
      <virtual_method name="SetArg" cname="set_arg">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="GtkArg*" name="arg" />
          <parameter type="guint" name="arg_id" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetArg" cname="get_arg">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="GtkArg*" name="arg" />
          <parameter type="guint" name="arg_id" />
        </parameters>
      </virtual_method>
      <method name="AddArgType" cname="gtk_object_add_arg_type" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="arg_name" />
          <parameter type="GtkType" name="arg_type" />
          <parameter type="guint" name="arg_flags" />
          <parameter type="guint" name="arg_id" />
        </parameters>
      </method>
      <method name="Destroy" cname="gtk_object_destroy">
        <return-type type="void" />
      </method>
      <method name="Get" cname="gtk_object_get" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="GetData" cname="gtk_object_get_data" deprecated="1">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="GetDataById" cname="gtk_object_get_data_by_id" deprecated="1">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="GQuark" name="data_id" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_object_get_type" shared="true">
        <return-type type="GtkType" />
      </method>
      <method name="GetUserData" cname="gtk_object_get_user_data" deprecated="1">
        <return-type type="gpointer" />
      </method>
      <constructor cname="gtk_object_new" deprecated="1">
        <parameters>
          <parameter type="GtkType" name="type" />
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <method name="Ref" cname="gtk_object_ref" deprecated="1">
        <return-type type="GtkObject*" />
      </method>
      <method name="RemoveData" cname="gtk_object_remove_data" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="RemoveDataById" cname="gtk_object_remove_data_by_id" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GQuark" name="data_id" />
        </parameters>
      </method>
      <method name="RemoveNoNotify" cname="gtk_object_remove_no_notify" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
        </parameters>
      </method>
      <method name="RemoveNoNotifyById" cname="gtk_object_remove_no_notify_by_id" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GQuark" name="key_id" />
        </parameters>
      </method>
      <method name="Set" cname="gtk_object_set" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetData" cname="gtk_object_set_data" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="SetDataById" cname="gtk_object_set_data_by_id" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GQuark" name="data_id" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="SetDataByIdFull" cname="gtk_object_set_data_by_id_full" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GQuark" name="data_id" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetDataFull" cname="gtk_object_set_data_full" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="key" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetUserData" cname="gtk_object_set_user_data" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Sink" cname="gtk_object_sink">
        <return-type type="void" />
      </method>
      <method name="Unref" cname="gtk_object_unref" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="Weakref" cname="gtk_object_weakref" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkDestroyNotify" name="notify" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Weakunref" cname="gtk_object_weakunref" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkDestroyNotify" name="notify" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
    </object>
    <object name="OptionMenu" cname="GtkOptionMenu" deprecated="1" parent="GtkButton">
      <field name="Menu" cname="menu" type="GtkWidget*" />
      <field name="MenuItem" cname="menu_item" type="GtkWidget*" />
      <field name="Width" cname="width" type="guint16" />
      <field name="Height" cname="height" type="guint16" />
      <signal name="Changed" cname="changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkOptionMenu*" name="option_menu" />
        </parameters>
      </signal>
      <property name="Menu" cname="menu" type="GtkMenu" readable="true" writeable="true" />
      <method name="GetHistory" cname="gtk_option_menu_get_history" deprecated="1">
        <return-type type="gint" />
      </method>
      <method name="GetMenu" cname="gtk_option_menu_get_menu" deprecated="1">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetType" cname="gtk_option_menu_get_type" deprecated="1" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_option_menu_new" deprecated="1" />
      <method name="RemoveMenu" cname="gtk_option_menu_remove_menu" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="SetHistory" cname="gtk_option_menu_set_history" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="index_" />
        </parameters>
      </method>
      <method name="SetMenu" cname="gtk_option_menu_set_menu" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="menu" />
        </parameters>
      </method>
    </object>
    <object name="Paned" cname="GtkPaned" parent="GtkContainer">
      <field name="Child1" cname="child1" type="GtkWidget*" />
      <field name="Child2" cname="child2" type="GtkWidget*" />
      <field name="Handle" cname="handle" type="GdkWindow*" />
      <field name="XorGc" cname="xor_gc" type="GdkGC*" />
      <field name="CursorType" cname="cursor_type" type="GdkCursorType" />
      <field name="HandlePos" cname="handle_pos" type="GdkRectangle" />
      <field name="Child1Size" cname="child1_size" type="gint" />
      <field name="LastAllocation" cname="last_allocation" type="gint" />
      <field name="MinPosition" cname="min_position" type="gint" />
      <field name="MaxPosition" cname="max_position" type="gint" />
      <field name="PositionSet" cname="position_set" bits="1" type="guint" />
      <field name="InDrag" cname="in_drag" bits="1" type="guint" />
      <field name="Child1Shrink" cname="child1_shrink" bits="1" type="guint" />
      <field name="Child1Resize" cname="child1_resize" bits="1" type="guint" />
      <field name="Child2Shrink" cname="child2_shrink" bits="1" type="guint" />
      <field name="Child2Resize" cname="child2_resize" bits="1" type="guint" />
      <field name="Orientation" cname="orientation" bits="1" type="guint" />
      <field name="InRecursion" cname="in_recursion" bits="1" type="guint" />
      <field name="HandlePrelit" cname="handle_prelit" bits="1" type="guint" />
      <field name="LastChild1Focus" cname="last_child1_focus" type="GtkWidget*" />
      <field name="LastChild2Focus" cname="last_child2_focus" type="GtkWidget*" />
      <field name="Priv" cname="priv" type="GtkPanedPrivate*" />
      <field name="DragPos" cname="drag_pos" type="gint" />
      <field name="OriginalPosition" cname="original_position" type="gint" />
      <property name="Position" cname="position" type="gint" readable="true" writeable="true" />
      <property name="PositionSet" cname="position_set" type="gboolean" readable="true" writeable="true" />
      <property name="MinPosition" cname="min_position" type="gint" readable="true" />
      <property name="MaxPosition" cname="max_position" type="gint" readable="true" />
      <childprop name="Resize" cname="resize" type="gboolean" readable="true" writeable="true" />
      <childprop name="Shrink" cname="shrink" type="gboolean" readable="true" writeable="true" />
      <signal name="CycleChildFocus" cname="cycle_child_focus" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkPaned*" name="paned" />
          <parameter type="gboolean" name="reverse" />
        </parameters>
      </signal>
      <signal name="ToggleHandleFocus" cname="toggle_handle_focus" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkPaned*" name="paned" />
        </parameters>
      </signal>
      <signal name="MoveHandle" cname="move_handle" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkPaned*" name="paned" />
          <parameter type="GtkScrollType" name="scroll" />
        </parameters>
      </signal>
      <signal name="CycleHandleFocus" cname="cycle_handle_focus" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkPaned*" name="paned" />
          <parameter type="gboolean" name="reverse" />
        </parameters>
      </signal>
      <signal name="AcceptPosition" cname="accept_position" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkPaned*" name="paned" />
        </parameters>
      </signal>
      <signal name="CancelPosition" cname="cancel_position" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkPaned*" name="paned" />
        </parameters>
      </signal>
      <method name="Add1" cname="gtk_paned_add1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="Add2" cname="gtk_paned_add2">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="ComputePosition" cname="gtk_paned_compute_position" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="allocation" />
          <parameter type="gint" name="child1_req" />
          <parameter type="gint" name="child2_req" />
        </parameters>
      </method>
      <method name="GetChild1" cname="gtk_paned_get_child1">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetChild2" cname="gtk_paned_get_child2">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetPosition" cname="gtk_paned_get_position">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_paned_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Pack1" cname="gtk_paned_pack1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="resize" />
          <parameter type="gboolean" name="shrink" />
        </parameters>
      </method>
      <method name="Pack2" cname="gtk_paned_pack2">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gboolean" name="resize" />
          <parameter type="gboolean" name="shrink" />
        </parameters>
      </method>
      <method name="SetPosition" cname="gtk_paned_set_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
    </object>
    <object name="Plug" cname="GtkPlug" parent="GtkWindow">
      <field name="SocketWindow" cname="socket_window" type="GdkWindow*" />
      <field name="ModalityWindow" cname="modality_window" type="GtkWidget*" />
      <field name="ModalityGroup" cname="modality_group" type="GtkWindowGroup*" />
      <field name="GrabbedKeys" cname="grabbed_keys" type="GHashTable*" />
      <field name="SameApp" cname="same_app" bits="1" type="guint" />
      <signal name="Embedded" cname="embedded" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPlug*" name="plug" />
        </parameters>
      </signal>
      <method name="Construct" cname="gtk_plug_construct">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkNativeWindow" name="socket_id" />
        </parameters>
      </method>
      <method name="ConstructForDisplay" cname="gtk_plug_construct_for_display">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkNativeWindow" name="socket_id" />
        </parameters>
      </method>
      <method name="GetId" cname="gtk_plug_get_id">
        <return-type type="GdkNativeWindow" />
      </method>
      <method name="GetType" cname="gtk_plug_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_plug_new">
        <parameters>
          <parameter type="GdkNativeWindow" name="socket_id" />
        </parameters>
      </constructor>
      <constructor cname="gtk_plug_new_for_display">
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GdkNativeWindow" name="socket_id" />
        </parameters>
      </constructor>
    </object>
    <object name="ProgressBar" cname="GtkProgressBar" parent="GtkProgress">
      <field name="BarStyle" cname="bar_style" type="GtkProgressBarStyle" />
      <field name="Orientation" cname="orientation" type="GtkProgressBarOrientation" />
      <field name="Blocks" cname="blocks" type="guint" />
      <field name="InBlock" cname="in_block" type="gint" />
      <field name="ActivityPos" cname="activity_pos" type="gint" />
      <field name="ActivityStep" cname="activity_step" type="guint" />
      <field name="ActivityBlocks" cname="activity_blocks" type="guint" />
      <field name="PulseFraction" cname="pulse_fraction" type="gdouble" />
      <field name="ActivityDir" cname="activity_dir" bits="1" type="guint" />
      <property name="Adjustment" cname="adjustment" type="GtkAdjustment" readable="true" writeable="true" />
      <property name="Orientation" cname="orientation" type="GtkProgressBarOrientation" readable="true" writeable="true" />
      <property name="BarStyle" cname="bar_style" type="GtkProgressBarStyle" readable="true" writeable="true" />
      <property name="ActivityStep" cname="activity_step" type="guint" readable="true" writeable="true" />
      <property name="ActivityBlocks" cname="activity_blocks" type="guint" readable="true" writeable="true" />
      <property name="DiscreteBlocks" cname="discrete_blocks" type="guint" readable="true" writeable="true" />
      <property name="Fraction" cname="fraction" type="gdouble" readable="true" writeable="true" />
      <property name="PulseStep" cname="pulse_step" type="gdouble" readable="true" writeable="true" />
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true" />
      <method name="GetFraction" cname="gtk_progress_bar_get_fraction">
        <return-type type="gdouble" />
      </method>
      <method name="GetOrientation" cname="gtk_progress_bar_get_orientation">
        <return-type type="GtkProgressBarOrientation" />
      </method>
      <method name="GetPulseStep" cname="gtk_progress_bar_get_pulse_step">
        <return-type type="gdouble" />
      </method>
      <method name="GetText" cname="gtk_progress_bar_get_text">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_progress_bar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_progress_bar_new" />
      <constructor cname="gtk_progress_bar_new_with_adjustment" deprecated="1">
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </constructor>
      <method name="Pulse" cname="gtk_progress_bar_pulse">
        <return-type type="void" />
      </method>
      <method name="SetActivityBlocks" cname="gtk_progress_bar_set_activity_blocks" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="blocks" />
        </parameters>
      </method>
      <method name="SetActivityStep" cname="gtk_progress_bar_set_activity_step" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="step" />
        </parameters>
      </method>
      <method name="SetBarStyle" cname="gtk_progress_bar_set_bar_style" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkProgressBarStyle" name="style" />
        </parameters>
      </method>
      <method name="SetDiscreteBlocks" cname="gtk_progress_bar_set_discrete_blocks" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="blocks" />
        </parameters>
      </method>
      <method name="SetFraction" cname="gtk_progress_bar_set_fraction">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="fraction" />
        </parameters>
      </method>
      <method name="SetOrientation" cname="gtk_progress_bar_set_orientation">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkProgressBarOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="SetPulseStep" cname="gtk_progress_bar_set_pulse_step">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="fraction" />
        </parameters>
      </method>
      <method name="SetText" cname="gtk_progress_bar_set_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="Update" cname="gtk_progress_bar_update" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="percentage" />
        </parameters>
      </method>
    </object>
    <object name="RadioAction" cname="GtkRadioAction" parent="GtkToggleAction">
      <field name="PrivateData" cname="private_data" type="GtkRadioActionPrivate*" />
      <property name="Value" cname="value" type="gint" readable="true" writeable="true" />
      <property name="Group" cname="group" type="GtkRadioAction" writeable="true" />
      <signal name="Changed" cname="changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRadioAction*" name="action" />
          <parameter type="GtkRadioAction*" name="current" />
        </parameters>
      </signal>
      <method name="GetCurrentValue" cname="gtk_radio_action_get_current_value">
        <return-type type="gint" />
      </method>
      <method name="GetGroup" cname="gtk_radio_action_get_group">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="gtk_radio_action_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_radio_action_new">
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="label" />
          <parameter type="const-gchar*" name="tooltip" />
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="gint" name="value" />
        </parameters>
      </constructor>
      <method name="SetGroup" cname="gtk_radio_action_set_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GSList*" name="group" />
        </parameters>
      </method>
    </object>
    <object name="RadioButton" cname="GtkRadioButton" parent="GtkCheckButton">
      <field name="Group" cname="group" type="GSList*" />
      <property name="Group" cname="group" type="GtkRadioButton" writeable="true" />
      <signal name="GroupChanged" cname="group-changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRadioButton*" name="radio_button" />
        </parameters>
      </signal>
      <method name="GetGroup" cname="gtk_radio_button_get_group">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="gtk_radio_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_radio_button_new">
        <parameters>
          <parameter type="GSList*" name="group" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_from_widget">
        <parameters>
          <parameter type="GtkRadioButton*" name="group" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_with_label">
        <parameters>
          <parameter type="GSList*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_with_label_from_widget">
        <parameters>
          <parameter type="GtkRadioButton*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_with_mnemonic">
        <parameters>
          <parameter type="GSList*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_button_new_with_mnemonic_from_widget">
        <parameters>
          <parameter type="GtkRadioButton*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetGroup" cname="gtk_radio_button_set_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GSList*" name="group" />
        </parameters>
      </method>
    </object>
    <object name="RadioMenuItem" cname="GtkRadioMenuItem" parent="GtkCheckMenuItem">
      <field name="Group" cname="group" type="GSList*" />
      <signal name="GroupChanged" cname="group-changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRadioMenuItem*" name="radio_menu_item" />
        </parameters>
      </signal>
      <method name="GetGroup" cname="gtk_radio_menu_item_get_group">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="gtk_radio_menu_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_radio_menu_item_new">
        <parameters>
          <parameter type="GSList*" name="group" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_from_widget">
        <parameters>
          <parameter type="GtkRadioMenuItem*" name="group" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_with_label">
        <parameters>
          <parameter type="GSList*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_with_label_from_widget">
        <parameters>
          <parameter type="GtkRadioMenuItem*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_with_mnemonic">
        <parameters>
          <parameter type="GSList*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_menu_item_new_with_mnemonic_from_widget">
        <parameters>
          <parameter type="GtkRadioMenuItem*" name="group" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetGroup" cname="gtk_radio_menu_item_set_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GSList*" name="group" />
        </parameters>
      </method>
    </object>
    <object name="RadioToolButton" cname="GtkRadioToolButton" parent="GtkToggleToolButton">
      <property name="Group" cname="group" type="GtkRadioToolButton" writeable="true" />
      <method name="GetGroup" cname="gtk_radio_tool_button_get_group">
        <return-type type="GSList*" />
      </method>
      <method name="GetType" cname="gtk_radio_tool_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_radio_tool_button_new">
        <parameters>
          <parameter type="GSList*" name="group" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_tool_button_new_from_stock">
        <parameters>
          <parameter type="GSList*" name="group" />
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_tool_button_new_from_widget">
        <parameters>
          <parameter type="GtkRadioToolButton*" name="group" />
        </parameters>
      </constructor>
      <constructor cname="gtk_radio_tool_button_new_with_stock_from_widget">
        <parameters>
          <parameter type="GtkRadioToolButton*" name="group" />
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <method name="SetGroup" cname="gtk_radio_tool_button_set_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GSList*" name="group" />
        </parameters>
      </method>
    </object>
    <object name="Range" cname="GtkRange" parent="GtkWidget">
      <field name="Adjustment" cname="adjustment" type="GtkAdjustment*" />
      <field name="UpdatePolicy" cname="update_policy" type="GtkUpdateType" />
      <field name="Inverted" cname="inverted" bits="1" type="guint" />
      <field name="Flippable" cname="flippable" bits="1" type="guint" />
      <field name="HasStepperA" cname="has_stepper_a" bits="1" type="guint" />
      <field name="HasStepperB" cname="has_stepper_b" bits="1" type="guint" />
      <field name="HasStepperC" cname="has_stepper_c" bits="1" type="guint" />
      <field name="HasStepperD" cname="has_stepper_d" bits="1" type="guint" />
      <field name="NeedRecalc" cname="need_recalc" bits="1" type="guint" />
      <field name="SliderSizeFixed" cname="slider_size_fixed" bits="1" type="guint" />
      <field name="MinSliderSize" cname="min_slider_size" type="gint" />
      <field name="Orientation" cname="orientation" type="GtkOrientation" />
      <field name="RangeRect" cname="range_rect" type="GdkRectangle" />
      <field name="SliderStart" cname="slider_start" type="gint" />
      <field name="SliderEnd" cname="slider_end" type="gint" />
      <field name="RoundDigits" cname="round_digits" type="gint" />
      <field name="TroughClickForward" cname="trough_click_forward" bits="1" type="guint" />
      <field name="UpdatePending" cname="update_pending" bits="1" type="guint" />
      <field name="Layout" cname="layout" type="GtkRangeLayout*" />
      <field name="Timer" cname="timer" type="GtkRangeStepTimer*" />
      <field name="SlideInitialSliderPosition" cname="slide_initial_slider_position" type="gint" />
      <field name="SlideInitialCoordinate" cname="slide_initial_coordinate" type="gint" />
      <field name="UpdateTimeoutId" cname="update_timeout_id" type="guint" />
      <field name="EventWindow" cname="event_window" type="GdkWindow*" />
      <signal name="ValueChanged" cname="value_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRange*" name="range" />
        </parameters>
      </signal>
      <signal name="AdjustBounds" cname="adjust_bounds" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRange*" name="range" />
          <parameter type="gdouble" name="new_value" />
        </parameters>
      </signal>
      <signal name="MoveSlider" cname="move_slider" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRange*" name="range" />
          <parameter type="GtkScrollType" name="scroll" />
        </parameters>
      </signal>
      <property name="UpdatePolicy" cname="update_policy" type="GtkUpdateType" readable="true" writeable="true" />
      <property name="Adjustment" cname="adjustment" type="GtkAdjustment" readable="true" writeable="true" construct="true" />
      <property name="Inverted" cname="inverted" type="gboolean" readable="true" writeable="true" />
      <virtual_method name="GetRangeBorder" cname="get_range_border">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRange*" name="range" />
          <parameter type="GtkBorder*" name="border_" />
        </parameters>
      </virtual_method>
      <method name="GetAdjustment" cname="gtk_range_get_adjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetInverted" cname="gtk_range_get_inverted">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_range_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUpdatePolicy" cname="gtk_range_get_update_policy">
        <return-type type="GtkUpdateType" />
      </method>
      <method name="GetValue" cname="gtk_range_get_value">
        <return-type type="gdouble" />
      </method>
      <method name="SetAdjustment" cname="gtk_range_set_adjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetIncrements" cname="gtk_range_set_increments">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="step" />
          <parameter type="gdouble" name="page" />
        </parameters>
      </method>
      <method name="SetInverted" cname="gtk_range_set_inverted">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetRange" cname="gtk_range_set_range">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="min" />
          <parameter type="gdouble" name="max" />
        </parameters>
      </method>
      <method name="SetUpdatePolicy" cname="gtk_range_set_update_policy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkUpdateType" name="policy" />
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_range_set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="value" />
        </parameters>
      </method>
    </object>
    <object name="RcStyle" cname="GtkRcStyle" parent="GObject">
      <field name="Name" cname="name" type="gchar*" access="public" />
      <field name="BgPixmapName" cname="bg_pixmap_name" array_len="5" type="gchar*" access="public" />
      <field name="FontDesc" cname="font_desc" type="PangoFontDescription*" access="public" />
      <field name="ColorFlags" cname="color_flags" array_len="5" type="GtkRcFlags" access="public" />
      <field name="Fg" cname="fg" array_len="5" type="GdkColor" access="public" />
      <field name="Bg" cname="bg" array_len="5" type="GdkColor" access="public" />
      <field name="Text" cname="text" array_len="5" type="GdkColor" access="public" />
      <field name="Base" cname="base" array_len="5" type="GdkColor" access="public" />
      <field name="Xthickness" cname="xthickness" type="gint" access="public" />
      <field name="Ythickness" cname="ythickness" type="gint" access="public" />
      <field name="RcProperties" cname="rc_properties" type="GArray*" />
      <field name="RcStyleLists" cname="rc_style_lists" type="GSList*" />
      <field name="IconFactories" cname="icon_factories" type="GSList*" />
      <field name="EngineSpecified" cname="engine_specified" bits="1" type="guint" />
      <virtual_method name="CreateRcStyle" cname="create_rc_style">
        <return-type type="GtkRcStyle*" />
        <parameters>
          <parameter type="GtkRcStyle*" name="rc_style" />
        </parameters>
      </virtual_method>
      <virtual_method name="Parse" cname="parse">
        <return-type type="guint" />
        <parameters>
          <parameter type="GtkRcStyle*" name="rc_style" />
          <parameter type="GtkSettings*" name="settings" />
          <parameter type="GScanner*" name="scanner" />
        </parameters>
      </virtual_method>
      <virtual_method name="Merge" cname="merge">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRcStyle*" name="dest" />
          <parameter type="GtkRcStyle*" name="src" />
        </parameters>
      </virtual_method>
      <virtual_method name="CreateStyle" cname="create_style">
        <return-type type="GtkStyle*" />
        <parameters>
          <parameter type="GtkRcStyle*" name="rc_style" />
        </parameters>
      </virtual_method>
      <method name="Copy" cname="gtk_rc_style_copy">
        <return-type type="GtkRcStyle*" owned="true" />
      </method>
      <method name="GetType" cname="gtk_rc_style_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_rc_style_new" />
      <method name="Ref" cname="gtk_rc_style_ref">
        <return-type type="void" />
      </method>
      <method name="Unref" cname="gtk_rc_style_unref">
        <return-type type="void" />
      </method>
    </object>
    <object name="Ruler" cname="GtkRuler" parent="GtkWidget">
      <field name="BackingStore" cname="backing_store" type="GdkPixmap*" />
      <field name="NonGrExpGc" cname="non_gr_exp_gc" type="GdkGC*" />
      <field name="Metric" cname="metric" type="GtkRulerMetric*" />
      <field name="Xsrc" cname="xsrc" type="gint" />
      <field name="Ysrc" cname="ysrc" type="gint" />
      <field name="SliderSize" cname="slider_size" type="gint" />
      <field name="Lower" cname="lower" type="gdouble" />
      <field name="Upper" cname="upper" type="gdouble" />
      <field name="Position" cname="position" type="gdouble" />
      <field name="MaxSize" cname="max_size" type="gdouble" />
      <property name="Lower" cname="lower" type="gdouble" readable="true" writeable="true" />
      <property name="Upper" cname="upper" type="gdouble" readable="true" writeable="true" />
      <property name="Position" cname="position" type="gdouble" readable="true" writeable="true" />
      <property name="MaxSize" cname="max_size" type="gdouble" readable="true" writeable="true" />
      <virtual_method name="DrawTicks" cname="draw_ticks">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRuler*" name="ruler" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawPos" cname="draw_pos">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRuler*" name="ruler" />
        </parameters>
      </virtual_method>
      <method name="DrawPos" cname="gtk_ruler_draw_pos">
        <return-type type="void" />
      </method>
      <method name="DrawTicks" cname="gtk_ruler_draw_ticks">
        <return-type type="void" />
      </method>
      <method name="GetMetric" cname="gtk_ruler_get_metric">
        <return-type type="GtkMetricType" />
      </method>
      <method name="GetRange" cname="gtk_ruler_get_range">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="lower" />
          <parameter type="gdouble*" name="upper" />
          <parameter type="gdouble*" name="position" />
          <parameter type="gdouble*" name="max_size" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_ruler_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="SetMetric" cname="gtk_ruler_set_metric">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMetricType" name="metric" />
        </parameters>
      </method>
      <method name="SetRange" cname="gtk_ruler_set_range">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="lower" />
          <parameter type="gdouble" name="upper" />
          <parameter type="gdouble" name="position" />
          <parameter type="gdouble" name="max_size" />
        </parameters>
      </method>
    </object>
    <object name="Scale" cname="GtkScale" parent="GtkRange">
      <field name="Digits" cname="digits" type="gint" />
      <field name="DrawValue" cname="draw_value" bits="1" type="guint" />
      <field name="ValuePos" cname="value_pos" bits="2" type="guint" />
      <signal name="FormatValue" cname="format_value" when="LAST">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GtkScale*" name="scale" />
          <parameter type="gdouble" name="value" />
        </parameters>
      </signal>
      <property name="Digits" cname="digits" type="gint" readable="true" writeable="true" />
      <property name="DrawValue" cname="draw_value" type="gboolean" readable="true" writeable="true" />
      <property name="ValuePos" cname="value_pos" type="GtkPositionType" readable="true" writeable="true" />
      <virtual_method name="DrawValue" cname="draw_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkScale*" name="scale" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetLayoutOffsets" cname="get_layout_offsets">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkScale*" name="scale" />
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </virtual_method>
      <method name="GetDigits" cname="gtk_scale_get_digits">
        <return-type type="gint" />
      </method>
      <method name="GetDrawValue" cname="gtk_scale_get_draw_value">
        <return-type type="gboolean" />
      </method>
      <method name="GetLayout" cname="gtk_scale_get_layout">
        <return-type type="PangoLayout*" />
      </method>
      <method name="GetLayoutOffsets" cname="gtk_scale_get_layout_offsets">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_scale_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetValuePos" cname="gtk_scale_get_value_pos">
        <return-type type="GtkPositionType" />
      </method>
      <method name="SetDigits" cname="gtk_scale_set_digits">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="digits" />
        </parameters>
      </method>
      <method name="SetDrawValue" cname="gtk_scale_set_draw_value">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="draw_value" />
        </parameters>
      </method>
      <method name="SetValuePos" cname="gtk_scale_set_value_pos">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPositionType" name="pos" />
        </parameters>
      </method>
    </object>
    <object name="Scrollbar" cname="GtkScrollbar" parent="GtkRange">
      <method name="GetType" cname="gtk_scrollbar_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="ScrolledWindow" cname="GtkScrolledWindow" parent="GtkBin">
      <field name="Hscrollbar" cname="hscrollbar" type="GtkWidget*" />
      <field name="Vscrollbar" cname="vscrollbar" type="GtkWidget*" />
      <field name="HscrollbarPolicy" cname="hscrollbar_policy" bits="2" type="guint" />
      <field name="VscrollbarPolicy" cname="vscrollbar_policy" bits="2" type="guint" />
      <field name="HscrollbarVisible" cname="hscrollbar_visible" bits="1" type="guint" />
      <field name="VscrollbarVisible" cname="vscrollbar_visible" bits="1" type="guint" />
      <field name="WindowPlacement" cname="window_placement" bits="2" type="guint" />
      <field name="FocusOut" cname="focus_out" bits="1" type="guint" />
      <field name="ShadowType" cname="shadow_type" type="guint16" />
      <property name="Hadjustment" cname="hadjustment" type="GtkAdjustment" readable="true" writeable="true" construct="true" />
      <property name="Vadjustment" cname="vadjustment" type="GtkAdjustment" readable="true" writeable="true" construct="true" />
      <property name="HscrollbarPolicy" cname="hscrollbar_policy" type="GtkPolicyType" readable="true" writeable="true" />
      <property name="VscrollbarPolicy" cname="vscrollbar_policy" type="GtkPolicyType" readable="true" writeable="true" />
      <property name="WindowPlacement" cname="window_placement" type="GtkCornerType" readable="true" writeable="true" />
      <property name="ShadowType" cname="shadow_type" type="GtkShadowType" readable="true" writeable="true" />
      <signal name="ScrollChild" cname="scroll_child" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkScrolledWindow*" name="scrolled_window" />
          <parameter type="GtkScrollType" name="scroll" />
          <parameter type="gboolean" name="horizontal" />
        </parameters>
      </signal>
      <signal name="MoveFocusOut" cname="move_focus_out" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkScrolledWindow*" name="scrolled_window" />
          <parameter type="GtkDirectionType" name="direction" />
        </parameters>
      </signal>
      <method name="AddWithViewport" cname="gtk_scrolled_window_add_with_viewport">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
      <method name="GetHadjustment" cname="gtk_scrolled_window_get_hadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetPlacement" cname="gtk_scrolled_window_get_placement">
        <return-type type="GtkCornerType" />
      </method>
      <method name="GetPolicy" cname="gtk_scrolled_window_get_policy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPolicyType*" name="hscrollbar_policy" />
          <parameter type="GtkPolicyType*" name="vscrollbar_policy" />
        </parameters>
      </method>
      <method name="GetShadowType" cname="gtk_scrolled_window_get_shadow_type">
        <return-type type="GtkShadowType" />
      </method>
      <method name="GetType" cname="gtk_scrolled_window_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVadjustment" cname="gtk_scrolled_window_get_vadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <constructor cname="gtk_scrolled_window_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="hadjustment" />
          <parameter type="GtkAdjustment*" name="vadjustment" />
        </parameters>
      </constructor>
      <method name="SetHadjustment" cname="gtk_scrolled_window_set_hadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="hadjustment" />
        </parameters>
      </method>
      <method name="SetPlacement" cname="gtk_scrolled_window_set_placement">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCornerType" name="window_placement" />
        </parameters>
      </method>
      <method name="SetPolicy" cname="gtk_scrolled_window_set_policy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPolicyType" name="hscrollbar_policy" />
          <parameter type="GtkPolicyType" name="vscrollbar_policy" />
        </parameters>
      </method>
      <method name="SetShadowType" cname="gtk_scrolled_window_set_shadow_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkShadowType" name="type" />
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gtk_scrolled_window_set_vadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="hadjustment" />
        </parameters>
      </method>
    </object>
    <object name="Separator" cname="GtkSeparator" parent="GtkWidget">
      <method name="GetType" cname="gtk_separator_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </object>
    <object name="SeparatorMenuItem" cname="GtkSeparatorMenuItem" parent="GtkMenuItem">
      <method name="GetType" cname="gtk_separator_menu_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_separator_menu_item_new" />
    </object>
    <object name="SeparatorToolItem" cname="GtkSeparatorToolItem" parent="GtkToolItem">
      <field name="Priv" cname="priv" type="GtkSeparatorToolItemPrivate*" />
      <property name="Draw" cname="draw" type="gboolean" readable="true" writeable="true" />
      <method name="GetDraw" cname="gtk_separator_tool_item_get_draw">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_separator_tool_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_separator_tool_item_new" />
      <method name="SetDraw" cname="gtk_separator_tool_item_set_draw">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="draw" />
        </parameters>
      </method>
    </object>
    <object name="Settings" cname="GtkSettings" parent="GObject">
      <field name="QueuedSettings" cname="queued_settings" type="GData*" />
      <field name="PropertyValues" cname="property_values" type="GtkSettingsPropertyValue*" />
      <field name="RcContext" cname="rc_context" type="GtkRcContext*" />
      <field name="Screen" cname="screen" type="GdkScreen*" />
      <method name="GetDefault" cname="gtk_settings_get_default" shared="true">
        <return-type type="GtkSettings*" />
      </method>
      <method name="GetForScreen" cname="gtk_settings_get_for_screen" shared="true">
        <return-type type="GtkSettings*" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_settings_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="InstallProperty" cname="gtk_settings_install_property" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GParamSpec*" name="pspec" />
        </parameters>
      </method>
      <method name="InstallPropertyParser" cname="gtk_settings_install_property_parser" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GParamSpec*" name="pspec" />
          <parameter type="GtkRcPropertyParser" name="parser" />
        </parameters>
      </method>
      <method name="SetDoubleProperty" cname="gtk_settings_set_double_property">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="gdouble" name="v_double" />
          <parameter type="const-gchar*" name="origin" />
        </parameters>
      </method>
      <method name="SetLongProperty" cname="gtk_settings_set_long_property">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="glong" name="v_long" />
          <parameter type="const-gchar*" name="origin" />
        </parameters>
      </method>
      <method name="SetPropertyValue" cname="gtk_settings_set_property_value">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-GtkSettingsValue*" name="svalue" />
        </parameters>
      </method>
      <method name="SetStringProperty" cname="gtk_settings_set_string_property">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="v_string" />
          <parameter type="const-gchar*" name="origin" />
        </parameters>
      </method>
    </object>
    <object name="SizeGroup" cname="GtkSizeGroup" parent="GObject">
      <field name="Widgets" cname="widgets" type="GSList*" />
      <field name="Mode" cname="mode" type="guint8" />
      <field name="HaveWidth" cname="have_width" bits="1" type="guint" />
      <field name="HaveHeight" cname="have_height" bits="1" type="guint" />
      <field name="Requisition" cname="requisition" type="GtkRequisition" />
      <property name="Mode" cname="mode" type="GtkSizeGroupMode" readable="true" writeable="true" />
      <method name="AddWidget" cname="gtk_size_group_add_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="GetMode" cname="gtk_size_group_get_mode">
        <return-type type="GtkSizeGroupMode" />
      </method>
      <method name="GetType" cname="gtk_size_group_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_size_group_new">
        <parameters>
          <parameter type="GtkSizeGroupMode" name="mode" />
        </parameters>
      </constructor>
      <method name="RemoveWidget" cname="gtk_size_group_remove_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="SetMode" cname="gtk_size_group_set_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSizeGroupMode" name="mode" />
        </parameters>
      </method>
    </object>
    <object name="Socket" cname="GtkSocket" parent="GtkContainer">
      <field name="RequestWidth" cname="request_width" type="guint16" />
      <field name="RequestHeight" cname="request_height" type="guint16" />
      <field name="CurrentWidth" cname="current_width" type="guint16" />
      <field name="CurrentHeight" cname="current_height" type="guint16" />
      <field name="PlugWindow" cname="plug_window" type="GdkWindow*" />
      <field name="PlugWidget" cname="plug_widget" type="GtkWidget*" />
      <field name="XembedVersion" cname="xembed_version" type="gshort" />
      <field name="SameApp" cname="same_app" bits="1" type="guint" />
      <field name="FocusIn" cname="focus_in" bits="1" type="guint" />
      <field name="HaveSize" cname="have_size" bits="1" type="guint" />
      <field name="NeedMap" cname="need_map" bits="1" type="guint" />
      <field name="IsMapped" cname="is_mapped" bits="1" type="guint" />
      <field name="Active" cname="active" bits="1" type="guint" />
      <field name="AccelGroup" cname="accel_group" type="GtkAccelGroup*" />
      <field name="Toplevel" cname="toplevel" type="GtkWidget*" />
      <signal name="PlugAdded" cname="plug_added" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSocket*" name="socket_" />
        </parameters>
      </signal>
      <signal name="PlugRemoved" cname="plug_removed" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkSocket*" name="socket_" />
        </parameters>
      </signal>
      <method name="AddId" cname="gtk_socket_add_id">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkNativeWindow" name="window_id" />
        </parameters>
      </method>
      <method name="GetId" cname="gtk_socket_get_id">
        <return-type type="GdkNativeWindow" />
      </method>
      <method name="GetType" cname="gtk_socket_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_socket_new" />
      <method name="Steal" cname="gtk_socket_steal" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkNativeWindow" name="wid" />
        </parameters>
      </method>
    </object>
    <object name="SpinButton" cname="GtkSpinButton" parent="GtkEntry">
      <field name="Adjustment" cname="adjustment" type="GtkAdjustment*" />
      <field name="Panel" cname="panel" type="GdkWindow*" />
      <field name="Timer" cname="timer" type="guint32" />
      <field name="ClimbRate" cname="climb_rate" type="gdouble" />
      <field name="TimerStep" cname="timer_step" type="gdouble" />
      <field name="UpdatePolicy" cname="update_policy" type="GtkSpinButtonUpdatePolicy" />
      <field name="InChild" cname="in_child" bits="2" type="guint" />
      <field name="ClickChild" cname="click_child" bits="2" type="guint" />
      <field name="Button" cname="button" bits="2" type="guint" />
      <field name="NeedTimer" cname="need_timer" bits="1" type="guint" />
      <field name="TimerCalls" cname="timer_calls" bits="3" type="guint" />
      <field name="Digits" cname="digits" bits="10" type="guint" />
      <field name="Numeric" cname="numeric" bits="1" type="guint" />
      <field name="Wrap" cname="wrap" bits="1" type="guint" />
      <field name="SnapToTicks" cname="snap_to_ticks" bits="1" type="guint" />
      <property name="Adjustment" cname="adjustment" type="GtkAdjustment" readable="true" writeable="true" />
      <property name="ClimbRate" cname="climb_rate" type="gdouble" readable="true" writeable="true" />
      <property name="Digits" cname="digits" type="guint" readable="true" writeable="true" />
      <property name="SnapToTicks" cname="snap_to_ticks" type="gboolean" readable="true" writeable="true" />
      <property name="Numeric" cname="numeric" type="gboolean" readable="true" writeable="true" />
      <property name="Wrap" cname="wrap" type="gboolean" readable="true" writeable="true" />
      <property name="UpdatePolicy" cname="update_policy" type="GtkSpinButtonUpdatePolicy" readable="true" writeable="true" />
      <property name="Value" cname="value" type="gdouble" readable="true" writeable="true" />
      <signal name="Input" cname="input" when="LAST">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkSpinButton*" name="spin_button" />
          <parameter type="gdouble*" name="new_value" />
        </parameters>
      </signal>
      <signal name="Output" cname="output" when="LAST">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkSpinButton*" name="spin_button" />
        </parameters>
      </signal>
      <signal name="ValueChanged" cname="value_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSpinButton*" name="spin_button" />
        </parameters>
      </signal>
      <signal name="ChangeValue" cname="change_value" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSpinButton*" name="spin_button" />
          <parameter type="GtkScrollType" name="scroll" />
        </parameters>
      </signal>
      <implements>
        <interface cname="GtkEditable" />
      </implements>
      <method name="Configure" cname="gtk_spin_button_configure">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
          <parameter type="gdouble" name="climb_rate" />
          <parameter type="guint" name="digits" />
        </parameters>
      </method>
      <method name="GetAdjustment" cname="gtk_spin_button_get_adjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetDigits" cname="gtk_spin_button_get_digits">
        <return-type type="guint" />
      </method>
      <method name="GetIncrements" cname="gtk_spin_button_get_increments">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="step" />
          <parameter type="gdouble*" name="page" />
        </parameters>
      </method>
      <method name="GetNumeric" cname="gtk_spin_button_get_numeric">
        <return-type type="gboolean" />
      </method>
      <method name="GetRange" cname="gtk_spin_button_get_range">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble*" name="min" />
          <parameter type="gdouble*" name="max" />
        </parameters>
      </method>
      <method name="GetSnapToTicks" cname="gtk_spin_button_get_snap_to_ticks">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_spin_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUpdatePolicy" cname="gtk_spin_button_get_update_policy">
        <return-type type="GtkSpinButtonUpdatePolicy" />
      </method>
      <method name="GetValue" cname="gtk_spin_button_get_value">
        <return-type type="gdouble" />
      </method>
      <method name="GetValueAsInt" cname="gtk_spin_button_get_value_as_int">
        <return-type type="gint" />
      </method>
      <method name="GetWrap" cname="gtk_spin_button_get_wrap">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_spin_button_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
          <parameter type="gdouble" name="climb_rate" />
          <parameter type="guint" name="digits" />
        </parameters>
      </constructor>
      <constructor cname="gtk_spin_button_new_with_range">
        <parameters>
          <parameter type="gdouble" name="min" />
          <parameter type="gdouble" name="max" />
          <parameter type="gdouble" name="step" />
        </parameters>
      </constructor>
      <method name="SetAdjustment" cname="gtk_spin_button_set_adjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetDigits" cname="gtk_spin_button_set_digits">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="digits" />
        </parameters>
      </method>
      <method name="SetIncrements" cname="gtk_spin_button_set_increments">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="step" />
          <parameter type="gdouble" name="page" />
        </parameters>
      </method>
      <method name="SetNumeric" cname="gtk_spin_button_set_numeric">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="numeric" />
        </parameters>
      </method>
      <method name="SetRange" cname="gtk_spin_button_set_range">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="min" />
          <parameter type="gdouble" name="max" />
        </parameters>
      </method>
      <method name="SetSnapToTicks" cname="gtk_spin_button_set_snap_to_ticks">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="snap_to_ticks" />
        </parameters>
      </method>
      <method name="SetUpdatePolicy" cname="gtk_spin_button_set_update_policy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSpinButtonUpdatePolicy" name="policy" />
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_spin_button_set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="value" />
        </parameters>
      </method>
      <method name="SetWrap" cname="gtk_spin_button_set_wrap">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="wrap" />
        </parameters>
      </method>
      <method name="Spin" cname="gtk_spin_button_spin">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSpinType" name="direction" />
          <parameter type="gdouble" name="increment" />
        </parameters>
      </method>
      <method name="Update" cname="gtk_spin_button_update">
        <return-type type="void" />
      </method>
    </object>
    <object name="Statusbar" cname="GtkStatusbar" parent="GtkHBox">
      <field name="Frame" cname="frame" type="GtkWidget*" />
      <field name="Label" cname="label" type="GtkWidget*" />
      <field name="Messages" cname="messages" type="GSList*" />
      <field name="Keys" cname="keys" type="GSList*" />
      <field name="SeqContextId" cname="seq_context_id" type="guint" />
      <field name="SeqMessageId" cname="seq_message_id" type="guint" />
      <field name="GripWindow" cname="grip_window" type="GdkWindow*" />
      <field name="HasResizeGrip" cname="has_resize_grip" bits="1" type="guint" />
      <property name="HasResizeGrip" cname="has_resize_grip" type="gboolean" readable="true" writeable="true" />
      <signal name="TextPushed" cname="text_pushed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStatusbar*" name="statusbar" />
          <parameter type="guint" name="context_id" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </signal>
      <signal name="TextPopped" cname="text_popped" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStatusbar*" name="statusbar" />
          <parameter type="guint" name="context_id" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </signal>
      <method name="GetContextId" cname="gtk_statusbar_get_context_id">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="context_description" />
        </parameters>
      </method>
      <method name="GetHasResizeGrip" cname="gtk_statusbar_get_has_resize_grip">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_statusbar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_statusbar_new" />
      <method name="Pop" cname="gtk_statusbar_pop">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="context_id" />
        </parameters>
      </method>
      <method name="Push" cname="gtk_statusbar_push">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="context_id" />
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_statusbar_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="context_id" />
          <parameter type="guint" name="message_id" />
        </parameters>
      </method>
      <method name="SetHasResizeGrip" cname="gtk_statusbar_set_has_resize_grip">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
    </object>
    <object name="Style" cname="GtkStyle" parent="GObject">
      <field name="Fg" cname="fg" array_len="5" type="GdkColor" access="public" />
      <field name="Bg" cname="bg" array_len="5" type="GdkColor" access="public" />
      <field name="Light" cname="light" array_len="5" type="GdkColor" access="public" />
      <field name="Dark" cname="dark" array_len="5" type="GdkColor" access="public" />
      <field name="Mid" cname="mid" array_len="5" type="GdkColor" access="public" />
      <field name="Text" cname="text" array_len="5" type="GdkColor" access="public" />
      <field name="Base" cname="base" array_len="5" type="GdkColor" access="public" />
      <field name="TextAa" cname="text_aa" array_len="5" type="GdkColor" access="public" />
      <field name="Black" cname="black" type="GdkColor" access="public" />
      <field name="White" cname="white" type="GdkColor" access="public" />
      <field name="FontDesc" cname="font_desc" type="PangoFontDescription*" access="public" />
      <field name="Xthickness" cname="xthickness" type="gint" access="public" />
      <field name="Ythickness" cname="ythickness" type="gint" access="public" />
      <field name="FgGc" cname="fg_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="BgGc" cname="bg_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="LightGc" cname="light_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="DarkGc" cname="dark_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="MidGc" cname="mid_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="TextGc" cname="text_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="BaseGc" cname="base_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="TextAaGc" cname="text_aa_gc" array_len="5" type="GdkGC*" access="public" />
      <field name="BlackGc" cname="black_gc" type="GdkGC*" access="public" />
      <field name="WhiteGc" cname="white_gc" type="GdkGC*" access="public" />
      <field name="BgPixmap" cname="bg_pixmap" array_len="5" type="GdkPixmap*" access="public" />
      <field name="AttachCount" cname="attach_count" type="gint" />
      <field name="Depth" cname="depth" type="gint" />
      <field name="Colormap" cname="colormap" type="GdkColormap*" />
      <field name="PrivateFont" cname="private_font" type="GdkFont*" />
      <field name="PrivateFontDesc" cname="private_font_desc" type="PangoFontDescription*" />
      <field name="RcStyle" cname="rc_style" type="GtkRcStyle*" />
      <field name="Styles" cname="styles" type="GSList*" />
      <field name="PropertyCache" cname="property_cache" type="GArray*" />
      <field name="IconFactories" cname="icon_factories" type="GSList*" />
      <signal name="Realize" cname="realize" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
        </parameters>
      </signal>
      <signal name="Unrealize" cname="unrealize" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
        </parameters>
      </signal>
      <virtual_method name="Copy" cname="copy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GtkStyle*" name="src" />
        </parameters>
      </virtual_method>
      <virtual_method name="Clone" cname="clone">
        <return-type type="GtkStyle*" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
        </parameters>
      </virtual_method>
      <virtual_method name="InitFromRc" cname="init_from_rc">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GtkRcStyle*" name="rc_style" />
        </parameters>
      </virtual_method>
      <virtual_method name="SetBackground" cname="set_background">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
        </parameters>
      </virtual_method>
      <virtual_method name="RenderIcon" cname="render_icon">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="const-GtkIconSource*" name="source" />
          <parameter type="GtkTextDirection" name="direction" />
          <parameter type="GtkStateType" name="state" />
          <parameter type="GtkIconSize" name="size" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawHline" cname="draw_hline">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x1" />
          <parameter type="gint" name="x2" />
          <parameter type="gint" name="y" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawVline" cname="draw_vline">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="y1_" />
          <parameter type="gint" name="y2_" />
          <parameter type="gint" name="x" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawShadow" cname="draw_shadow">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawPolygon" cname="draw_polygon">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="GdkPoint*" name="point" />
          <parameter type="gint" name="npoints" />
          <parameter type="gboolean" name="fill" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawArrow" cname="draw_arrow">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="GtkArrowType" name="arrow_type" />
          <parameter type="gboolean" name="fill" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawDiamond" cname="draw_diamond">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawString" cname="draw_string">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawBox" cname="draw_box">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawFlatBox" cname="draw_flat_box">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawCheck" cname="draw_check">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawOption" cname="draw_option">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawTab" cname="draw_tab">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawShadowGap" cname="draw_shadow_gap">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
          <parameter type="gint" name="gap_x" />
          <parameter type="gint" name="gap_width" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawBoxGap" cname="draw_box_gap">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
          <parameter type="gint" name="gap_x" />
          <parameter type="gint" name="gap_width" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawExtension" cname="draw_extension">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawFocus" cname="draw_focus">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawSlider" cname="draw_slider">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkOrientation" name="orientation" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawHandle" cname="draw_handle">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkOrientation" name="orientation" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawExpander" cname="draw_expander">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="GtkExpanderStyle" name="expander_style" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawLayout" cname="draw_layout">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="gboolean" name="use_text" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="PangoLayout*" name="layout" />
        </parameters>
      </virtual_method>
      <virtual_method name="DrawResizeGrip" cname="draw_resize_grip">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="GdkWindowEdge" name="edge" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </virtual_method>
      <method name="ApplyDefaultBackground" cname="gtk_style_apply_default_background">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gboolean" name="set_bg" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Attach" cname="gtk_style_attach">
        <return-type type="GtkStyle*" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </method>
      <method name="Copy" cname="gtk_style_copy">
        <return-type type="GtkStyle*" owned="true" />
      </method>
      <method name="Detach" cname="gtk_style_detach">
        <return-type type="void" />
      </method>
      <method name="GetFont" cname="gtk_style_get_font" deprecated="1">
        <return-type type="GdkFont*" />
      </method>
      <method name="GetType" cname="gtk_style_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="LookupIconSet" cname="gtk_style_lookup_icon_set">
        <return-type type="GtkIconSet*" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </method>
      <constructor cname="gtk_style_new" />
      <method name="Ref" cname="gtk_style_ref" deprecated="1">
        <return-type type="GtkStyle*" />
      </method>
      <method name="RenderIcon" cname="gtk_style_render_icon">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="const-GtkIconSource*" name="source" />
          <parameter type="GtkTextDirection" name="direction" />
          <parameter type="GtkStateType" name="state" />
          <parameter type="GtkIconSize" name="size" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
        </parameters>
      </method>
      <method name="SetBackground" cname="gtk_style_set_background">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
        </parameters>
      </method>
      <method name="SetFont" cname="gtk_style_set_font" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkFont*" name="font" />
        </parameters>
      </method>
      <method name="Unref" cname="gtk_style_unref" deprecated="1">
        <return-type type="void" />
      </method>
    </object>
    <object name="Table" cname="GtkTable" parent="GtkContainer">
      <field name="Children" cname="children" type="GList*" />
      <field name="Rows" cname="rows" type="GtkTableRowCol*" />
      <field name="Cols" cname="cols" type="GtkTableRowCol*" />
      <field name="Nrows" cname="nrows" type="guint16" />
      <field name="Ncols" cname="ncols" type="guint16" />
      <field name="ColumnSpacing" cname="column_spacing" type="guint16" />
      <field name="RowSpacing" cname="row_spacing" type="guint16" />
      <field name="Homogeneous" cname="homogeneous" bits="1" type="guint" />
      <property name="NRows" cname="n_rows" type="guint" readable="true" writeable="true" />
      <property name="NColumns" cname="n_columns" type="guint" readable="true" writeable="true" />
      <property name="RowSpacing" cname="row_spacing" type="guint" readable="true" writeable="true" />
      <property name="ColumnSpacing" cname="column_spacing" type="guint" readable="true" writeable="true" />
      <property name="Homogeneous" cname="homogeneous" type="gboolean" readable="true" writeable="true" />
      <childprop name="LeftAttach" cname="left_attach" type="guint" readable="true" writeable="true" />
      <childprop name="RightAttach" cname="right_attach" type="guint" readable="true" writeable="true" />
      <childprop name="TopAttach" cname="top_attach" type="guint" readable="true" writeable="true" />
      <childprop name="BottomAttach" cname="bottom_attach" type="guint" readable="true" writeable="true" />
      <childprop name="XOptions" cname="x_options" type="GtkAttachOptions" readable="true" writeable="true" />
      <childprop name="YOptions" cname="y_options" type="GtkAttachOptions" readable="true" writeable="true" />
      <childprop name="XPadding" cname="x_padding" type="guint" readable="true" writeable="true" />
      <childprop name="YPadding" cname="y_padding" type="guint" readable="true" writeable="true" />
      <method name="Attach" cname="gtk_table_attach">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="guint" name="left_attach" />
          <parameter type="guint" name="right_attach" />
          <parameter type="guint" name="top_attach" />
          <parameter type="guint" name="bottom_attach" />
          <parameter type="GtkAttachOptions" name="xoptions" />
          <parameter type="GtkAttachOptions" name="yoptions" />
          <parameter type="guint" name="xpadding" />
          <parameter type="guint" name="ypadding" />
        </parameters>
      </method>
      <method name="AttachDefaults" cname="gtk_table_attach_defaults">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="guint" name="left_attach" />
          <parameter type="guint" name="right_attach" />
          <parameter type="guint" name="top_attach" />
          <parameter type="guint" name="bottom_attach" />
        </parameters>
      </method>
      <method name="GetColSpacing" cname="gtk_table_get_col_spacing">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="column" />
        </parameters>
      </method>
      <method name="GetDefaultColSpacing" cname="gtk_table_get_default_col_spacing">
        <return-type type="guint" />
      </method>
      <method name="GetDefaultRowSpacing" cname="gtk_table_get_default_row_spacing">
        <return-type type="guint" />
      </method>
      <method name="GetHomogeneous" cname="gtk_table_get_homogeneous">
        <return-type type="gboolean" />
      </method>
      <method name="GetRowSpacing" cname="gtk_table_get_row_spacing">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="row" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_table_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_table_new">
        <parameters>
          <parameter type="guint" name="rows" />
          <parameter type="guint" name="columns" />
          <parameter type="gboolean" name="homogeneous" />
        </parameters>
      </constructor>
      <method name="Resize" cname="gtk_table_resize">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="rows" />
          <parameter type="guint" name="columns" />
        </parameters>
      </method>
      <method name="SetColSpacing" cname="gtk_table_set_col_spacing">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="column" />
          <parameter type="guint" name="spacing" />
        </parameters>
      </method>
      <method name="SetColSpacings" cname="gtk_table_set_col_spacings">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="spacing" />
        </parameters>
      </method>
      <method name="SetHomogeneous" cname="gtk_table_set_homogeneous">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="homogeneous" />
        </parameters>
      </method>
      <method name="SetRowSpacing" cname="gtk_table_set_row_spacing">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="row" />
          <parameter type="guint" name="spacing" />
        </parameters>
      </method>
      <method name="SetRowSpacings" cname="gtk_table_set_row_spacings">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="spacing" />
        </parameters>
      </method>
    </object>
    <object name="TearoffMenuItem" cname="GtkTearoffMenuItem" parent="GtkMenuItem">
      <field name="TornOff" cname="torn_off" bits="1" type="guint" />
      <method name="GetType" cname="gtk_tearoff_menu_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_tearoff_menu_item_new" />
    </object>
    <object name="TextBuffer" cname="GtkTextBuffer" parent="GObject">
      <field name="TagTable" cname="tag_table" type="GtkTextTagTable*" />
      <field name="Btree" cname="btree" type="GtkTextBTree*" />
      <field name="ClipboardContentsBuffers" cname="clipboard_contents_buffers" type="GSList*" />
      <field name="SelectionClipboards" cname="selection_clipboards" type="GSList*" />
      <field name="LogAttrCache" cname="log_attr_cache" type="GtkTextLogAttrCache*" />
      <field name="UserActionCount" cname="user_action_count" type="guint" />
      <field name="Modified" cname="modified" bits="1" type="guint" />
      <property name="TagTable" cname="tag_table" type="GtkTextTagTable" readable="true" writeable="true" construct-only="true" />
      <signal name="InsertText" cname="insert_text" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
          <parameter type="GtkTextIter*" name="pos" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="length" />
        </parameters>
      </signal>
      <signal name="InsertPixbuf" cname="insert_pixbuf" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
          <parameter type="GtkTextIter*" name="pos" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </signal>
      <signal name="InsertChildAnchor" cname="insert_child_anchor" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
          <parameter type="GtkTextIter*" name="pos" />
          <parameter type="GtkTextChildAnchor*" name="anchor" />
        </parameters>
      </signal>
      <signal name="DeleteRange" cname="delete_range" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
          <parameter type="GtkTextIter*" name="start" />
          <parameter type="GtkTextIter*" name="end" />
        </parameters>
      </signal>
      <signal name="Changed" cname="changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
        </parameters>
      </signal>
      <signal name="ModifiedChanged" cname="modified_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
        </parameters>
      </signal>
      <signal name="MarkSet" cname="mark_set" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
          <parameter type="const-GtkTextIter*" name="location" />
          <parameter type="GtkTextMark*" name="mark" />
        </parameters>
      </signal>
      <signal name="MarkDeleted" cname="mark_deleted" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
          <parameter type="GtkTextMark*" name="mark" />
        </parameters>
      </signal>
      <signal name="ApplyTag" cname="apply_tag" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
          <parameter type="GtkTextTag*" name="tag" />
          <parameter type="const-GtkTextIter*" name="start_char" />
          <parameter type="const-GtkTextIter*" name="end_char" />
        </parameters>
      </signal>
      <signal name="RemoveTag" cname="remove_tag" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
          <parameter type="GtkTextTag*" name="tag" />
          <parameter type="const-GtkTextIter*" name="start_char" />
          <parameter type="const-GtkTextIter*" name="end_char" />
        </parameters>
      </signal>
      <signal name="BeginUserAction" cname="begin_user_action" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
        </parameters>
      </signal>
      <signal name="EndUserAction" cname="end_user_action" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
        </parameters>
      </signal>
      <method name="AddSelectionClipboard" cname="gtk_text_buffer_add_selection_clipboard">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboard*" name="clipboard" />
        </parameters>
      </method>
      <method name="ApplyTag" cname="gtk_text_buffer_apply_tag">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="ApplyTagByName" cname="gtk_text_buffer_apply_tag_by_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="BeginUserAction" cname="gtk_text_buffer_begin_user_action">
        <return-type type="void" />
      </method>
      <method name="CopyClipboard" cname="gtk_text_buffer_copy_clipboard">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboard*" name="clipboard" />
        </parameters>
      </method>
      <method name="CreateChildAnchor" cname="gtk_text_buffer_create_child_anchor">
        <return-type type="GtkTextChildAnchor*" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="CreateMark" cname="gtk_text_buffer_create_mark">
        <return-type type="GtkTextMark*" />
        <parameters>
          <parameter type="const-gchar*" name="mark_name" />
          <parameter type="const-GtkTextIter*" name="where" />
          <parameter type="gboolean" name="left_gravity" />
        </parameters>
      </method>
      <method name="CreateTag" cname="gtk_text_buffer_create_tag">
        <return-type type="GtkTextTag*" />
        <parameters>
          <parameter type="const-gchar*" name="tag_name" />
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="CutClipboard" cname="gtk_text_buffer_cut_clipboard">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboard*" name="clipboard" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="Delete" cname="gtk_text_buffer_delete">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="start" />
          <parameter type="GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="DeleteInteractive" cname="gtk_text_buffer_delete_interactive">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="start_iter" />
          <parameter type="GtkTextIter*" name="end_iter" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="DeleteMark" cname="gtk_text_buffer_delete_mark">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextMark*" name="mark" />
        </parameters>
      </method>
      <method name="DeleteMarkByName" cname="gtk_text_buffer_delete_mark_by_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="DeleteSelection" cname="gtk_text_buffer_delete_selection">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gboolean" name="interactive" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="EndUserAction" cname="gtk_text_buffer_end_user_action">
        <return-type type="void" />
      </method>
      <method name="GetBounds" cname="gtk_text_buffer_get_bounds">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="start" />
          <parameter type="GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="GetCharCount" cname="gtk_text_buffer_get_char_count">
        <return-type type="gint" />
      </method>
      <method name="GetEndIter" cname="gtk_text_buffer_get_end_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetInsert" cname="gtk_text_buffer_get_insert">
        <return-type type="GtkTextMark*" />
      </method>
      <method name="GetIterAtChildAnchor" cname="gtk_text_buffer_get_iter_at_child_anchor">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="GtkTextChildAnchor*" name="anchor" />
        </parameters>
      </method>
      <method name="GetIterAtLine" cname="gtk_text_buffer_get_iter_at_line">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gint" name="line_number" />
        </parameters>
      </method>
      <method name="GetIterAtLineIndex" cname="gtk_text_buffer_get_iter_at_line_index">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gint" name="line_number" />
          <parameter type="gint" name="byte_index" />
        </parameters>
      </method>
      <method name="GetIterAtLineOffset" cname="gtk_text_buffer_get_iter_at_line_offset">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gint" name="line_number" />
          <parameter type="gint" name="char_offset" />
        </parameters>
      </method>
      <method name="GetIterAtMark" cname="gtk_text_buffer_get_iter_at_mark">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="GtkTextMark*" name="mark" />
        </parameters>
      </method>
      <method name="GetIterAtOffset" cname="gtk_text_buffer_get_iter_at_offset">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gint" name="char_offset" />
        </parameters>
      </method>
      <method name="GetLineCount" cname="gtk_text_buffer_get_line_count">
        <return-type type="gint" />
      </method>
      <method name="GetMark" cname="gtk_text_buffer_get_mark">
        <return-type type="GtkTextMark*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="GetModified" cname="gtk_text_buffer_get_modified">
        <return-type type="gboolean" />
      </method>
      <method name="GetSelectionBound" cname="gtk_text_buffer_get_selection_bound">
        <return-type type="GtkTextMark*" />
      </method>
      <method name="GetSelectionBounds" cname="gtk_text_buffer_get_selection_bounds">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="start" />
          <parameter type="GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="GetSlice" cname="gtk_text_buffer_get_slice">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
          <parameter type="gboolean" name="include_hidden_chars" />
        </parameters>
      </method>
      <method name="GetStartIter" cname="gtk_text_buffer_get_start_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetTagTable" cname="gtk_text_buffer_get_tag_table">
        <return-type type="GtkTextTagTable*" />
      </method>
      <method name="GetText" cname="gtk_text_buffer_get_text">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
          <parameter type="gboolean" name="include_hidden_chars" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_text_buffer_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Insert" cname="gtk_text_buffer_insert">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
        </parameters>
      </method>
      <method name="InsertAtCursor" cname="gtk_text_buffer_insert_at_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
        </parameters>
      </method>
      <method name="InsertChildAnchor" cname="gtk_text_buffer_insert_child_anchor">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="GtkTextChildAnchor*" name="anchor" />
        </parameters>
      </method>
      <method name="InsertInteractive" cname="gtk_text_buffer_insert_interactive">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="InsertInteractiveAtCursor" cname="gtk_text_buffer_insert_interactive_at_cursor">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="InsertPixbuf" cname="gtk_text_buffer_insert_pixbuf">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="InsertRange" cname="gtk_text_buffer_insert_range">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="InsertRangeInteractive" cname="gtk_text_buffer_insert_range_interactive">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="InsertWithTags" cname="gtk_text_buffer_insert_with_tags">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
          <parameter type="GtkTextTag*" name="first_tag" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="InsertWithTagsByName" cname="gtk_text_buffer_insert_with_tags_by_name">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
          <parameter type="const-gchar*" name="first_tag_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="MoveMark" cname="gtk_text_buffer_move_mark">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextMark*" name="mark" />
          <parameter type="const-GtkTextIter*" name="where" />
        </parameters>
      </method>
      <method name="MoveMarkByName" cname="gtk_text_buffer_move_mark_by_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-GtkTextIter*" name="where" />
        </parameters>
      </method>
      <constructor cname="gtk_text_buffer_new">
        <parameters>
          <parameter type="GtkTextTagTable*" name="table" />
        </parameters>
      </constructor>
      <method name="PasteClipboard" cname="gtk_text_buffer_paste_clipboard">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboard*" name="clipboard" />
          <parameter type="GtkTextIter*" name="override_location" />
          <parameter type="gboolean" name="default_editable" />
        </parameters>
      </method>
      <method name="PlaceCursor" cname="gtk_text_buffer_place_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="where" />
        </parameters>
      </method>
      <method name="RemoveAllTags" cname="gtk_text_buffer_remove_all_tags">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="RemoveSelectionClipboard" cname="gtk_text_buffer_remove_selection_clipboard">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkClipboard*" name="clipboard" />
        </parameters>
      </method>
      <method name="RemoveTag" cname="gtk_text_buffer_remove_tag">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="RemoveTagByName" cname="gtk_text_buffer_remove_tag_by_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="SelectRange" cname="gtk_text_buffer_select_range">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="ins" />
          <parameter type="const-GtkTextIter*" name="bound" />
        </parameters>
      </method>
      <method name="SetModified" cname="gtk_text_buffer_set_modified">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetText" cname="gtk_text_buffer_set_text">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
          <parameter type="gint" name="len" />
        </parameters>
      </method>
    </object>
    <object name="TextChildAnchor" cname="GtkTextChildAnchor" parent="GObject">
      <field name="Segment" cname="segment" type="gpointer" />
      <method name="GetDeleted" cname="gtk_text_child_anchor_get_deleted">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_text_child_anchor_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetWidgets" cname="gtk_text_child_anchor_get_widgets">
        <return-type type="GList*" />
      </method>
      <constructor cname="gtk_text_child_anchor_new" />
    </object>
    <object name="TextMark" cname="GtkTextMark" parent="GObject">
      <field name="Segment" cname="segment" type="gpointer" />
      <method name="GetBuffer" cname="gtk_text_mark_get_buffer">
        <return-type type="GtkTextBuffer*" />
      </method>
      <method name="GetDeleted" cname="gtk_text_mark_get_deleted">
        <return-type type="gboolean" />
      </method>
      <method name="GetLeftGravity" cname="gtk_text_mark_get_left_gravity">
        <return-type type="gboolean" />
      </method>
      <method name="GetName" cname="gtk_text_mark_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_text_mark_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisible" cname="gtk_text_mark_get_visible">
        <return-type type="gboolean" />
      </method>
      <method name="SetVisible" cname="gtk_text_mark_set_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
    </object>
    <object name="TextTag" cname="GtkTextTag" parent="GObject">
      <field name="Table" cname="table" type="GtkTextTagTable*" />
      <field name="Name" cname="name" type="char*" />
      <field name="Priority" cname="priority" type="int" />
      <field name="Values" cname="values" type="GtkTextAttributes*" />
      <field name="BgColorSet" cname="bg_color_set" bits="1" type="guint" />
      <field name="BgStippleSet" cname="bg_stipple_set" bits="1" type="guint" />
      <field name="FgColorSet" cname="fg_color_set" bits="1" type="guint" />
      <field name="ScaleSet" cname="scale_set" bits="1" type="guint" />
      <field name="FgStippleSet" cname="fg_stipple_set" bits="1" type="guint" />
      <field name="JustificationSet" cname="justification_set" bits="1" type="guint" />
      <field name="LeftMarginSet" cname="left_margin_set" bits="1" type="guint" />
      <field name="IndentSet" cname="indent_set" bits="1" type="guint" />
      <field name="RiseSet" cname="rise_set" bits="1" type="guint" />
      <field name="StrikethroughSet" cname="strikethrough_set" bits="1" type="guint" />
      <field name="RightMarginSet" cname="right_margin_set" bits="1" type="guint" />
      <field name="PixelsAboveLinesSet" cname="pixels_above_lines_set" bits="1" type="guint" />
      <field name="PixelsBelowLinesSet" cname="pixels_below_lines_set" bits="1" type="guint" />
      <field name="PixelsInsideWrapSet" cname="pixels_inside_wrap_set" bits="1" type="guint" />
      <field name="TabsSet" cname="tabs_set" bits="1" type="guint" />
      <field name="UnderlineSet" cname="underline_set" bits="1" type="guint" />
      <field name="WrapModeSet" cname="wrap_mode_set" bits="1" type="guint" />
      <field name="BgFullHeightSet" cname="bg_full_height_set" bits="1" type="guint" />
      <field name="InvisibleSet" cname="invisible_set" bits="1" type="guint" />
      <field name="EditableSet" cname="editable_set" bits="1" type="guint" />
      <field name="LanguageSet" cname="language_set" bits="1" type="guint" />
      <field name="Pad1" cname="pad1" bits="1" type="guint" />
      <field name="Pad2" cname="pad2" bits="1" type="guint" />
      <field name="Pad3" cname="pad3" bits="1" type="guint" />
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="Background" cname="background" type="gchar*" writeable="true" />
      <property name="BackgroundGdk" cname="background_gdk" type="GdkColor" readable="true" writeable="true" />
      <property name="BackgroundFullHeight" cname="background_full_height" type="gboolean" readable="true" writeable="true" />
      <property name="BackgroundStipple" cname="background_stipple" type="GdkPixmap" readable="true" writeable="true" />
      <property name="Foreground" cname="foreground" type="gchar*" writeable="true" />
      <property name="ForegroundGdk" cname="foreground_gdk" type="GdkColor" readable="true" writeable="true" />
      <property name="ForegroundStipple" cname="foreground_stipple" type="GdkPixmap" readable="true" writeable="true" />
      <property name="Direction" cname="direction" type="GtkTextDirection" readable="true" writeable="true" />
      <property name="Editable" cname="editable" type="gboolean" readable="true" writeable="true" />
      <property name="Font" cname="font" type="gchar*" readable="true" writeable="true" />
      <property name="FontDesc" cname="font_desc" type="PangoFontDescription" readable="true" writeable="true" />
      <property name="Family" cname="family" type="gchar*" readable="true" writeable="true" />
      <property name="Style" cname="style" type="PangoStyle" readable="true" writeable="true" />
      <property name="Variant" cname="variant" type="PangoVariant" readable="true" writeable="true" />
      <property name="Weight" cname="weight" type="gint" readable="true" writeable="true" />
      <property name="Stretch" cname="stretch" type="PangoStretch" readable="true" writeable="true" />
      <property name="Size" cname="size" type="gint" readable="true" writeable="true" />
      <property name="Scale" cname="scale" type="gdouble" readable="true" writeable="true" />
      <property name="SizePoints" cname="size_points" type="gdouble" readable="true" writeable="true" />
      <property name="Justification" cname="justification" type="GtkJustification" readable="true" writeable="true" />
      <property name="Language" cname="language" type="gchar*" readable="true" writeable="true" />
      <property name="LeftMargin" cname="left_margin" type="gint" readable="true" writeable="true" />
      <property name="RightMargin" cname="right_margin" type="gint" readable="true" writeable="true" />
      <property name="Indent" cname="indent" type="gint" readable="true" writeable="true" />
      <property name="Rise" cname="rise" type="gint" readable="true" writeable="true" />
      <property name="PixelsAboveLines" cname="pixels_above_lines" type="gint" readable="true" writeable="true" />
      <property name="PixelsBelowLines" cname="pixels_below_lines" type="gint" readable="true" writeable="true" />
      <property name="PixelsInsideWrap" cname="pixels_inside_wrap" type="gint" readable="true" writeable="true" />
      <property name="Strikethrough" cname="strikethrough" type="gboolean" readable="true" writeable="true" />
      <property name="Underline" cname="underline" type="PangoUnderline" readable="true" writeable="true" />
      <property name="WrapMode" cname="wrap_mode" type="GtkWrapMode" readable="true" writeable="true" />
      <property name="Tabs" cname="tabs" type="PangoTabArray" readable="true" writeable="true" />
      <property name="Invisible" cname="invisible" type="gboolean" readable="true" writeable="true" />
      <signal name="Event" cname="event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
          <parameter type="GObject*" name="event_object" />
          <parameter type="GdkEvent*" name="event" />
          <parameter type="const-GtkTextIter*" name="iter" />
        </parameters>
      </signal>
      <method name="Event" cname="gtk_text_tag_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="event_object" />
          <parameter type="GdkEvent*" name="event" />
          <parameter type="const-GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetPriority" cname="gtk_text_tag_get_priority">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_text_tag_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_text_tag_new">
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </constructor>
      <method name="SetPriority" cname="gtk_text_tag_set_priority">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="priority" />
        </parameters>
      </method>
    </object>
    <object name="TextTagTable" cname="GtkTextTagTable" parent="GObject">
      <field name="Hash" cname="hash" type="GHashTable*" />
      <field name="Anonymous" cname="anonymous" type="GSList*" />
      <field name="AnonCount" cname="anon_count" type="gint" />
      <field name="Buffers" cname="buffers" type="GSList*" />
      <signal name="TagChanged" cname="tag_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextTagTable*" name="table" />
          <parameter type="GtkTextTag*" name="tag" />
          <parameter type="gboolean" name="size_changed" />
        </parameters>
      </signal>
      <signal name="TagAdded" cname="tag_added" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextTagTable*" name="table" />
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </signal>
      <signal name="TagRemoved" cname="tag_removed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextTagTable*" name="table" />
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </signal>
      <method name="Add" cname="gtk_text_tag_table_add">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
      <method name="Foreach" cname="gtk_text_tag_table_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextTagTableForeach" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="GetSize" cname="gtk_text_tag_table_get_size">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_text_tag_table_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Lookup" cname="gtk_text_tag_table_lookup">
        <return-type type="GtkTextTag*" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <constructor cname="gtk_text_tag_table_new" />
      <method name="Remove" cname="gtk_text_tag_table_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
    </object>
    <object name="TextView" cname="GtkTextView" parent="GtkContainer">
      <field name="Layout" cname="layout" type="struct-_GtkTextLayout*" />
      <field name="Buffer" cname="buffer" type="GtkTextBuffer*" />
      <field name="SelectionDragHandler" cname="selection_drag_handler" type="guint" />
      <field name="ScrollTimeout" cname="scroll_timeout" type="guint" />
      <field name="PixelsAboveLines" cname="pixels_above_lines" type="gint" />
      <field name="PixelsBelowLines" cname="pixels_below_lines" type="gint" />
      <field name="PixelsInsideWrap" cname="pixels_inside_wrap" type="gint" />
      <field name="WrapMode" cname="wrap_mode" type="GtkWrapMode" />
      <field name="Justify" cname="justify" type="GtkJustification" />
      <field name="LeftMargin" cname="left_margin" type="gint" />
      <field name="RightMargin" cname="right_margin" type="gint" />
      <field name="Indent" cname="indent" type="gint" />
      <field name="Tabs" cname="tabs" type="PangoTabArray*" />
      <field name="Editable" cname="editable" bits="1" type="guint" />
      <field name="OverwriteMode" cname="overwrite_mode" bits="1" type="guint" />
      <field name="CursorVisible" cname="cursor_visible" bits="1" type="guint" />
      <field name="NeedImReset" cname="need_im_reset" bits="1" type="guint" />
      <field name="AcceptsTab" cname="accepts_tab" bits="1" type="guint" />
      <field name="Reserved" cname="reserved" bits="1" type="guint" />
      <field name="OnscreenValidated" cname="onscreen_validated" bits="1" type="guint" />
      <field name="MouseCursorObscured" cname="mouse_cursor_obscured" bits="1" type="guint" />
      <field name="TextWindow" cname="text_window" type="GtkTextWindow*" />
      <field name="LeftWindow" cname="left_window" type="GtkTextWindow*" />
      <field name="RightWindow" cname="right_window" type="GtkTextWindow*" />
      <field name="TopWindow" cname="top_window" type="GtkTextWindow*" />
      <field name="BottomWindow" cname="bottom_window" type="GtkTextWindow*" />
      <field name="Hadjustment" cname="hadjustment" type="GtkAdjustment*" />
      <field name="Vadjustment" cname="vadjustment" type="GtkAdjustment*" />
      <field name="Xoffset" cname="xoffset" type="gint" />
      <field name="Yoffset" cname="yoffset" type="gint" />
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
      <field name="VirtualCursorX" cname="virtual_cursor_x" type="gint" />
      <field name="VirtualCursorY" cname="virtual_cursor_y" type="gint" />
      <field name="FirstParaMark" cname="first_para_mark" type="GtkTextMark*" />
      <field name="FirstParaPixels" cname="first_para_pixels" type="gint" />
      <field name="DndMark" cname="dnd_mark" type="GtkTextMark*" />
      <field name="BlinkTimeout" cname="blink_timeout" type="guint" />
      <field name="FirstValidateIdle" cname="first_validate_idle" type="guint" />
      <field name="IncrementalValidateIdle" cname="incremental_validate_idle" type="guint" />
      <field name="ImContext" cname="im_context" type="GtkIMContext*" />
      <field name="PopupMenu" cname="popup_menu" type="GtkWidget*" />
      <field name="DragStartX" cname="drag_start_x" type="gint" />
      <field name="DragStartY" cname="drag_start_y" type="gint" />
      <field name="Children" cname="children" type="GSList*" />
      <field name="PendingScroll" cname="pending_scroll" type="GtkTextPendingScroll*" />
      <field name="PendingPlaceCursorButton" cname="pending_place_cursor_button" type="gint" />
      <property name="PixelsAboveLines" cname="pixels_above_lines" type="gint" readable="true" writeable="true" />
      <property name="PixelsBelowLines" cname="pixels_below_lines" type="gint" readable="true" writeable="true" />
      <property name="PixelsInsideWrap" cname="pixels_inside_wrap" type="gint" readable="true" writeable="true" />
      <property name="Editable" cname="editable" type="gboolean" readable="true" writeable="true" />
      <property name="WrapMode" cname="wrap_mode" type="GtkWrapMode" readable="true" writeable="true" />
      <property name="Justification" cname="justification" type="GtkJustification" readable="true" writeable="true" />
      <property name="LeftMargin" cname="left_margin" type="gint" readable="true" writeable="true" />
      <property name="RightMargin" cname="right_margin" type="gint" readable="true" writeable="true" />
      <property name="Indent" cname="indent" type="gint" readable="true" writeable="true" />
      <property name="Tabs" cname="tabs" type="PangoTabArray" readable="true" writeable="true" />
      <property name="CursorVisible" cname="cursor_visible" type="gboolean" readable="true" writeable="true" />
      <property name="Buffer" cname="buffer" type="GtkTextBuffer" readable="true" writeable="true" />
      <property name="Overwrite" cname="overwrite" type="gboolean" readable="true" writeable="true" />
      <property name="AcceptsTab" cname="accepts_tab" type="gboolean" readable="true" writeable="true" />
      <signal name="MoveCursor" cname="move_cursor" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextView*" name="text_view" />
          <parameter type="GtkMovementStep" name="step" />
          <parameter type="gint" name="count" />
          <parameter type="gboolean" name="extend_selection" />
        </parameters>
      </signal>
      <signal name="PageHorizontally" cname="page_horizontally" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextView*" name="text_view" />
          <parameter type="gint" name="count" />
          <parameter type="gboolean" name="extend_selection" />
        </parameters>
      </signal>
      <signal name="SetAnchor" cname="set_anchor" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextView*" name="text_view" />
        </parameters>
      </signal>
      <signal name="InsertAtCursor" cname="insert_at_cursor" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextView*" name="text_view" />
          <parameter type="const-gchar*" name="str" />
        </parameters>
      </signal>
      <signal name="DeleteFromCursor" cname="delete_from_cursor" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextView*" name="text_view" />
          <parameter type="GtkDeleteType" name="type" />
          <parameter type="gint" name="count" />
        </parameters>
      </signal>
      <signal name="CutClipboard" cname="cut_clipboard" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextView*" name="text_view" />
        </parameters>
      </signal>
      <signal name="CopyClipboard" cname="copy_clipboard" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextView*" name="text_view" />
        </parameters>
      </signal>
      <signal name="PasteClipboard" cname="paste_clipboard" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextView*" name="text_view" />
        </parameters>
      </signal>
      <signal name="ToggleOverwrite" cname="toggle_overwrite" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextView*" name="text_view" />
        </parameters>
      </signal>
      <signal name="MoveFocus" cname="move_focus" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextView*" name="text_view" />
          <parameter type="GtkDirectionType" name="direction" />
        </parameters>
      </signal>
      <signal name="SetScrollAdjustments" cname="set_scroll_adjustments" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextView*" name="text_view" />
          <parameter type="GtkAdjustment*" name="hadjustment" />
          <parameter type="GtkAdjustment*" name="vadjustment" />
        </parameters>
      </signal>
      <signal name="PopulatePopup" cname="populate_popup" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextView*" name="text_view" />
          <parameter type="GtkMenu*" name="menu" />
        </parameters>
      </signal>
      <method name="AddChildAtAnchor" cname="gtk_text_view_add_child_at_anchor">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkTextChildAnchor*" name="anchor" />
        </parameters>
      </method>
      <method name="AddChildInWindow" cname="gtk_text_view_add_child_in_window">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="GtkTextWindowType" name="which_window" />
          <parameter type="gint" name="xpos" />
          <parameter type="gint" name="ypos" />
        </parameters>
      </method>
      <method name="BackwardDisplayLine" cname="gtk_text_view_backward_display_line">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="BackwardDisplayLineStart" cname="gtk_text_view_backward_display_line_start">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="BufferToWindowCoords" cname="gtk_text_view_buffer_to_window_coords">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextWindowType" name="win" />
          <parameter type="gint" name="buffer_x" />
          <parameter type="gint" name="buffer_y" />
          <parameter type="gint*" name="window_x" />
          <parameter type="gint*" name="window_y" />
        </parameters>
      </method>
      <method name="ForwardDisplayLine" cname="gtk_text_view_forward_display_line">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="ForwardDisplayLineEnd" cname="gtk_text_view_forward_display_line_end">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetAcceptsTab" cname="gtk_text_view_get_accepts_tab">
        <return-type type="gboolean" />
      </method>
      <method name="GetBorderWindowSize" cname="gtk_text_view_get_border_window_size">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTextWindowType" name="type" />
        </parameters>
      </method>
      <method name="GetBuffer" cname="gtk_text_view_get_buffer">
        <return-type type="GtkTextBuffer*" />
      </method>
      <method name="GetCursorVisible" cname="gtk_text_view_get_cursor_visible">
        <return-type type="gboolean" />
      </method>
      <method name="GetDefaultAttributes" cname="gtk_text_view_get_default_attributes">
        <return-type type="GtkTextAttributes*" />
      </method>
      <method name="GetEditable" cname="gtk_text_view_get_editable">
        <return-type type="gboolean" />
      </method>
      <method name="GetIndent" cname="gtk_text_view_get_indent">
        <return-type type="gint" />
      </method>
      <method name="GetIterAtLocation" cname="gtk_text_view_get_iter_at_location">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="GetIterLocation" cname="gtk_text_view_get_iter_location">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="iter" />
          <parameter type="GdkRectangle*" name="location" />
        </parameters>
      </method>
      <method name="GetJustification" cname="gtk_text_view_get_justification">
        <return-type type="GtkJustification" />
      </method>
      <method name="GetLeftMargin" cname="gtk_text_view_get_left_margin">
        <return-type type="gint" />
      </method>
      <method name="GetLineAtY" cname="gtk_text_view_get_line_at_y">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="target_iter" />
          <parameter type="gint" name="y" />
          <parameter type="gint*" name="line_top" />
        </parameters>
      </method>
      <method name="GetLineYrange" cname="gtk_text_view_get_line_yrange">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="iter" />
          <parameter type="gint*" name="y" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetOverwrite" cname="gtk_text_view_get_overwrite">
        <return-type type="gboolean" />
      </method>
      <method name="GetPixelsAboveLines" cname="gtk_text_view_get_pixels_above_lines">
        <return-type type="gint" />
      </method>
      <method name="GetPixelsBelowLines" cname="gtk_text_view_get_pixels_below_lines">
        <return-type type="gint" />
      </method>
      <method name="GetPixelsInsideWrap" cname="gtk_text_view_get_pixels_inside_wrap">
        <return-type type="gint" />
      </method>
      <method name="GetRightMargin" cname="gtk_text_view_get_right_margin">
        <return-type type="gint" />
      </method>
      <method name="GetTabs" cname="gtk_text_view_get_tabs">
        <return-type type="PangoTabArray*" />
      </method>
      <method name="GetType" cname="gtk_text_view_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisibleRect" cname="gtk_text_view_get_visible_rect">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="visible_rect" />
        </parameters>
      </method>
      <method name="GetWindow" cname="gtk_text_view_get_window">
        <return-type type="GdkWindow*" />
        <parameters>
          <parameter type="GtkTextWindowType" name="win" />
        </parameters>
      </method>
      <method name="GetWindowType" cname="gtk_text_view_get_window_type">
        <return-type type="GtkTextWindowType" />
        <parameters>
          <parameter type="GdkWindow*" name="window" />
        </parameters>
      </method>
      <method name="GetWrapMode" cname="gtk_text_view_get_wrap_mode">
        <return-type type="GtkWrapMode" />
      </method>
      <method name="MoveChild" cname="gtk_text_view_move_child">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="child" />
          <parameter type="gint" name="xpos" />
          <parameter type="gint" name="ypos" />
        </parameters>
      </method>
      <method name="MoveMarkOnscreen" cname="gtk_text_view_move_mark_onscreen">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextMark*" name="mark" />
        </parameters>
      </method>
      <method name="MoveVisually" cname="gtk_text_view_move_visually">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <constructor cname="gtk_text_view_new" />
      <constructor cname="gtk_text_view_new_with_buffer">
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
        </parameters>
      </constructor>
      <method name="PlaceCursorOnscreen" cname="gtk_text_view_place_cursor_onscreen">
        <return-type type="gboolean" />
      </method>
      <method name="ScrollMarkOnscreen" cname="gtk_text_view_scroll_mark_onscreen">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextMark*" name="mark" />
        </parameters>
      </method>
      <method name="ScrollToIter" cname="gtk_text_view_scroll_to_iter">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextIter*" name="iter" />
          <parameter type="gdouble" name="within_margin" />
          <parameter type="gboolean" name="use_align" />
          <parameter type="gdouble" name="xalign" />
          <parameter type="gdouble" name="yalign" />
        </parameters>
      </method>
      <method name="ScrollToMark" cname="gtk_text_view_scroll_to_mark">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextMark*" name="mark" />
          <parameter type="gdouble" name="within_margin" />
          <parameter type="gboolean" name="use_align" />
          <parameter type="gdouble" name="xalign" />
          <parameter type="gdouble" name="yalign" />
        </parameters>
      </method>
      <method name="SetAcceptsTab" cname="gtk_text_view_set_accepts_tab">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="accepts_tab" />
        </parameters>
      </method>
      <method name="SetBorderWindowSize" cname="gtk_text_view_set_border_window_size">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextWindowType" name="type" />
          <parameter type="gint" name="size" />
        </parameters>
      </method>
      <method name="SetBuffer" cname="gtk_text_view_set_buffer">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextBuffer*" name="buffer" />
        </parameters>
      </method>
      <method name="SetCursorVisible" cname="gtk_text_view_set_cursor_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetEditable" cname="gtk_text_view_set_editable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetIndent" cname="gtk_text_view_set_indent">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="indent" />
        </parameters>
      </method>
      <method name="SetJustification" cname="gtk_text_view_set_justification">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkJustification" name="justification" />
        </parameters>
      </method>
      <method name="SetLeftMargin" cname="gtk_text_view_set_left_margin">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="left_margin" />
        </parameters>
      </method>
      <method name="SetOverwrite" cname="gtk_text_view_set_overwrite">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="overwrite" />
        </parameters>
      </method>
      <method name="SetPixelsAboveLines" cname="gtk_text_view_set_pixels_above_lines">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="pixels_above_lines" />
        </parameters>
      </method>
      <method name="SetPixelsBelowLines" cname="gtk_text_view_set_pixels_below_lines">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="pixels_below_lines" />
        </parameters>
      </method>
      <method name="SetPixelsInsideWrap" cname="gtk_text_view_set_pixels_inside_wrap">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="pixels_inside_wrap" />
        </parameters>
      </method>
      <method name="SetRightMargin" cname="gtk_text_view_set_right_margin">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="right_margin" />
        </parameters>
      </method>
      <method name="SetTabs" cname="gtk_text_view_set_tabs">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoTabArray*" name="tabs" />
        </parameters>
      </method>
      <method name="SetWrapMode" cname="gtk_text_view_set_wrap_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWrapMode" name="wrap_mode" />
        </parameters>
      </method>
      <method name="StartsDisplayLine" cname="gtk_text_view_starts_display_line">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="iter" />
        </parameters>
      </method>
      <method name="WindowToBufferCoords" cname="gtk_text_view_window_to_buffer_coords">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextWindowType" name="win" />
          <parameter type="gint" name="window_x" />
          <parameter type="gint" name="window_y" />
          <parameter type="gint*" name="buffer_x" />
          <parameter type="gint*" name="buffer_y" />
        </parameters>
      </method>
    </object>
    <object name="ToggleAction" cname="GtkToggleAction" parent="GtkAction">
      <field name="PrivateData" cname="private_data" type="GtkToggleActionPrivate*" />
      <property name="DrawAsRadio" cname="draw_as_radio" type="gboolean" readable="true" writeable="true" />
      <signal name="Toggled" cname="toggled" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToggleAction*" name="action" />
        </parameters>
      </signal>
      <method name="GetActive" cname="gtk_toggle_action_get_active">
        <return-type type="gboolean" />
      </method>
      <method name="GetDrawAsRadio" cname="gtk_toggle_action_get_draw_as_radio">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_toggle_action_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_toggle_action_new">
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="label" />
          <parameter type="const-gchar*" name="tooltip" />
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <method name="SetActive" cname="gtk_toggle_action_set_active">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_active" />
        </parameters>
      </method>
      <method name="SetDrawAsRadio" cname="gtk_toggle_action_set_draw_as_radio">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="draw_as_radio" />
        </parameters>
      </method>
      <method name="Toggled" cname="gtk_toggle_action_toggled">
        <return-type type="void" />
      </method>
    </object>
    <object name="ToggleButton" cname="GtkToggleButton" parent="GtkButton">
      <field name="Active" cname="active" bits="1" type="guint" />
      <field name="DrawIndicator" cname="draw_indicator" bits="1" type="guint" />
      <field name="Inconsistent" cname="inconsistent" bits="1" type="guint" />
      <property name="Active" cname="active" type="gboolean" readable="true" writeable="true" />
      <property name="Inconsistent" cname="inconsistent" type="gboolean" readable="true" writeable="true" />
      <property name="DrawIndicator" cname="draw_indicator" type="gboolean" readable="true" writeable="true" />
      <signal name="Toggled" cname="toggled" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToggleButton*" name="toggle_button" />
        </parameters>
      </signal>
      <method name="GetActive" cname="gtk_toggle_button_get_active">
        <return-type type="gboolean" />
      </method>
      <method name="GetInconsistent" cname="gtk_toggle_button_get_inconsistent">
        <return-type type="gboolean" />
      </method>
      <method name="GetMode" cname="gtk_toggle_button_get_mode">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_toggle_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_toggle_button_new" />
      <constructor cname="gtk_toggle_button_new_with_label">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_toggle_button_new_with_mnemonic">
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <method name="SetActive" cname="gtk_toggle_button_set_active">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_active" />
        </parameters>
      </method>
      <method name="SetInconsistent" cname="gtk_toggle_button_set_inconsistent">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetMode" cname="gtk_toggle_button_set_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="draw_indicator" />
        </parameters>
      </method>
      <method name="Toggled" cname="gtk_toggle_button_toggled">
        <return-type type="void" />
      </method>
    </object>
    <object name="ToggleToolButton" cname="GtkToggleToolButton" parent="GtkToolButton">
      <field name="Priv" cname="priv" type="GtkToggleToolButtonPrivate*" />
      <signal name="Toggled" cname="toggled" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToggleToolButton*" name="button" />
        </parameters>
      </signal>
      <method name="GetActive" cname="gtk_toggle_tool_button_get_active">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_toggle_tool_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_toggle_tool_button_new" />
      <constructor cname="gtk_toggle_tool_button_new_from_stock">
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <method name="SetActive" cname="gtk_toggle_tool_button_set_active">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_active" />
        </parameters>
      </method>
    </object>
    <object name="Toolbar" cname="GtkToolbar" parent="GtkContainer">
      <field name="NumChildren" cname="num_children" type="gint" access="public" />
      <field name="Children" cname="children" type="GList*" access="public" />
      <field name="Orientation" cname="orientation" type="GtkOrientation" access="public" />
      <field name="Style" cname="style" type="GtkToolbarStyle" access="public" />
      <field name="IconSize" cname="icon_size" type="GtkIconSize" access="public" />
      <field name="Tooltips" cname="tooltips" type="GtkTooltips*" access="public" />
      <field name="ButtonMaxw" cname="button_maxw" type="gint" />
      <field name="ButtonMaxh" cname="button_maxh" type="gint" />
      <field name="StyleSetConnection" cname="style_set_connection" type="guint" />
      <field name="IconSizeConnection" cname="icon_size_connection" type="guint" />
      <field name="StyleSet" cname="style_set" bits="1" type="guint" />
      <field name="IconSizeSet" cname="icon_size_set" bits="1" type="guint" />
      <signal name="OrientationChanged" cname="orientation-changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolbar*" name="toolbar" />
          <parameter type="GtkOrientation" name="orientation" />
        </parameters>
      </signal>
      <signal name="StyleChanged" cname="style-changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolbar*" name="toolbar" />
          <parameter type="GtkToolbarStyle" name="style" />
        </parameters>
      </signal>
      <signal name="PopupContextMenu" cname="popup_context_menu" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkToolbar*" name="toolbar" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="button_number" />
        </parameters>
      </signal>
      <property name="Orientation" cname="orientation" type="GtkOrientation" readable="true" writeable="true" />
      <property name="ToolbarStyle" cname="toolbar_style" type="GtkToolbarStyle" readable="true" writeable="true" />
      <property name="ShowArrow" cname="show_arrow" type="gboolean" readable="true" writeable="true" />
      <childprop name="Expand" cname="expand" type="gboolean" readable="true" writeable="true" />
      <childprop name="Homogeneous" cname="homogeneous" type="gboolean" readable="true" writeable="true" />
      <method name="AppendElement" cname="gtk_toolbar_append_element" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkToolbarChildType" name="type" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-char*" name="text" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="GtkWidget*" name="icon" />
          <parameter type="GtkSignalFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="AppendItem" cname="gtk_toolbar_append_item" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-char*" name="text" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="GtkWidget*" name="icon" />
          <parameter type="GtkSignalFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="AppendSpace" cname="gtk_toolbar_append_space" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="AppendWidget" cname="gtk_toolbar_append_widget" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
        </parameters>
      </method>
      <method name="GetDropIndex" cname="gtk_toolbar_get_drop_index">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="GetIconSize" cname="gtk_toolbar_get_icon_size">
        <return-type type="GtkIconSize" />
      </method>
      <method name="GetItemIndex" cname="gtk_toolbar_get_item_index">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkToolItem*" name="item" />
        </parameters>
      </method>
      <method name="GetNItems" cname="gtk_toolbar_get_n_items">
        <return-type type="gint" />
      </method>
      <method name="GetNthItem" cname="gtk_toolbar_get_nth_item">
        <return-type type="GtkToolItem*" />
        <parameters>
          <parameter type="gint" name="n" />
        </parameters>
      </method>
      <method name="GetOrientation" cname="gtk_toolbar_get_orientation">
        <return-type type="GtkOrientation" />
      </method>
      <method name="GetReliefStyle" cname="gtk_toolbar_get_relief_style">
        <return-type type="GtkReliefStyle" />
      </method>
      <method name="GetShowArrow" cname="gtk_toolbar_get_show_arrow">
        <return-type type="gboolean" />
      </method>
      <method name="GetStyle" cname="gtk_toolbar_get_style">
        <return-type type="GtkToolbarStyle" />
      </method>
      <method name="GetTooltips" cname="gtk_toolbar_get_tooltips">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_toolbar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Insert" cname="gtk_toolbar_insert">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolItem*" name="item" />
          <parameter type="gint" name="pos" />
        </parameters>
      </method>
      <method name="InsertElement" cname="gtk_toolbar_insert_element" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkToolbarChildType" name="type" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-char*" name="text" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="GtkWidget*" name="icon" />
          <parameter type="GtkSignalFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertItem" cname="gtk_toolbar_insert_item" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-char*" name="text" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="GtkWidget*" name="icon" />
          <parameter type="GtkSignalFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertSpace" cname="gtk_toolbar_insert_space" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertStock" cname="gtk_toolbar_insert_stock" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="GtkSignalFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertWidget" cname="gtk_toolbar_insert_widget" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <constructor cname="gtk_toolbar_new" />
      <method name="PrependElement" cname="gtk_toolbar_prepend_element" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GtkToolbarChildType" name="type" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-char*" name="text" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="GtkWidget*" name="icon" />
          <parameter type="GtkSignalFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="PrependItem" cname="gtk_toolbar_prepend_item" deprecated="1">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-char*" name="text" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
          <parameter type="GtkWidget*" name="icon" />
          <parameter type="GtkSignalFunc" name="callback" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </method>
      <method name="PrependSpace" cname="gtk_toolbar_prepend_space" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="PrependWidget" cname="gtk_toolbar_prepend_widget" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-char*" name="tooltip_text" />
          <parameter type="const-char*" name="tooltip_private_text" />
        </parameters>
      </method>
      <method name="RemoveSpace" cname="gtk_toolbar_remove_space" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="SetDropHighlightItem" cname="gtk_toolbar_set_drop_highlight_item">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolItem*" name="tool_item" />
          <parameter type="gint" name="index" />
        </parameters>
      </method>
      <method name="SetIconSize" cname="gtk_toolbar_set_icon_size" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIconSize" name="icon_size" />
        </parameters>
      </method>
      <method name="SetOrientation" cname="gtk_toolbar_set_orientation">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="SetShowArrow" cname="gtk_toolbar_set_show_arrow">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="show_arrow" />
        </parameters>
      </method>
      <method name="SetStyle" cname="gtk_toolbar_set_style">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolbarStyle" name="style" />
        </parameters>
      </method>
      <method name="SetTooltips" cname="gtk_toolbar_set_tooltips">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="enable" />
        </parameters>
      </method>
      <method name="UnsetIconSize" cname="gtk_toolbar_unset_icon_size" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="UnsetStyle" cname="gtk_toolbar_unset_style">
        <return-type type="void" />
      </method>
    </object>
    <object name="Tooltips" cname="GtkTooltips" parent="GtkObject">
      <field name="TipWindow" cname="tip_window" type="GtkWidget*" />
      <field name="TipLabel" cname="tip_label" type="GtkWidget*" />
      <field name="ActiveTipsData" cname="active_tips_data" type="GtkTooltipsData*" />
      <field name="TipsDataList" cname="tips_data_list" type="GList*" />
      <field name="Delay" cname="delay" bits="30" type="guint" />
      <field name="Enabled" cname="enabled" bits="1" type="guint" />
      <field name="HaveGrab" cname="have_grab" bits="1" type="guint" />
      <field name="UseStickyDelay" cname="use_sticky_delay" bits="1" type="guint" />
      <field name="TimerTag" cname="timer_tag" type="gint" />
      <field name="LastPopdown" cname="last_popdown" type="GTimeVal" />
      <method name="Disable" cname="gtk_tooltips_disable">
        <return-type type="void" />
      </method>
      <method name="Enable" cname="gtk_tooltips_enable">
        <return-type type="void" />
      </method>
      <method name="ForceWindow" cname="gtk_tooltips_force_window">
        <return-type type="void" />
      </method>
      <method name="GetInfoFromTipWindow" cname="gtk_tooltips_get_info_from_tip_window" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWindow*" name="tip_window" />
          <parameter type="GtkTooltips**" name="tooltips" />
          <parameter type="GtkWidget**" name="current_widget" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_tooltips_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_tooltips_new" />
      <method name="SetDelay" cname="gtk_tooltips_set_delay" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="delay" />
        </parameters>
      </method>
      <method name="SetTip" cname="gtk_tooltips_set_tip">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="tip_text" />
          <parameter type="const-gchar*" name="tip_private" />
        </parameters>
      </method>
    </object>
    <object name="ToolButton" cname="GtkToolButton" parent="GtkToolItem">
      <field name="Priv" cname="priv" type="GtkToolButtonPrivate*" />
      <property name="Label" cname="label" type="gchar*" readable="true" writeable="true" />
      <property name="UseUnderline" cname="use_underline" type="gboolean" readable="true" writeable="true" />
      <property name="LabelWidget" cname="label_widget" type="GtkWidget" readable="true" writeable="true" />
      <property name="StockId" cname="stock_id" type="gchar*" readable="true" writeable="true" />
      <property name="IconWidget" cname="icon_widget" type="GtkWidget" readable="true" writeable="true" />
      <signal name="Clicked" cname="clicked" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolButton*" name="tool_item" />
        </parameters>
      </signal>
      <method name="GetIconWidget" cname="gtk_tool_button_get_icon_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetLabel" cname="gtk_tool_button_get_label">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetLabelWidget" cname="gtk_tool_button_get_label_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetStockId" cname="gtk_tool_button_get_stock_id">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_tool_button_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseUnderline" cname="gtk_tool_button_get_use_underline">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_tool_button_new">
        <parameters>
          <parameter type="GtkWidget*" name="icon_widget" />
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </constructor>
      <constructor cname="gtk_tool_button_new_from_stock">
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </constructor>
      <method name="SetIconWidget" cname="gtk_tool_button_set_icon_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="icon_widget" />
        </parameters>
      </method>
      <method name="SetLabel" cname="gtk_tool_button_set_label">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="label" />
        </parameters>
      </method>
      <method name="SetLabelWidget" cname="gtk_tool_button_set_label_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="label_widget" />
        </parameters>
      </method>
      <method name="SetStockId" cname="gtk_tool_button_set_stock_id">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </method>
      <method name="SetUseUnderline" cname="gtk_tool_button_set_use_underline">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_underline" />
        </parameters>
      </method>
    </object>
    <object name="ToolItem" cname="GtkToolItem" parent="GtkBin">
      <field name="Priv" cname="priv" type="GtkToolItemPrivate*" />
      <property name="VisibleHorizontal" cname="visible_horizontal" type="gboolean" readable="true" writeable="true" />
      <property name="VisibleVertical" cname="visible_vertical" type="gboolean" readable="true" writeable="true" />
      <property name="IsImportant" cname="is_important" type="gboolean" readable="true" writeable="true" />
      <signal name="CreateMenuProxy" cname="create_menu_proxy" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkToolItem*" name="tool_item" />
        </parameters>
      </signal>
      <signal name="ToolbarReconfigured" cname="toolbar_reconfigured" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkToolItem*" name="tool_item" />
        </parameters>
      </signal>
      <signal name="SetTooltip" cname="set_tooltip" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkToolItem*" name="tool_item" />
          <parameter type="GtkTooltips*" name="tooltips" />
          <parameter type="const-gchar*" name="tip_text" />
          <parameter type="const-gchar*" name="tip_private" />
        </parameters>
      </signal>
      <method name="GetExpand" cname="gtk_tool_item_get_expand">
        <return-type type="gboolean" />
      </method>
      <method name="GetHomogeneous" cname="gtk_tool_item_get_homogeneous">
        <return-type type="gboolean" />
      </method>
      <method name="GetIconSize" cname="gtk_tool_item_get_icon_size">
        <return-type type="GtkIconSize" />
      </method>
      <method name="GetIsImportant" cname="gtk_tool_item_get_is_important">
        <return-type type="gboolean" />
      </method>
      <method name="GetOrientation" cname="gtk_tool_item_get_orientation">
        <return-type type="GtkOrientation" />
      </method>
      <method name="GetProxyMenuItem" cname="gtk_tool_item_get_proxy_menu_item">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-gchar*" name="menu_item_id" />
        </parameters>
      </method>
      <method name="GetReliefStyle" cname="gtk_tool_item_get_relief_style">
        <return-type type="GtkReliefStyle" />
      </method>
      <method name="GetToolbarStyle" cname="gtk_tool_item_get_toolbar_style">
        <return-type type="GtkToolbarStyle" />
      </method>
      <method name="GetType" cname="gtk_tool_item_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUseDragWindow" cname="gtk_tool_item_get_use_drag_window">
        <return-type type="gboolean" />
      </method>
      <method name="GetVisibleHorizontal" cname="gtk_tool_item_get_visible_horizontal">
        <return-type type="gboolean" />
      </method>
      <method name="GetVisibleVertical" cname="gtk_tool_item_get_visible_vertical">
        <return-type type="gboolean" />
      </method>
      <constructor cname="gtk_tool_item_new" />
      <method name="RetrieveProxyMenuItem" cname="gtk_tool_item_retrieve_proxy_menu_item">
        <return-type type="GtkWidget*" />
      </method>
      <method name="SetExpand" cname="gtk_tool_item_set_expand">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="expand" />
        </parameters>
      </method>
      <method name="SetHomogeneous" cname="gtk_tool_item_set_homogeneous">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="homogeneous" />
        </parameters>
      </method>
      <method name="SetIsImportant" cname="gtk_tool_item_set_is_important">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_important" />
        </parameters>
      </method>
      <method name="SetProxyMenuItem" cname="gtk_tool_item_set_proxy_menu_item">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="menu_item_id" />
          <parameter type="GtkWidget*" name="menu_item" />
        </parameters>
      </method>
      <method name="SetTooltip" cname="gtk_tool_item_set_tooltip">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTooltips*" name="tooltips" />
          <parameter type="const-gchar*" name="tip_text" />
          <parameter type="const-gchar*" name="tip_private" />
        </parameters>
      </method>
      <method name="SetUseDragWindow" cname="gtk_tool_item_set_use_drag_window">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="use_drag_window" />
        </parameters>
      </method>
      <method name="SetVisibleHorizontal" cname="gtk_tool_item_set_visible_horizontal">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible_horizontal" />
        </parameters>
      </method>
      <method name="SetVisibleVertical" cname="gtk_tool_item_set_visible_vertical">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible_vertical" />
        </parameters>
      </method>
    </object>
    <object name="TreeModelFilter" cname="GtkTreeModelFilter" parent="GObject">
      <field name="Priv" cname="priv" type="GtkTreeModelFilterPrivate*" />
      <property name="ChildModel" cname="child_model" type="GtkTreeModel" readable="true" writeable="true" construct-only="true" />
      <property name="VirtualRoot" cname="virtual_root" type="GtkTreePath" readable="true" writeable="true" construct-only="true" />
      <implements>
        <interface cname="GtkTreeModel" />
        <interface cname="GtkTreeDragSource" />
      </implements>
      <method name="ClearCache" cname="gtk_tree_model_filter_clear_cache">
        <return-type type="void" />
      </method>
      <method name="ConvertChildIterToIter" cname="gtk_tree_model_filter_convert_child_iter_to_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="filter_iter" />
          <parameter type="GtkTreeIter*" name="child_iter" />
        </parameters>
      </method>
      <method name="ConvertChildPathToPath" cname="gtk_tree_model_filter_convert_child_path_to_path">
        <return-type type="GtkTreePath*" />
        <parameters>
          <parameter type="GtkTreePath*" name="child_path" />
        </parameters>
      </method>
      <method name="ConvertIterToChildIter" cname="gtk_tree_model_filter_convert_iter_to_child_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="child_iter" />
          <parameter type="GtkTreeIter*" name="filter_iter" />
        </parameters>
      </method>
      <method name="ConvertPathToChildPath" cname="gtk_tree_model_filter_convert_path_to_child_path">
        <return-type type="GtkTreePath*" />
        <parameters>
          <parameter type="GtkTreePath*" name="filter_path" />
        </parameters>
      </method>
      <method name="GetModel" cname="gtk_tree_model_filter_get_model">
        <return-type type="GtkTreeModel*" />
      </method>
      <method name="GetType" cname="gtk_tree_model_filter_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_tree_model_filter_new">
        <parameters>
          <parameter type="GtkTreeModel*" name="child_model" />
          <parameter type="GtkTreePath*" name="root" />
        </parameters>
      </constructor>
      <method name="Refilter" cname="gtk_tree_model_filter_refilter">
        <return-type type="void" />
      </method>
      <method name="SetModifyFunc" cname="gtk_tree_model_filter_set_modify_func">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="n_columns" />
          <parameter type="GType*" name="types" />
          <parameter type="GtkTreeModelFilterModifyFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetVisibleColumn" cname="gtk_tree_model_filter_set_visible_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="SetVisibleFunc" cname="gtk_tree_model_filter_set_visible_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModelFilterVisibleFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
    </object>
    <object name="TreeModelSort" cname="GtkTreeModelSort" parent="GObject">
      <field name="Root" cname="root" type="gpointer" />
      <field name="Stamp" cname="stamp" type="gint" />
      <field name="ChildFlags" cname="child_flags" type="guint" />
      <field name="ChildModel" cname="child_model" type="GtkTreeModel*" />
      <field name="ZeroRefCount" cname="zero_ref_count" type="gint" />
      <field name="SortList" cname="sort_list" type="GList*" />
      <field name="SortColumnId" cname="sort_column_id" type="gint" />
      <field name="Order" cname="order" type="GtkSortType" />
      <field name="DefaultSortFunc" cname="default_sort_func" type="GtkTreeIterCompareFunc" />
      <field name="DefaultSortData" cname="default_sort_data" type="gpointer" />
      <field name="DefaultSortDestroy" cname="default_sort_destroy" type="GtkDestroyNotify" />
      <field name="ChangedId" cname="changed_id" type="guint" />
      <field name="InsertedId" cname="inserted_id" type="guint" />
      <field name="HasChildToggledId" cname="has_child_toggled_id" type="guint" />
      <field name="DeletedId" cname="deleted_id" type="guint" />
      <field name="ReorderedId" cname="reordered_id" type="guint" />
      <property name="Model" cname="model" type="GtkTreeModel" readable="true" writeable="true" construct-only="true" />
      <implements>
        <interface cname="GtkTreeModel" />
        <interface cname="GtkTreeSortable" />
        <interface cname="GtkTreeDragSource" />
      </implements>
      <method name="ClearCache" cname="gtk_tree_model_sort_clear_cache">
        <return-type type="void" />
      </method>
      <method name="ConvertChildIterToIter" cname="gtk_tree_model_sort_convert_child_iter_to_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="sort_iter" />
          <parameter type="GtkTreeIter*" name="child_iter" />
        </parameters>
      </method>
      <method name="ConvertChildPathToPath" cname="gtk_tree_model_sort_convert_child_path_to_path">
        <return-type type="GtkTreePath*" />
        <parameters>
          <parameter type="GtkTreePath*" name="child_path" />
        </parameters>
      </method>
      <method name="ConvertIterToChildIter" cname="gtk_tree_model_sort_convert_iter_to_child_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="child_iter" />
          <parameter type="GtkTreeIter*" name="sorted_iter" />
        </parameters>
      </method>
      <method name="ConvertPathToChildPath" cname="gtk_tree_model_sort_convert_path_to_child_path">
        <return-type type="GtkTreePath*" />
        <parameters>
          <parameter type="GtkTreePath*" name="sorted_path" />
        </parameters>
      </method>
      <method name="GetModel" cname="gtk_tree_model_sort_get_model">
        <return-type type="GtkTreeModel*" />
      </method>
      <method name="GetType" cname="gtk_tree_model_sort_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IterIsValid" cname="gtk_tree_model_sort_iter_is_valid">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <constructor cname="gtk_tree_model_sort_new_with_model">
        <parameters>
          <parameter type="GtkTreeModel*" name="child_model" />
        </parameters>
      </constructor>
      <method name="ResetDefaultSortFunc" cname="gtk_tree_model_sort_reset_default_sort_func">
        <return-type type="void" />
      </method>
    </object>
    <object name="TreeSelection" cname="GtkTreeSelection" parent="GObject">
      <field name="TreeView" cname="tree_view" type="GtkTreeView*" />
      <field name="Type" cname="type" type="GtkSelectionMode" />
      <field name="UserFunc" cname="user_func" type="GtkTreeSelectionFunc" />
      <field name="UserData" cname="user_data" type="gpointer" />
      <field name="Destroy" cname="destroy" type="GtkDestroyNotify" />
      <signal name="Changed" cname="changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeSelection*" name="selection" />
        </parameters>
      </signal>
      <method name="CountSelectedRows" cname="gtk_tree_selection_count_selected_rows">
        <return-type type="gint" />
      </method>
      <method name="GetMode" cname="gtk_tree_selection_get_mode">
        <return-type type="GtkSelectionMode" />
      </method>
      <method name="GetSelected" cname="gtk_tree_selection_get_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeModel**" name="model" />
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="GetSelectedRows" cname="gtk_tree_selection_get_selected_rows">
        <return-type type="GList*" />
        <parameters>
          <parameter type="GtkTreeModel**" name="model" />
        </parameters>
      </method>
      <method name="GetTreeView" cname="gtk_tree_selection_get_tree_view">
        <return-type type="GtkTreeView*" />
      </method>
      <method name="GetType" cname="gtk_tree_selection_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUserData" cname="gtk_tree_selection_get_user_data">
        <return-type type="gpointer" />
      </method>
      <method name="IterIsSelected" cname="gtk_tree_selection_iter_is_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="PathIsSelected" cname="gtk_tree_selection_path_is_selected">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="SelectAll" cname="gtk_tree_selection_select_all">
        <return-type type="void" />
      </method>
      <method name="SelectIter" cname="gtk_tree_selection_select_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="SelectPath" cname="gtk_tree_selection_select_path">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="SelectRange" cname="gtk_tree_selection_select_range">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="start_path" />
          <parameter type="GtkTreePath*" name="end_path" />
        </parameters>
      </method>
      <method name="SelectedForeach" cname="gtk_tree_selection_selected_foreach">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeSelectionForeachFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="SetMode" cname="gtk_tree_selection_set_mode">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSelectionMode" name="type" />
        </parameters>
      </method>
      <method name="SetSelectFunction" cname="gtk_tree_selection_set_select_function">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeSelectionFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="UnselectAll" cname="gtk_tree_selection_unselect_all">
        <return-type type="void" />
      </method>
      <method name="UnselectIter" cname="gtk_tree_selection_unselect_iter">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="UnselectPath" cname="gtk_tree_selection_unselect_path">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="UnselectRange" cname="gtk_tree_selection_unselect_range">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="start_path" />
          <parameter type="GtkTreePath*" name="end_path" />
        </parameters>
      </method>
    </object>
    <object name="TreeStore" cname="GtkTreeStore" parent="GObject">
      <field name="Stamp" cname="stamp" type="gint" />
      <field name="Root" cname="root" type="gpointer" />
      <field name="Last" cname="last" type="gpointer" />
      <field name="NColumns" cname="n_columns" type="gint" />
      <field name="SortColumnId" cname="sort_column_id" type="gint" />
      <field name="SortList" cname="sort_list" type="GList*" />
      <field name="Order" cname="order" type="GtkSortType" />
      <field name="ColumnHeaders" cname="column_headers" type="GType*" />
      <field name="DefaultSortFunc" cname="default_sort_func" type="GtkTreeIterCompareFunc" />
      <field name="DefaultSortData" cname="default_sort_data" type="gpointer" />
      <field name="DefaultSortDestroy" cname="default_sort_destroy" type="GtkDestroyNotify" />
      <field name="ColumnsDirty" cname="columns_dirty" bits="1" type="guint" />
      <implements>
        <interface cname="GtkTreeModel" />
        <interface cname="GtkTreeDragSource" />
        <interface cname="GtkTreeDragDest" />
        <interface cname="GtkTreeSortable" />
      </implements>
      <method name="Append" cname="gtk_tree_store_append">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
        </parameters>
      </method>
      <method name="Clear" cname="gtk_tree_store_clear">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_tree_store_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Insert" cname="gtk_tree_store_insert">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertAfter" cname="gtk_tree_store_insert_after">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
          <parameter type="GtkTreeIter*" name="sibling" />
        </parameters>
      </method>
      <method name="InsertBefore" cname="gtk_tree_store_insert_before">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
          <parameter type="GtkTreeIter*" name="sibling" />
        </parameters>
      </method>
      <method name="IsAncestor" cname="gtk_tree_store_is_ancestor">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="descendant" />
        </parameters>
      </method>
      <method name="IterDepth" cname="gtk_tree_store_iter_depth">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="IterIsValid" cname="gtk_tree_store_iter_is_valid">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="MoveAfter" cname="gtk_tree_store_move_after">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="position" />
        </parameters>
      </method>
      <method name="MoveBefore" cname="gtk_tree_store_move_before">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="position" />
        </parameters>
      </method>
      <constructor cname="gtk_tree_store_new">
        <parameters>
          <parameter type="gint" name="n_columns" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <constructor cname="gtk_tree_store_newv">
        <parameters>
          <parameter type="gint" name="n_columns" />
          <parameter type="GType*" name="types" />
        </parameters>
      </constructor>
      <method name="Prepend" cname="gtk_tree_store_prepend">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreeIter*" name="parent" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_tree_store_remove">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
        </parameters>
      </method>
      <method name="Reorder" cname="gtk_tree_store_reorder">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="parent" />
          <parameter type="gint*" name="new_order" />
        </parameters>
      </method>
      <method name="Set" cname="gtk_tree_store_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetColumnTypes" cname="gtk_tree_store_set_column_types">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="n_columns" />
          <parameter type="GType*" name="types" />
        </parameters>
      </method>
      <method name="SetValist" cname="gtk_tree_store_set_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="SetValue" cname="gtk_tree_store_set_value">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint" name="column" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="Swap" cname="gtk_tree_store_swap">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeIter*" name="a" />
          <parameter type="GtkTreeIter*" name="b" />
        </parameters>
      </method>
    </object>
    <object name="TreeView" cname="GtkTreeView" parent="GtkContainer">
      <field name="Priv" cname="priv" type="GtkTreeViewPrivate*" />
      <property name="Model" cname="model" type="GtkTreeModel" readable="true" writeable="true" />
      <property name="Hadjustment" cname="hadjustment" type="GtkAdjustment" readable="true" writeable="true" />
      <property name="Vadjustment" cname="vadjustment" type="GtkAdjustment" readable="true" writeable="true" />
      <property name="HeadersVisible" cname="headers_visible" type="gboolean" readable="true" writeable="true" />
      <property name="HeadersClickable" cname="headers_clickable" type="gboolean" writeable="true" />
      <property name="ExpanderColumn" cname="expander_column" type="GtkTreeViewColumn" readable="true" writeable="true" />
      <property name="Reorderable" cname="reorderable" type="gboolean" readable="true" writeable="true" />
      <property name="RulesHint" cname="rules_hint" type="gboolean" readable="true" writeable="true" />
      <property name="EnableSearch" cname="enable_search" type="gboolean" readable="true" writeable="true" />
      <property name="SearchColumn" cname="search_column" type="gint" readable="true" writeable="true" />
      <property name="FixedHeightMode" cname="fixed_height_mode" type="gboolean" readable="true" writeable="true" />
      <signal name="SetScrollAdjustments" cname="set_scroll_adjustments" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
          <parameter type="GtkAdjustment*" name="hadjustment" />
          <parameter type="GtkAdjustment*" name="vadjustment" />
        </parameters>
      </signal>
      <signal name="RowActivated" cname="row_activated" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewColumn*" name="column" />
        </parameters>
      </signal>
      <signal name="TestExpandRow" cname="test_expand_row" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </signal>
      <signal name="TestCollapseRow" cname="test_collapse_row" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </signal>
      <signal name="RowExpanded" cname="row_expanded" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </signal>
      <signal name="RowCollapsed" cname="row_collapsed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </signal>
      <signal name="ColumnsChanged" cname="columns_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
        </parameters>
      </signal>
      <signal name="CursorChanged" cname="cursor_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
        </parameters>
      </signal>
      <signal name="MoveCursor" cname="move_cursor" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
          <parameter type="GtkMovementStep" name="step" />
          <parameter type="gint" name="count" />
        </parameters>
      </signal>
      <signal name="SelectAll" cname="select_all" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
        </parameters>
      </signal>
      <signal name="UnselectAll" cname="unselect_all" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
        </parameters>
      </signal>
      <signal name="SelectCursorRow" cname="select_cursor_row" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
          <parameter type="gboolean" name="start_editing" />
        </parameters>
      </signal>
      <signal name="ToggleCursorRow" cname="toggle_cursor_row" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
        </parameters>
      </signal>
      <signal name="ExpandCollapseCursorRow" cname="expand_collapse_cursor_row" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
          <parameter type="gboolean" name="logical" />
          <parameter type="gboolean" name="expand" />
          <parameter type="gboolean" name="open_all" />
        </parameters>
      </signal>
      <signal name="SelectCursorParent" cname="select_cursor_parent" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
        </parameters>
      </signal>
      <signal name="StartInteractiveSearch" cname="start_interactive_search" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreeView*" name="tree_view" />
        </parameters>
      </signal>
      <method name="AppendColumn" cname="gtk_tree_view_append_column">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTreeViewColumn*" name="column" />
        </parameters>
      </method>
      <method name="CollapseAll" cname="gtk_tree_view_collapse_all">
        <return-type type="void" />
      </method>
      <method name="CollapseRow" cname="gtk_tree_view_collapse_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="ColumnsAutosize" cname="gtk_tree_view_columns_autosize">
        <return-type type="void" />
      </method>
      <method name="CreateRowDragIcon" cname="gtk_tree_view_create_row_drag_icon">
        <return-type type="GdkPixmap*" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="EnableModelDragDest" cname="gtk_tree_view_enable_model_drag_dest">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="gint" name="n_targets" />
          <parameter type="GdkDragAction" name="actions" />
        </parameters>
      </method>
      <method name="EnableModelDragSource" cname="gtk_tree_view_enable_model_drag_source">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkModifierType" name="start_button_mask" />
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="gint" name="n_targets" />
          <parameter type="GdkDragAction" name="actions" />
        </parameters>
      </method>
      <method name="ExpandAll" cname="gtk_tree_view_expand_all">
        <return-type type="void" />
      </method>
      <method name="ExpandRow" cname="gtk_tree_view_expand_row">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="gboolean" name="open_all" />
        </parameters>
      </method>
      <method name="ExpandToPath" cname="gtk_tree_view_expand_to_path">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="GetBackgroundArea" cname="gtk_tree_view_get_background_area">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewColumn*" name="column" />
          <parameter type="GdkRectangle*" name="rect" />
        </parameters>
      </method>
      <method name="GetBinWindow" cname="gtk_tree_view_get_bin_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetCellArea" cname="gtk_tree_view_get_cell_area">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewColumn*" name="column" />
          <parameter type="GdkRectangle*" name="rect" />
        </parameters>
      </method>
      <method name="GetColumn" cname="gtk_tree_view_get_column">
        <return-type type="GtkTreeViewColumn*" />
        <parameters>
          <parameter type="gint" name="n" />
        </parameters>
      </method>
      <method name="GetColumns" cname="gtk_tree_view_get_columns">
        <return-type type="GList*" />
      </method>
      <method name="GetCursor" cname="gtk_tree_view_get_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath**" name="path" />
          <parameter type="GtkTreeViewColumn**" name="focus_column" />
        </parameters>
      </method>
      <method name="GetDestRowAtPos" cname="gtk_tree_view_get_dest_row_at_pos">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="drag_x" />
          <parameter type="gint" name="drag_y" />
          <parameter type="GtkTreePath**" name="path" />
          <parameter type="GtkTreeViewDropPosition*" name="pos" />
        </parameters>
      </method>
      <method name="GetDragDestRow" cname="gtk_tree_view_get_drag_dest_row">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath**" name="path" />
          <parameter type="GtkTreeViewDropPosition*" name="pos" />
        </parameters>
      </method>
      <method name="GetEnableSearch" cname="gtk_tree_view_get_enable_search">
        <return-type type="gboolean" />
      </method>
      <method name="GetExpanderColumn" cname="gtk_tree_view_get_expander_column">
        <return-type type="GtkTreeViewColumn*" />
      </method>
      <method name="GetHadjustment" cname="gtk_tree_view_get_hadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetHeadersVisible" cname="gtk_tree_view_get_headers_visible">
        <return-type type="gboolean" />
      </method>
      <method name="GetModel" cname="gtk_tree_view_get_model">
        <return-type type="GtkTreeModel*" />
      </method>
      <method name="GetPathAtPos" cname="gtk_tree_view_get_path_at_pos">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="GtkTreePath**" name="path" />
          <parameter type="GtkTreeViewColumn**" name="column" />
          <parameter type="gint*" name="cell_x" />
          <parameter type="gint*" name="cell_y" />
        </parameters>
      </method>
      <method name="GetReorderable" cname="gtk_tree_view_get_reorderable">
        <return-type type="gboolean" />
      </method>
      <method name="GetRulesHint" cname="gtk_tree_view_get_rules_hint">
        <return-type type="gboolean" />
      </method>
      <method name="GetSearchColumn" cname="gtk_tree_view_get_search_column">
        <return-type type="gint" />
      </method>
      <method name="GetSearchEqualFunc" cname="gtk_tree_view_get_search_equal_func">
        <return-type type="GtkTreeViewSearchEqualFunc" />
      </method>
      <method name="GetSelection" cname="gtk_tree_view_get_selection">
        <return-type type="GtkTreeSelection*" />
      </method>
      <method name="GetType" cname="gtk_tree_view_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVadjustment" cname="gtk_tree_view_get_vadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetVisibleRect" cname="gtk_tree_view_get_visible_rect">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="visible_rect" />
        </parameters>
      </method>
      <method name="InsertColumn" cname="gtk_tree_view_insert_column">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTreeViewColumn*" name="column" />
          <parameter type="gint" name="position" />
        </parameters>
      </method>
      <method name="InsertColumnWithAttributes" cname="gtk_tree_view_insert_column_with_attributes">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="position" />
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="InsertColumnWithDataFunc" cname="gtk_tree_view_insert_column_with_data_func">
        <return-type type="gint" />
        <parameters>
          <parameter type="gint" name="position" />
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="GtkTreeCellDataFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GDestroyNotify" name="dnotify" />
        </parameters>
      </method>
      <method name="MapExpandedRows" cname="gtk_tree_view_map_expanded_rows">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewMappingFunc" name="func" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="ModeGetType" cname="gtk_tree_view_mode_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="MoveColumnAfter" cname="gtk_tree_view_move_column_after">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewColumn*" name="column" />
          <parameter type="GtkTreeViewColumn*" name="base_column" />
        </parameters>
      </method>
      <constructor cname="gtk_tree_view_new" />
      <constructor cname="gtk_tree_view_new_with_model">
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
        </parameters>
      </constructor>
      <method name="RemoveColumn" cname="gtk_tree_view_remove_column">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkTreeViewColumn*" name="column" />
        </parameters>
      </method>
      <method name="RowActivated" cname="gtk_tree_view_row_activated">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewColumn*" name="column" />
        </parameters>
      </method>
      <method name="RowExpanded" cname="gtk_tree_view_row_expanded">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="ScrollToCell" cname="gtk_tree_view_scroll_to_cell">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewColumn*" name="column" />
          <parameter type="gboolean" name="use_align" />
          <parameter type="gfloat" name="row_align" />
          <parameter type="gfloat" name="col_align" />
        </parameters>
      </method>
      <method name="ScrollToPoint" cname="gtk_tree_view_scroll_to_point">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="tree_x" />
          <parameter type="gint" name="tree_y" />
        </parameters>
      </method>
      <method name="SetColumnDragFunction" cname="gtk_tree_view_set_column_drag_function">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewColumnDropFunc" name="func" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetCursor" cname="gtk_tree_view_set_cursor">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewColumn*" name="focus_column" />
          <parameter type="gboolean" name="start_editing" />
        </parameters>
      </method>
      <method name="SetCursorOnCell" cname="gtk_tree_view_set_cursor_on_cell">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewColumn*" name="focus_column" />
          <parameter type="GtkCellRenderer*" name="focus_cell" />
          <parameter type="gboolean" name="start_editing" />
        </parameters>
      </method>
      <method name="SetDestroyCountFunc" cname="gtk_tree_view_set_destroy_count_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeDestroyCountFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetDragDestRow" cname="gtk_tree_view_set_drag_dest_row">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeViewDropPosition" name="pos" />
        </parameters>
      </method>
      <method name="SetEnableSearch" cname="gtk_tree_view_set_enable_search">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="enable_search" />
        </parameters>
      </method>
      <method name="SetExpanderColumn" cname="gtk_tree_view_set_expander_column">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewColumn*" name="column" />
        </parameters>
      </method>
      <method name="SetHadjustment" cname="gtk_tree_view_set_hadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetHeadersClickable" cname="gtk_tree_view_set_headers_clickable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetHeadersVisible" cname="gtk_tree_view_set_headers_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="headers_visible" />
        </parameters>
      </method>
      <method name="SetModel" cname="gtk_tree_view_set_model">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
        </parameters>
      </method>
      <method name="SetReorderable" cname="gtk_tree_view_set_reorderable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="reorderable" />
        </parameters>
      </method>
      <method name="SetRulesHint" cname="gtk_tree_view_set_rules_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetSearchColumn" cname="gtk_tree_view_set_search_column">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="SetSearchEqualFunc" cname="gtk_tree_view_set_search_equal_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewSearchEqualFunc" name="search_equal_func" />
          <parameter type="gpointer" name="search_user_data" />
          <parameter type="GtkDestroyNotify" name="search_destroy" />
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gtk_tree_view_set_vadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="TreeToWidgetCoords" cname="gtk_tree_view_tree_to_widget_coords">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="tx" />
          <parameter type="gint" name="ty" />
          <parameter type="gint*" name="wx" />
          <parameter type="gint*" name="wy" />
        </parameters>
      </method>
      <method name="UnsetRowsDragDest" cname="gtk_tree_view_unset_rows_drag_dest">
        <return-type type="void" />
      </method>
      <method name="UnsetRowsDragSource" cname="gtk_tree_view_unset_rows_drag_source">
        <return-type type="void" />
      </method>
      <method name="WidgetToTreeCoords" cname="gtk_tree_view_widget_to_tree_coords">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="wx" />
          <parameter type="gint" name="wy" />
          <parameter type="gint*" name="tx" />
          <parameter type="gint*" name="ty" />
        </parameters>
      </method>
    </object>
    <object name="TreeViewColumn" cname="GtkTreeViewColumn" parent="GtkObject">
      <field name="TreeView" cname="tree_view" type="GtkWidget*" />
      <field name="Button" cname="button" type="GtkWidget*" />
      <field name="Child" cname="child" type="GtkWidget*" />
      <field name="Arrow" cname="arrow" type="GtkWidget*" />
      <field name="Alignment" cname="alignment" type="GtkWidget*" />
      <field name="Window" cname="window" type="GdkWindow*" />
      <field name="EditableWidget" cname="editable_widget" type="GtkCellEditable*" />
      <field name="Xalign" cname="xalign" type="gfloat" />
      <field name="PropertyChangedSignal" cname="property_changed_signal" type="guint" />
      <field name="Spacing" cname="spacing" type="gint" />
      <field name="ColumnType" cname="column_type" type="GtkTreeViewColumnSizing" />
      <field name="RequestedWidth" cname="requested_width" type="gint" />
      <field name="ButtonRequest" cname="button_request" type="gint" />
      <field name="ResizedWidth" cname="resized_width" type="gint" />
      <field name="Width" cname="width" type="gint" />
      <field name="FixedWidth" cname="fixed_width" type="gint" />
      <field name="MinWidth" cname="min_width" type="gint" />
      <field name="MaxWidth" cname="max_width" type="gint" />
      <field name="DragX" cname="drag_x" type="gint" />
      <field name="DragY" cname="drag_y" type="gint" />
      <field name="Title" cname="title" type="gchar*" />
      <field name="CellList" cname="cell_list" type="GList*" />
      <field name="SortClickedSignal" cname="sort_clicked_signal" type="guint" />
      <field name="SortColumnChangedSignal" cname="sort_column_changed_signal" type="guint" />
      <field name="SortColumnId" cname="sort_column_id" type="gint" />
      <field name="SortOrder" cname="sort_order" type="GtkSortType" />
      <field name="Visible" cname="visible" bits="1" type="guint" />
      <field name="Resizable" cname="resizable" bits="1" type="guint" />
      <field name="Clickable" cname="clickable" bits="1" type="guint" />
      <field name="Dirty" cname="dirty" bits="1" type="guint" />
      <field name="ShowSortIndicator" cname="show_sort_indicator" bits="1" type="guint" />
      <field name="MaybeReordered" cname="maybe_reordered" bits="1" type="guint" />
      <field name="Reorderable" cname="reorderable" bits="1" type="guint" />
      <field name="UseResizedWidth" cname="use_resized_width" bits="1" type="guint" />
      <field name="Expand" cname="expand" bits="1" type="guint" />
      <signal name="Clicked" cname="clicked" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewColumn*" name="tree_column" />
        </parameters>
      </signal>
      <property name="Visible" cname="visible" type="gboolean" readable="true" writeable="true" />
      <property name="Resizable" cname="resizable" type="gboolean" readable="true" writeable="true" />
      <property name="Width" cname="width" type="gint" readable="true" />
      <property name="Sizing" cname="sizing" type="GtkTreeViewColumnSizing" readable="true" writeable="true" />
      <property name="FixedWidth" cname="fixed_width" type="gint" readable="true" writeable="true" />
      <property name="MinWidth" cname="min_width" type="gint" readable="true" writeable="true" />
      <property name="MaxWidth" cname="max_width" type="gint" readable="true" writeable="true" />
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true" />
      <property name="Expand" cname="expand" type="gboolean" readable="true" writeable="true" />
      <property name="Clickable" cname="clickable" type="gboolean" readable="true" writeable="true" />
      <property name="Widget" cname="widget" type="GtkWidget" readable="true" writeable="true" />
      <property name="Alignment" cname="alignment" type="gfloat" readable="true" writeable="true" />
      <property name="Reorderable" cname="reorderable" type="gboolean" readable="true" writeable="true" />
      <property name="SortIndicator" cname="sort_indicator" type="gboolean" readable="true" writeable="true" />
      <property name="SortOrder" cname="sort_order" type="GtkSortType" readable="true" writeable="true" />
      <implements>
        <interface cname="GtkCellLayout" />
      </implements>
      <method name="AddAttribute" cname="gtk_tree_view_column_add_attribute">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell_renderer" />
          <parameter type="const-gchar*" name="attribute" />
          <parameter type="gint" name="column" />
        </parameters>
      </method>
      <method name="CellGetPosition" cname="gtk_tree_view_column_cell_get_position">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell_renderer" />
          <parameter type="gint*" name="start_pos" />
          <parameter type="gint*" name="width" />
        </parameters>
      </method>
      <method name="CellGetSize" cname="gtk_tree_view_column_cell_get_size">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="cell_area" />
          <parameter type="gint*" name="x_offset" />
          <parameter type="gint*" name="y_offset" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="CellIsVisible" cname="gtk_tree_view_column_cell_is_visible">
        <return-type type="gboolean" />
      </method>
      <method name="CellSetCellData" cname="gtk_tree_view_column_cell_set_cell_data">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gboolean" name="is_expander" />
          <parameter type="gboolean" name="is_expanded" />
        </parameters>
      </method>
      <method name="Clear" cname="gtk_tree_view_column_clear">
        <return-type type="void" />
      </method>
      <method name="ClearAttributes" cname="gtk_tree_view_column_clear_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell_renderer" />
        </parameters>
      </method>
      <method name="Clicked" cname="gtk_tree_view_column_clicked">
        <return-type type="void" />
      </method>
      <method name="FocusCell" cname="gtk_tree_view_column_focus_cell">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
        </parameters>
      </method>
      <method name="GetAlignment" cname="gtk_tree_view_column_get_alignment">
        <return-type type="gfloat" />
      </method>
      <method name="GetCellRenderers" cname="gtk_tree_view_column_get_cell_renderers">
        <return-type type="GList*" />
      </method>
      <method name="GetClickable" cname="gtk_tree_view_column_get_clickable">
        <return-type type="gboolean" />
      </method>
      <method name="GetExpand" cname="gtk_tree_view_column_get_expand">
        <return-type type="gboolean" />
      </method>
      <method name="GetFixedWidth" cname="gtk_tree_view_column_get_fixed_width">
        <return-type type="gint" />
      </method>
      <method name="GetMaxWidth" cname="gtk_tree_view_column_get_max_width">
        <return-type type="gint" />
      </method>
      <method name="GetMinWidth" cname="gtk_tree_view_column_get_min_width">
        <return-type type="gint" />
      </method>
      <method name="GetReorderable" cname="gtk_tree_view_column_get_reorderable">
        <return-type type="gboolean" />
      </method>
      <method name="GetResizable" cname="gtk_tree_view_column_get_resizable">
        <return-type type="gboolean" />
      </method>
      <method name="GetSizing" cname="gtk_tree_view_column_get_sizing">
        <return-type type="GtkTreeViewColumnSizing" />
      </method>
      <method name="GetSortColumnId" cname="gtk_tree_view_column_get_sort_column_id">
        <return-type type="gint" />
      </method>
      <method name="GetSortIndicator" cname="gtk_tree_view_column_get_sort_indicator">
        <return-type type="gboolean" />
      </method>
      <method name="GetSortOrder" cname="gtk_tree_view_column_get_sort_order">
        <return-type type="GtkSortType" />
      </method>
      <method name="GetSpacing" cname="gtk_tree_view_column_get_spacing">
        <return-type type="gint" />
      </method>
      <method name="GetTitle" cname="gtk_tree_view_column_get_title">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_tree_view_column_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisible" cname="gtk_tree_view_column_get_visible">
        <return-type type="gboolean" />
      </method>
      <method name="GetWidget" cname="gtk_tree_view_column_get_widget">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetWidth" cname="gtk_tree_view_column_get_width">
        <return-type type="gint" />
      </method>
      <constructor cname="gtk_tree_view_column_new" />
      <constructor cname="gtk_tree_view_column_new_with_attributes">
        <parameters>
          <parameter type="const-gchar*" name="title" />
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <method name="PackEnd" cname="gtk_tree_view_column_pack_end">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gboolean" name="expand" />
        </parameters>
      </method>
      <method name="PackStart" cname="gtk_tree_view_column_pack_start">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell" />
          <parameter type="gboolean" name="expand" />
        </parameters>
      </method>
      <method name="SetAlignment" cname="gtk_tree_view_column_set_alignment">
        <return-type type="void" />
        <parameters>
          <parameter type="gfloat" name="xalign" />
        </parameters>
      </method>
      <method name="SetAttributes" cname="gtk_tree_view_column_set_attributes">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell_renderer" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetCellDataFunc" cname="gtk_tree_view_column_set_cell_data_func">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkCellRenderer*" name="cell_renderer" />
          <parameter type="GtkTreeCellDataFunc" name="func" />
          <parameter type="gpointer" name="func_data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="SetClickable" cname="gtk_tree_view_column_set_clickable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="clickable" />
        </parameters>
      </method>
      <method name="SetExpand" cname="gtk_tree_view_column_set_expand">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="expand" />
        </parameters>
      </method>
      <method name="SetFixedWidth" cname="gtk_tree_view_column_set_fixed_width">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="fixed_width" />
        </parameters>
      </method>
      <method name="SetMaxWidth" cname="gtk_tree_view_column_set_max_width">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="max_width" />
        </parameters>
      </method>
      <method name="SetMinWidth" cname="gtk_tree_view_column_set_min_width">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="min_width" />
        </parameters>
      </method>
      <method name="SetReorderable" cname="gtk_tree_view_column_set_reorderable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="reorderable" />
        </parameters>
      </method>
      <method name="SetResizable" cname="gtk_tree_view_column_set_resizable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="resizable" />
        </parameters>
      </method>
      <method name="SetSizing" cname="gtk_tree_view_column_set_sizing">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTreeViewColumnSizing" name="type" />
        </parameters>
      </method>
      <method name="SetSortColumnId" cname="gtk_tree_view_column_set_sort_column_id">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="sort_column_id" />
        </parameters>
      </method>
      <method name="SetSortIndicator" cname="gtk_tree_view_column_set_sort_indicator">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetSortOrder" cname="gtk_tree_view_column_set_sort_order">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSortType" name="order" />
        </parameters>
      </method>
      <method name="SetSpacing" cname="gtk_tree_view_column_set_spacing">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="spacing" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_tree_view_column_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetVisible" cname="gtk_tree_view_column_set_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="visible" />
        </parameters>
      </method>
      <method name="SetWidget" cname="gtk_tree_view_column_set_widget">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
    </object>
    <object name="UIManager" cname="GtkUIManager" parent="GObject">
      <field name="PrivateData" cname="private_data" type="GtkUIManagerPrivate*" />
      <property name="AddTearoffs" cname="add_tearoffs" type="gboolean" readable="true" writeable="true" />
      <property name="Ui" cname="ui" type="gchar*" readable="true" />
      <signal name="AddWidget" cname="add_widget" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkUIManager*" name="merge" />
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </signal>
      <signal name="ActionsChanged" cname="actions_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkUIManager*" name="merge" />
        </parameters>
      </signal>
      <signal name="ConnectProxy" cname="connect_proxy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkUIManager*" name="merge" />
          <parameter type="GtkAction*" name="action" />
          <parameter type="GtkWidget*" name="proxy" />
        </parameters>
      </signal>
      <signal name="DisconnectProxy" cname="disconnect_proxy">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkUIManager*" name="merge" />
          <parameter type="GtkAction*" name="action" />
          <parameter type="GtkWidget*" name="proxy" />
        </parameters>
      </signal>
      <signal name="PreActivate" cname="pre_activate">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkUIManager*" name="merge" />
          <parameter type="GtkAction*" name="action" />
        </parameters>
      </signal>
      <signal name="PostActivate" cname="post_activate">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkUIManager*" name="merge" />
          <parameter type="GtkAction*" name="action" />
        </parameters>
      </signal>
      <method name="AddUi" cname="gtk_ui_manager_add_ui">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="merge_id" />
          <parameter type="const-gchar*" name="path" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="const-gchar*" name="action" />
          <parameter type="GtkUIManagerItemType" name="type" />
          <parameter type="gboolean" name="top" />
        </parameters>
      </method>
      <method name="AddUiFromFile" cname="gtk_ui_manager_add_ui_from_file">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="AddUiFromString" cname="gtk_ui_manager_add_ui_from_string">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="buffer" />
          <parameter type="gssize" name="length" />
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="EnsureUpdate" cname="gtk_ui_manager_ensure_update">
        <return-type type="void" />
      </method>
      <method name="GetAccelGroup" cname="gtk_ui_manager_get_accel_group">
        <return-type type="GtkAccelGroup*" />
      </method>
      <method name="GetAction" cname="gtk_ui_manager_get_action">
        <return-type type="GtkAction*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="GetActionGroups" cname="gtk_ui_manager_get_action_groups">
        <return-type type="GList*" />
      </method>
      <method name="GetAddTearoffs" cname="gtk_ui_manager_get_add_tearoffs">
        <return-type type="gboolean" />
      </method>
      <method name="GetToplevels" cname="gtk_ui_manager_get_toplevels">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GtkUIManagerItemType" name="types" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_ui_manager_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetUi" cname="gtk_ui_manager_get_ui">
        <return-type type="gchar*" />
      </method>
      <method name="GetWidget" cname="gtk_ui_manager_get_widget">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </method>
      <method name="InsertActionGroup" cname="gtk_ui_manager_insert_action_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkActionGroup*" name="action_group" />
          <parameter type="gint" name="pos" />
        </parameters>
      </method>
      <constructor cname="gtk_ui_manager_new" />
      <constructor cname="gtk_ui_manager_new_merge_id">
        <parameters>
          <parameter type="GtkUIManager*" name="self" />
        </parameters>
      </constructor>
      <method name="RemoveActionGroup" cname="gtk_ui_manager_remove_action_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkActionGroup*" name="action_group" />
        </parameters>
      </method>
      <method name="RemoveUi" cname="gtk_ui_manager_remove_ui">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="merge_id" />
        </parameters>
      </method>
      <method name="SetAddTearoffs" cname="gtk_ui_manager_set_add_tearoffs">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="add_tearoffs" />
        </parameters>
      </method>
    </object>
    <object name="VBox" cname="GtkVBox" parent="GtkBox">
      <method name="GetType" cname="gtk_vbox_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_vbox_new">
        <parameters>
          <parameter type="gboolean" name="homogeneous" />
          <parameter type="gint" name="spacing" />
        </parameters>
      </constructor>
    </object>
    <object name="VButtonBox" cname="GtkVButtonBox" parent="GtkButtonBox">
      <method name="GetLayoutDefault" cname="gtk_vbutton_box_get_layout_default" deprecated="1" shared="true">
        <return-type type="GtkButtonBoxStyle" />
      </method>
      <method name="GetSpacingDefault" cname="gtk_vbutton_box_get_spacing_default" deprecated="1" shared="true">
        <return-type type="gint" />
      </method>
      <method name="GetType" cname="gtk_vbutton_box_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_vbutton_box_new" />
      <method name="SetLayoutDefault" cname="gtk_vbutton_box_set_layout_default" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkButtonBoxStyle" name="layout" />
        </parameters>
      </method>
      <method name="SetSpacingDefault" cname="gtk_vbutton_box_set_spacing_default" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="spacing" />
        </parameters>
      </method>
    </object>
    <object name="Viewport" cname="GtkViewport" parent="GtkBin">
      <field name="ShadowType" cname="shadow_type" type="GtkShadowType" />
      <field name="ViewWindow" cname="view_window" type="GdkWindow*" />
      <field name="BinWindow" cname="bin_window" type="GdkWindow*" />
      <field name="Hadjustment" cname="hadjustment" type="GtkAdjustment*" />
      <field name="Vadjustment" cname="vadjustment" type="GtkAdjustment*" />
      <property name="Hadjustment" cname="hadjustment" type="GtkAdjustment" readable="true" writeable="true" construct="true" />
      <property name="Vadjustment" cname="vadjustment" type="GtkAdjustment" readable="true" writeable="true" construct="true" />
      <property name="ShadowType" cname="shadow_type" type="GtkShadowType" readable="true" writeable="true" />
      <signal name="SetScrollAdjustments" cname="set_scroll_adjustments" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkViewport*" name="viewport" />
          <parameter type="GtkAdjustment*" name="hadjustment" />
          <parameter type="GtkAdjustment*" name="vadjustment" />
        </parameters>
      </signal>
      <method name="GetHadjustment" cname="gtk_viewport_get_hadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <method name="GetShadowType" cname="gtk_viewport_get_shadow_type">
        <return-type type="GtkShadowType" />
      </method>
      <method name="GetType" cname="gtk_viewport_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVadjustment" cname="gtk_viewport_get_vadjustment">
        <return-type type="GtkAdjustment*" />
      </method>
      <constructor cname="gtk_viewport_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="hadjustment" />
          <parameter type="GtkAdjustment*" name="vadjustment" />
        </parameters>
      </constructor>
      <method name="SetHadjustment" cname="gtk_viewport_set_hadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
      <method name="SetShadowType" cname="gtk_viewport_set_shadow_type">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkShadowType" name="type" />
        </parameters>
      </method>
      <method name="SetVadjustment" cname="gtk_viewport_set_vadjustment">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </method>
    </object>
    <object name="VPaned" cname="GtkVPaned" parent="GtkPaned">
      <method name="GetType" cname="gtk_vpaned_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_vpaned_new" />
    </object>
    <object name="VRuler" cname="GtkVRuler" parent="GtkRuler">
      <method name="GetType" cname="gtk_vruler_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_vruler_new" />
    </object>
    <object name="VScale" cname="GtkVScale" parent="GtkScale">
      <method name="GetType" cname="gtk_vscale_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_vscale_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </constructor>
      <constructor cname="gtk_vscale_new_with_range">
        <parameters>
          <parameter type="gdouble" name="min" />
          <parameter type="gdouble" name="max" />
          <parameter type="gdouble" name="step" />
        </parameters>
      </constructor>
    </object>
    <object name="VScrollbar" cname="GtkVScrollbar" parent="GtkScrollbar">
      <method name="GetType" cname="gtk_vscrollbar_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_vscrollbar_new">
        <parameters>
          <parameter type="GtkAdjustment*" name="adjustment" />
        </parameters>
      </constructor>
    </object>
    <object name="VSeparator" cname="GtkVSeparator" parent="GtkSeparator">
      <method name="GetType" cname="gtk_vseparator_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_vseparator_new" />
    </object>
    <object name="Widget" cname="GtkWidget" parent="GtkObject">
      <field name="PrivateFlags" cname="private_flags" type="guint16" />
      <field name="State" cname="state" type="guint8" />
      <field name="SavedState" cname="saved_state" type="guint8" />
      <field name="Name" cname="name" type="gchar*" />
      <field name="Style" cname="style" type="GtkStyle*" access="public" />
      <field name="Requisition" cname="requisition" type="GtkRequisition" access="public" />
      <field name="Allocation" cname="allocation" type="GtkAllocation" access="public" />
      <field name="Window" cname="window" type="GdkWindow*" access="public" />
      <field name="Parent" cname="parent" type="GtkWidget*" access="public" />
      <property name="Name" cname="name" type="gchar*" readable="true" writeable="true" />
      <property name="Parent" cname="parent" type="GtkContainer" readable="true" writeable="true" />
      <property name="WidthRequest" cname="width_request" type="gint" readable="true" writeable="true" />
      <property name="HeightRequest" cname="height_request" type="gint" readable="true" writeable="true" />
      <property name="Visible" cname="visible" type="gboolean" readable="true" writeable="true" />
      <property name="Sensitive" cname="sensitive" type="gboolean" readable="true" writeable="true" />
      <property name="AppPaintable" cname="app_paintable" type="gboolean" readable="true" writeable="true" />
      <property name="CanFocus" cname="can_focus" type="gboolean" readable="true" writeable="true" />
      <property name="HasFocus" cname="has_focus" type="gboolean" readable="true" writeable="true" />
      <property name="IsFocus" cname="is_focus" type="gboolean" readable="true" writeable="true" />
      <property name="CanDefault" cname="can_default" type="gboolean" readable="true" writeable="true" />
      <property name="HasDefault" cname="has_default" type="gboolean" readable="true" writeable="true" />
      <property name="ReceivesDefault" cname="receives_default" type="gboolean" readable="true" writeable="true" />
      <property name="CompositeChild" cname="composite_child" type="gboolean" readable="true" />
      <property name="Style" cname="style" type="GtkStyle" readable="true" writeable="true" />
      <property name="Events" cname="events" type="GdkEventMask" readable="true" writeable="true" />
      <property name="ExtensionEvents" cname="extension_events" type="GdkExtensionMode" readable="true" writeable="true" />
      <property name="NoShowAll" cname="no_show_all" type="gboolean" readable="true" writeable="true" />
      <signal name="Show" cname="show" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </signal>
      <signal name="Hide" cname="hide" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </signal>
      <signal name="Map" cname="map" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </signal>
      <signal name="Unmap" cname="unmap" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </signal>
      <signal name="Realize" cname="realize" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </signal>
      <signal name="Unrealize" cname="unrealize" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </signal>
      <signal name="SizeRequest" cname="size_request" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkRequisition*" name="requisition" />
        </parameters>
      </signal>
      <signal name="SizeAllocate" cname="size_allocate" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkAllocation*" name="allocation" />
        </parameters>
      </signal>
      <signal name="StateChanged" cname="state_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkStateType" name="previous_state" />
        </parameters>
      </signal>
      <signal name="ParentSet" cname="parent_set" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkWidget*" name="previous_parent" />
        </parameters>
      </signal>
      <signal name="HierarchyChanged" cname="hierarchy_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkWidget*" name="previous_toplevel" />
        </parameters>
      </signal>
      <signal name="StyleSet" cname="style_set" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkStyle*" name="previous_style" />
        </parameters>
      </signal>
      <signal name="DirectionChanged" cname="direction_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkTextDirection" name="previous_direction" />
        </parameters>
      </signal>
      <signal name="GrabNotify" cname="grab_notify" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gboolean" name="was_grabbed" />
        </parameters>
      </signal>
      <signal name="ChildNotify" cname="child_notify" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GParamSpec*" name="pspec" />
        </parameters>
      </signal>
      <signal name="MnemonicActivate" cname="mnemonic_activate" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gboolean" name="group_cycling" />
        </parameters>
      </signal>
      <signal name="GrabFocus" cname="grab_focus" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </signal>
      <signal name="Focus" cname="focus" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkDirectionType" name="direction" />
        </parameters>
      </signal>
      <signal name="Event" cname="event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </signal>
      <signal name="EventAfter" cname="event-after">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="GtkWidget*" />
          <parameter name="p0" type="GdkEvent" />
        </parameters>
      </signal>
      <signal name="ButtonPressEvent" cname="button_press_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventButton*" name="event" />
        </parameters>
      </signal>
      <signal name="ButtonReleaseEvent" cname="button_release_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventButton*" name="event" />
        </parameters>
      </signal>
      <signal name="ScrollEvent" cname="scroll_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventScroll*" name="event" />
        </parameters>
      </signal>
      <signal name="MotionNotifyEvent" cname="motion_notify_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventMotion*" name="event" />
        </parameters>
      </signal>
      <signal name="DeleteEvent" cname="delete_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventAny*" name="event" />
        </parameters>
      </signal>
      <signal name="DestroyEvent" cname="destroy_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventAny*" name="event" />
        </parameters>
      </signal>
      <signal name="ExposeEvent" cname="expose_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventExpose*" name="event" />
        </parameters>
      </signal>
      <signal name="KeyPressEvent" cname="key_press_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventKey*" name="event" />
        </parameters>
      </signal>
      <signal name="KeyReleaseEvent" cname="key_release_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventKey*" name="event" />
        </parameters>
      </signal>
      <signal name="EnterNotifyEvent" cname="enter_notify_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventCrossing*" name="event" />
        </parameters>
      </signal>
      <signal name="LeaveNotifyEvent" cname="leave_notify_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventCrossing*" name="event" />
        </parameters>
      </signal>
      <signal name="ConfigureEvent" cname="configure_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventConfigure*" name="event" />
        </parameters>
      </signal>
      <signal name="FocusInEvent" cname="focus_in_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventFocus*" name="event" />
        </parameters>
      </signal>
      <signal name="FocusOutEvent" cname="focus_out_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventFocus*" name="event" />
        </parameters>
      </signal>
      <signal name="MapEvent" cname="map_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventAny*" name="event" />
        </parameters>
      </signal>
      <signal name="UnmapEvent" cname="unmap_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventAny*" name="event" />
        </parameters>
      </signal>
      <signal name="PropertyNotifyEvent" cname="property_notify_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventProperty*" name="event" />
        </parameters>
      </signal>
      <signal name="SelectionClearEvent" cname="selection_clear_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventSelection*" name="event" />
        </parameters>
      </signal>
      <signal name="SelectionRequestEvent" cname="selection_request_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventSelection*" name="event" />
        </parameters>
      </signal>
      <signal name="SelectionNotifyEvent" cname="selection_notify_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventSelection*" name="event" />
        </parameters>
      </signal>
      <signal name="SelectionReceived" cname="selection_received" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkSelectionData*" name="selection_data" />
          <parameter type="guint" name="time_" />
        </parameters>
      </signal>
      <signal name="SelectionGet" cname="selection_get" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkSelectionData*" name="selection_data" />
          <parameter type="guint" name="info" />
          <parameter type="guint" name="time_" />
        </parameters>
      </signal>
      <signal name="ProximityInEvent" cname="proximity_in_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventProximity*" name="event" />
        </parameters>
      </signal>
      <signal name="ProximityOutEvent" cname="proximity_out_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventProximity*" name="event" />
        </parameters>
      </signal>
      <signal name="DragLeave" cname="drag_leave" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="guint" name="time_" />
        </parameters>
      </signal>
      <signal name="DragBegin" cname="drag_begin" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDragContext*" name="context" />
        </parameters>
      </signal>
      <signal name="DragEnd" cname="drag_end" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDragContext*" name="context" />
        </parameters>
      </signal>
      <signal name="DragDataDelete" cname="drag_data_delete" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDragContext*" name="context" />
        </parameters>
      </signal>
      <signal name="DragMotion" cname="drag_motion" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="guint" name="time_" />
        </parameters>
      </signal>
      <signal name="DragDrop" cname="drag_drop" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="guint" name="time_" />
        </parameters>
      </signal>
      <signal name="DragDataGet" cname="drag_data_get" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GtkSelectionData*" name="selection_data" />
          <parameter type="guint" name="info" />
          <parameter type="guint" name="time_" />
        </parameters>
      </signal>
      <signal name="DragDataReceived" cname="drag_data_received" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="GtkSelectionData*" name="selection_data" />
          <parameter type="guint" name="info" />
          <parameter type="guint" name="time_" />
        </parameters>
      </signal>
      <signal name="VisibilityNotifyEvent" cname="visibility_notify_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventVisibility*" name="event" />
        </parameters>
      </signal>
      <signal name="ClientEvent" cname="client_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventClient*" name="event" />
        </parameters>
      </signal>
      <signal name="NoExposeEvent" cname="no_expose_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventAny*" name="event" />
        </parameters>
      </signal>
      <signal name="WindowStateEvent" cname="window_state_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventWindowState*" name="event" />
        </parameters>
      </signal>
      <signal name="PopupMenu" cname="popup_menu" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </signal>
      <signal name="ShowHelp" cname="show_help" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkWidgetHelpType" name="help_type" />
        </parameters>
      </signal>
      <signal name="AccelClosuresChanged" cname="accel_closures_changed">
        <return-type type="void" />
        <parameters>
          <parameter name="inst" type="GtkWidget*" />
        </parameters>
      </signal>
      <signal name="ScreenChanged" cname="screen_changed" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkScreen*" name="previous_screen" />
        </parameters>
      </signal>
      <signal name="CanActivateAccel" cname="can_activate_accel" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="guint" name="signal_id" />
        </parameters>
      </signal>
      <virtual_method name="DispatchChildPropertiesChanged" cname="dispatch_child_properties_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="guint" name="n_pspecs" />
          <parameter type="GParamSpec**" name="pspecs" />
        </parameters>
      </virtual_method>
      <virtual_method name="ShowAll" cname="show_all">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </virtual_method>
      <virtual_method name="HideAll" cname="hide_all">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </virtual_method>
      <virtual_method name="GetAccessible" cname="get_accessible">
        <return-type type="AtkObject*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </virtual_method>
      <implements>
        <interface cname="AtkImplementor" />
      </implements>
      <method name="Activate" cname="gtk_widget_activate">
        <return-type type="gboolean" />
      </method>
      <method name="AddAccelerator" cname="gtk_widget_add_accelerator">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_signal" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
          <parameter type="GtkAccelFlags" name="accel_flags" />
        </parameters>
      </method>
      <method name="AddEvents" cname="gtk_widget_add_events">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="events" />
        </parameters>
      </method>
      <method name="AddMnemonicLabel" cname="gtk_widget_add_mnemonic_label">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="label" />
        </parameters>
      </method>
      <method name="CanActivateAccel" cname="gtk_widget_can_activate_accel">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="signal_id" />
        </parameters>
      </method>
      <method name="ChildFocus" cname="gtk_widget_child_focus">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkDirectionType" name="direction" />
        </parameters>
      </method>
      <method name="ChildNotify" cname="gtk_widget_child_notify">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="child_property" />
        </parameters>
      </method>
      <method name="ClassFindStyleProperty" cname="gtk_widget_class_find_style_property" shared="true">
        <return-type type="GParamSpec*" />
        <parameters>
          <parameter type="GtkWidgetClass*" name="klass" />
          <parameter type="const-gchar*" name="property_name" />
        </parameters>
      </method>
      <method name="ClassInstallStyleProperty" cname="gtk_widget_class_install_style_property" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidgetClass*" name="klass" />
          <parameter type="GParamSpec*" name="pspec" />
        </parameters>
      </method>
      <method name="ClassInstallStylePropertyParser" cname="gtk_widget_class_install_style_property_parser" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidgetClass*" name="klass" />
          <parameter type="GParamSpec*" name="pspec" />
          <parameter type="GtkRcPropertyParser" name="parser" />
        </parameters>
      </method>
      <method name="ClassListStyleProperties" cname="gtk_widget_class_list_style_properties" shared="true">
        <return-type type="GParamSpec**" />
        <parameters>
          <parameter type="GtkWidgetClass*" name="klass" />
          <parameter type="guint*" name="n_properties" />
        </parameters>
      </method>
      <method name="ClassPath" cname="gtk_widget_class_path">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="path_length" />
          <parameter type="gchar**" name="path" />
          <parameter type="gchar**" name="path_reversed" />
        </parameters>
      </method>
      <method name="CreatePangoContext" cname="gtk_widget_create_pango_context">
        <return-type type="PangoContext*" />
      </method>
      <method name="CreatePangoLayout" cname="gtk_widget_create_pango_layout">
        <return-type type="PangoLayout*" />
        <parameters>
          <parameter type="const-gchar*" name="text" />
        </parameters>
      </method>
      <method name="Destroy" cname="gtk_widget_destroy">
        <return-type type="void" />
      </method>
      <method name="Destroyed" cname="gtk_widget_destroyed">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget**" name="widget_pointer" />
        </parameters>
      </method>
      <method name="Draw" cname="gtk_widget_draw" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkRectangle*" name="area" />
        </parameters>
      </method>
      <method name="EnsureStyle" cname="gtk_widget_ensure_style">
        <return-type type="void" />
      </method>
      <method name="Event" cname="gtk_widget_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="FreezeChildNotify" cname="gtk_widget_freeze_child_notify">
        <return-type type="void" />
      </method>
      <method name="GetAccessible" cname="gtk_widget_get_accessible">
        <return-type type="AtkObject*" />
      </method>
      <method name="GetAncestor" cname="gtk_widget_get_ancestor">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GType" name="widget_type" />
        </parameters>
      </method>
      <method name="GetChildRequisition" cname="gtk_widget_get_child_requisition">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRequisition*" name="requisition" />
        </parameters>
      </method>
      <method name="GetChildVisible" cname="gtk_widget_get_child_visible">
        <return-type type="gboolean" />
      </method>
      <method name="GetClipboard" cname="gtk_widget_get_clipboard">
        <return-type type="GtkClipboard*" />
        <parameters>
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </method>
      <method name="GetColormap" cname="gtk_widget_get_colormap">
        <return-type type="GdkColormap*" />
      </method>
      <method name="GetCompositeName" cname="gtk_widget_get_composite_name">
        <return-type type="gchar*" />
      </method>
      <method name="GetDefaultColormap" cname="gtk_widget_get_default_colormap" shared="true">
        <return-type type="GdkColormap*" />
      </method>
      <method name="GetDefaultDirection" cname="gtk_widget_get_default_direction" shared="true">
        <return-type type="GtkTextDirection" />
      </method>
      <method name="GetDefaultStyle" cname="gtk_widget_get_default_style" shared="true">
        <return-type type="GtkStyle*" />
      </method>
      <method name="GetDefaultVisual" cname="gtk_widget_get_default_visual" shared="true">
        <return-type type="GdkVisual*" />
      </method>
      <method name="GetDirection" cname="gtk_widget_get_direction">
        <return-type type="GtkTextDirection" />
      </method>
      <method name="GetDisplay" cname="gtk_widget_get_display">
        <return-type type="GdkDisplay*" />
      </method>
      <method name="GetEvents" cname="gtk_widget_get_events">
        <return-type type="gint" />
      </method>
      <method name="GetExtensionEvents" cname="gtk_widget_get_extension_events">
        <return-type type="GdkExtensionMode" />
      </method>
      <method name="GetModifierStyle" cname="gtk_widget_get_modifier_style">
        <return-type type="GtkRcStyle*" />
      </method>
      <method name="GetName" cname="gtk_widget_get_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetNoShowAll" cname="gtk_widget_get_no_show_all">
        <return-type type="gboolean" />
      </method>
      <method name="GetPangoContext" cname="gtk_widget_get_pango_context">
        <return-type type="PangoContext*" />
      </method>
      <method name="GetParent" cname="gtk_widget_get_parent">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetParentWindow" cname="gtk_widget_get_parent_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetPointer" cname="gtk_widget_get_pointer">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="x" />
          <parameter type="gint*" name="y" />
        </parameters>
      </method>
      <method name="GetRootWindow" cname="gtk_widget_get_root_window">
        <return-type type="GdkWindow*" />
      </method>
      <method name="GetScreen" cname="gtk_widget_get_screen">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetSettings" cname="gtk_widget_get_settings">
        <return-type type="GtkSettings*" />
      </method>
      <method name="GetSizeRequest" cname="gtk_widget_get_size_request">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetStyle" cname="gtk_widget_get_style">
        <return-type type="GtkStyle*" />
      </method>
      <method name="GetToplevel" cname="gtk_widget_get_toplevel">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetType" cname="gtk_widget_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisual" cname="gtk_widget_get_visual">
        <return-type type="GdkVisual*" />
      </method>
      <method name="GrabDefault" cname="gtk_widget_grab_default">
        <return-type type="void" />
      </method>
      <method name="GrabFocus" cname="gtk_widget_grab_focus">
        <return-type type="void" />
      </method>
      <method name="HasScreen" cname="gtk_widget_has_screen">
        <return-type type="gboolean" />
      </method>
      <method name="Hide" cname="gtk_widget_hide">
        <return-type type="void" />
      </method>
      <method name="HideAll" cname="gtk_widget_hide_all">
        <return-type type="void" />
      </method>
      <method name="HideOnDelete" cname="gtk_widget_hide_on_delete">
        <return-type type="gboolean" />
      </method>
      <method name="Intersect" cname="gtk_widget_intersect">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GdkRectangle*" name="intersection" />
        </parameters>
      </method>
      <method name="IsAncestor" cname="gtk_widget_is_ancestor">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="ancestor" />
        </parameters>
      </method>
      <method name="IsFocus" cname="gtk_widget_is_focus">
        <return-type type="gboolean" />
      </method>
      <method name="ListAccelClosures" cname="gtk_widget_list_accel_closures">
        <return-type type="GList*" />
      </method>
      <method name="ListMnemonicLabels" cname="gtk_widget_list_mnemonic_labels">
        <return-type type="GList*" />
      </method>
      <method name="Map" cname="gtk_widget_map">
        <return-type type="void" />
      </method>
      <method name="MnemonicActivate" cname="gtk_widget_mnemonic_activate">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gboolean" name="group_cycling" />
        </parameters>
      </method>
      <method name="ModifyBase" cname="gtk_widget_modify_base">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStateType" name="state" />
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="ModifyBg" cname="gtk_widget_modify_bg">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStateType" name="state" />
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="ModifyFg" cname="gtk_widget_modify_fg">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStateType" name="state" />
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="ModifyFont" cname="gtk_widget_modify_font">
        <return-type type="void" />
        <parameters>
          <parameter type="PangoFontDescription*" name="font_desc" />
        </parameters>
      </method>
      <method name="ModifyStyle" cname="gtk_widget_modify_style">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRcStyle*" name="style" />
        </parameters>
      </method>
      <method name="ModifyText" cname="gtk_widget_modify_text">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStateType" name="state" />
          <parameter type="const-GdkColor*" name="color" />
        </parameters>
      </method>
      <constructor cname="gtk_widget_new">
        <parameters>
          <parameter type="GType" name="type" />
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <method name="Path" cname="gtk_widget_path">
        <return-type type="void" />
        <parameters>
          <parameter type="guint*" name="path_length" />
          <parameter type="gchar**" name="path" />
          <parameter type="gchar**" name="path_reversed" />
        </parameters>
      </method>
      <method name="PopColormap" cname="gtk_widget_pop_colormap" shared="true">
        <return-type type="void" />
      </method>
      <method name="PopCompositeChild" cname="gtk_widget_pop_composite_child" shared="true">
        <return-type type="void" />
      </method>
      <method name="PushColormap" cname="gtk_widget_push_colormap" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="cmap" />
        </parameters>
      </method>
      <method name="PushCompositeChild" cname="gtk_widget_push_composite_child" shared="true">
        <return-type type="void" />
      </method>
      <method name="QueueClear" cname="gtk_widget_queue_clear" deprecated="1">
        <return-type type="void" />
      </method>
      <method name="QueueClearArea" cname="gtk_widget_queue_clear_area" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="QueueDraw" cname="gtk_widget_queue_draw">
        <return-type type="void" />
      </method>
      <method name="QueueDrawArea" cname="gtk_widget_queue_draw_area">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="QueueResize" cname="gtk_widget_queue_resize">
        <return-type type="void" />
      </method>
      <method name="QueueResizeNoRedraw" cname="gtk_widget_queue_resize_no_redraw">
        <return-type type="void" />
      </method>
      <method name="Realize" cname="gtk_widget_realize">
        <return-type type="void" />
      </method>
      <method name="Ref" cname="gtk_widget_ref">
        <return-type type="GtkWidget*" />
      </method>
      <method name="RegionIntersect" cname="gtk_widget_region_intersect">
        <return-type type="GdkRegion*" />
        <parameters>
          <parameter type="GdkRegion*" name="region" />
        </parameters>
      </method>
      <method name="RemoveAccelerator" cname="gtk_widget_remove_accelerator">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkAccelGroup*" name="accel_group" />
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
        </parameters>
      </method>
      <method name="RemoveMnemonicLabel" cname="gtk_widget_remove_mnemonic_label">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="label" />
        </parameters>
      </method>
      <method name="RenderIcon" cname="gtk_widget_render_icon">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="GtkIconSize" name="size" />
          <parameter type="const-gchar*" name="detail" />
        </parameters>
      </method>
      <method name="Reparent" cname="gtk_widget_reparent">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="new_parent" />
        </parameters>
      </method>
      <method name="ResetRcStyles" cname="gtk_widget_reset_rc_styles">
        <return-type type="void" />
      </method>
      <method name="ResetShapes" cname="gtk_widget_reset_shapes">
        <return-type type="void" />
      </method>
      <method name="SendExpose" cname="gtk_widget_send_expose">
        <return-type type="gint" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="Set" cname="gtk_widget_set" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="SetAccelPath" cname="gtk_widget_set_accel_path">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accel_path" />
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </method>
      <method name="SetAppPaintable" cname="gtk_widget_set_app_paintable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="app_paintable" />
        </parameters>
      </method>
      <method name="SetChildVisible" cname="gtk_widget_set_child_visible">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="is_visible" />
        </parameters>
      </method>
      <method name="SetColormap" cname="gtk_widget_set_colormap">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
        </parameters>
      </method>
      <method name="SetCompositeName" cname="gtk_widget_set_composite_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetDefaultColormap" cname="gtk_widget_set_default_colormap" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
        </parameters>
      </method>
      <method name="SetDefaultDirection" cname="gtk_widget_set_default_direction" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextDirection" name="dir" />
        </parameters>
      </method>
      <method name="SetDirection" cname="gtk_widget_set_direction">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextDirection" name="dir" />
        </parameters>
      </method>
      <method name="SetDoubleBuffered" cname="gtk_widget_set_double_buffered">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="double_buffered" />
        </parameters>
      </method>
      <method name="SetEvents" cname="gtk_widget_set_events">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="events" />
        </parameters>
      </method>
      <method name="SetExtensionEvents" cname="gtk_widget_set_extension_events">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkExtensionMode" name="mode" />
        </parameters>
      </method>
      <method name="SetName" cname="gtk_widget_set_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SetNoShowAll" cname="gtk_widget_set_no_show_all">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="no_show_all" />
        </parameters>
      </method>
      <method name="SetParent" cname="gtk_widget_set_parent">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="parent" />
        </parameters>
      </method>
      <method name="SetParentWindow" cname="gtk_widget_set_parent_window">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindow*" name="parent_window" />
        </parameters>
      </method>
      <method name="SetRedrawOnAllocate" cname="gtk_widget_set_redraw_on_allocate">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="redraw_on_allocate" />
        </parameters>
      </method>
      <method name="SetScrollAdjustments" cname="gtk_widget_set_scroll_adjustments">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkAdjustment*" name="hadjustment" />
          <parameter type="GtkAdjustment*" name="vadjustment" />
        </parameters>
      </method>
      <method name="SetSensitive" cname="gtk_widget_set_sensitive">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="sensitive" />
        </parameters>
      </method>
      <method name="SetSizeRequest" cname="gtk_widget_set_size_request">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="SetState" cname="gtk_widget_set_state">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStateType" name="state" />
        </parameters>
      </method>
      <method name="SetStyle" cname="gtk_widget_set_style">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
        </parameters>
      </method>
      <method name="SetUposition" cname="gtk_widget_set_uposition" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="SetUsize" cname="gtk_widget_set_usize" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="ShapeCombineMask" cname="gtk_widget_shape_combine_mask">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkBitmap*" name="shape_mask" />
          <parameter type="gint" name="offset_x" />
          <parameter type="gint" name="offset_y" />
        </parameters>
      </method>
      <method name="Show" cname="gtk_widget_show">
        <return-type type="void" />
      </method>
      <method name="ShowAll" cname="gtk_widget_show_all">
        <return-type type="void" />
      </method>
      <method name="ShowNow" cname="gtk_widget_show_now">
        <return-type type="void" />
      </method>
      <method name="SizeAllocate" cname="gtk_widget_size_allocate">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAllocation*" name="allocation" />
        </parameters>
      </method>
      <method name="SizeRequest" cname="gtk_widget_size_request">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRequisition*" name="requisition" />
        </parameters>
      </method>
      <method name="StyleGet" cname="gtk_widget_style_get">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="StyleGetProperty" cname="gtk_widget_style_get_property">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="property_name" />
          <parameter type="GValue*" name="value" />
        </parameters>
      </method>
      <method name="StyleGetValist" cname="gtk_widget_style_get_valist">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="first_property_name" />
          <parameter type="va_list" name="var_args" />
        </parameters>
      </method>
      <method name="ThawChildNotify" cname="gtk_widget_thaw_child_notify">
        <return-type type="void" />
      </method>
      <method name="TranslateCoordinates" cname="gtk_widget_translate_coordinates">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="dest_widget" />
          <parameter type="gint" name="src_x" />
          <parameter type="gint" name="src_y" />
          <parameter type="gint*" name="dest_x" />
          <parameter type="gint*" name="dest_y" />
        </parameters>
      </method>
      <method name="Unmap" cname="gtk_widget_unmap">
        <return-type type="void" />
      </method>
      <method name="Unparent" cname="gtk_widget_unparent">
        <return-type type="void" />
      </method>
      <method name="Unrealize" cname="gtk_widget_unrealize">
        <return-type type="void" />
      </method>
      <method name="Unref" cname="gtk_widget_unref">
        <return-type type="void" />
      </method>
    </object>
    <object name="Window" cname="GtkWindow" parent="GtkBin">
      <field name="Title" cname="title" type="gchar*" />
      <field name="WmclassName" cname="wmclass_name" type="gchar*" />
      <field name="WmclassClass" cname="wmclass_class" type="gchar*" />
      <field name="WmRole" cname="wm_role" type="gchar*" />
      <field name="FocusWidget" cname="focus_widget" type="GtkWidget*" />
      <field name="DefaultWidget" cname="default_widget" type="GtkWidget*" />
      <field name="TransientParent" cname="transient_parent" type="GtkWindow*" />
      <field name="GeometryInfo" cname="geometry_info" type="GtkWindowGeometryInfo*" />
      <field name="Frame" cname="frame" type="GdkWindow*" />
      <field name="Group" cname="group" type="GtkWindowGroup*" />
      <field name="ConfigureRequestCount" cname="configure_request_count" type="guint16" />
      <field name="AllowShrink" cname="allow_shrink" bits="1" type="guint" />
      <field name="AllowGrow" cname="allow_grow" bits="1" type="guint" />
      <field name="ConfigureNotifyReceived" cname="configure_notify_received" bits="1" type="guint" />
      <field name="NeedDefaultPosition" cname="need_default_position" bits="1" type="guint" />
      <field name="NeedDefaultSize" cname="need_default_size" bits="1" type="guint" />
      <field name="Position" cname="position" bits="3" type="guint" />
      <field name="Type" cname="type" bits="4" type="guint" />
      <field name="HasUserRefCount" cname="has_user_ref_count" bits="1" type="guint" />
      <field name="HasFocus" cname="has_focus" bits="1" type="guint" />
      <field name="Modal" cname="modal" bits="1" type="guint" />
      <field name="DestroyWithParent" cname="destroy_with_parent" bits="1" type="guint" />
      <field name="HasFrame" cname="has_frame" bits="1" type="guint" />
      <field name="IconifyInitially" cname="iconify_initially" bits="1" type="guint" />
      <field name="StickInitially" cname="stick_initially" bits="1" type="guint" />
      <field name="MaximizeInitially" cname="maximize_initially" bits="1" type="guint" />
      <field name="Decorated" cname="decorated" bits="1" type="guint" />
      <field name="TypeHint" cname="type_hint" bits="3" type="guint" />
      <field name="Gravity" cname="gravity" bits="5" type="guint" />
      <field name="IsActive" cname="is_active" bits="1" type="guint" />
      <field name="HasToplevelFocus" cname="has_toplevel_focus" bits="1" type="guint" />
      <field name="FrameLeft" cname="frame_left" type="guint" />
      <field name="FrameTop" cname="frame_top" type="guint" />
      <field name="FrameRight" cname="frame_right" type="guint" />
      <field name="FrameBottom" cname="frame_bottom" type="guint" />
      <field name="KeysChangedHandler" cname="keys_changed_handler" type="guint" />
      <field name="MnemonicModifier" cname="mnemonic_modifier" type="GdkModifierType" />
      <field name="Screen" cname="screen" type="GdkScreen*" />
      <property name="Type" cname="type" type="GtkWindowType" readable="true" writeable="true" construct-only="true" />
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true" />
      <property name="Role" cname="role" type="gchar*" readable="true" writeable="true" />
      <property name="AllowShrink" cname="allow_shrink" type="gboolean" readable="true" writeable="true" />
      <property name="AllowGrow" cname="allow_grow" type="gboolean" readable="true" writeable="true" />
      <property name="Resizable" cname="resizable" type="gboolean" readable="true" writeable="true" />
      <property name="Modal" cname="modal" type="gboolean" readable="true" writeable="true" />
      <property name="WindowPosition" cname="window_position" type="GtkWindowPosition" readable="true" writeable="true" />
      <property name="DefaultWidth" cname="default_width" type="gint" readable="true" writeable="true" />
      <property name="DefaultHeight" cname="default_height" type="gint" readable="true" writeable="true" />
      <property name="DestroyWithParent" cname="destroy_with_parent" type="gboolean" readable="true" writeable="true" />
      <property name="Icon" cname="icon" type="GdkPixbuf" readable="true" writeable="true" />
      <property name="Screen" cname="screen" type="GdkScreen" readable="true" writeable="true" />
      <property name="IsActive" cname="is_active" type="gboolean" readable="true" />
      <property name="HasToplevelFocus" cname="has_toplevel_focus" type="gboolean" readable="true" />
      <property name="TypeHint" cname="type_hint" type="GdkWindowTypeHint" readable="true" writeable="true" />
      <property name="SkipTaskbarHint" cname="skip_taskbar_hint" type="gboolean" readable="true" writeable="true" />
      <property name="SkipPagerHint" cname="skip_pager_hint" type="gboolean" readable="true" writeable="true" />
      <property name="AcceptFocus" cname="accept_focus" type="gboolean" readable="true" writeable="true" />
      <property name="Decorated" cname="decorated" type="gboolean" readable="true" writeable="true" />
      <property name="Gravity" cname="gravity" type="GdkGravity" readable="true" writeable="true" />
      <signal name="SetFocus" cname="set_focus" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="window" />
          <parameter type="GtkWidget*" name="focus" />
        </parameters>
      </signal>
      <signal name="FrameEvent" cname="frame_event" when="LAST">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWindow*" name="window" />
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </signal>
      <signal name="ActivateFocus" cname="activate_focus" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="window" />
        </parameters>
      </signal>
      <signal name="ActivateDefault" cname="activate_default" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="window" />
        </parameters>
      </signal>
      <signal name="MoveFocus" cname="move_focus" when="LAST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="window" />
          <parameter type="GtkDirectionType" name="direction" />
        </parameters>
      </signal>
      <signal name="KeysChanged" cname="keys_changed" when="FIRST">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="window" />
        </parameters>
      </signal>
      <method name="ActivateDefault" cname="gtk_window_activate_default">
        <return-type type="gboolean" />
      </method>
      <method name="ActivateFocus" cname="gtk_window_activate_focus">
        <return-type type="gboolean" />
      </method>
      <method name="ActivateKey" cname="gtk_window_activate_key">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEventKey*" name="event" />
        </parameters>
      </method>
      <method name="AddAccelGroup" cname="gtk_window_add_accel_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </method>
      <method name="AddEmbeddedXid" cname="gtk_window_add_embedded_xid">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="xid" />
        </parameters>
      </method>
      <method name="AddMnemonic" cname="gtk_window_add_mnemonic">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="keyval" />
          <parameter type="GtkWidget*" name="target" />
        </parameters>
      </method>
      <method name="BeginMoveDrag" cname="gtk_window_begin_move_drag">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="button" />
          <parameter type="gint" name="root_x" />
          <parameter type="gint" name="root_y" />
          <parameter type="guint32" name="timestamp" />
        </parameters>
      </method>
      <method name="BeginResizeDrag" cname="gtk_window_begin_resize_drag">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindowEdge" name="edge" />
          <parameter type="gint" name="button" />
          <parameter type="gint" name="root_x" />
          <parameter type="gint" name="root_y" />
          <parameter type="guint32" name="timestamp" />
        </parameters>
      </method>
      <method name="Deiconify" cname="gtk_window_deiconify">
        <return-type type="void" />
      </method>
      <method name="Fullscreen" cname="gtk_window_fullscreen">
        <return-type type="void" />
      </method>
      <method name="GetAcceptFocus" cname="gtk_window_get_accept_focus">
        <return-type type="gboolean" />
      </method>
      <method name="GetDecorated" cname="gtk_window_get_decorated">
        <return-type type="gboolean" />
      </method>
      <method name="GetDefaultIconList" cname="gtk_window_get_default_icon_list" shared="true">
        <return-type type="GList*" />
      </method>
      <method name="GetDefaultSize" cname="gtk_window_get_default_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetDestroyWithParent" cname="gtk_window_get_destroy_with_parent">
        <return-type type="gboolean" />
      </method>
      <method name="GetFocus" cname="gtk_window_get_focus">
        <return-type type="GtkWidget*" />
      </method>
      <method name="GetFrameDimensions" cname="gtk_window_get_frame_dimensions">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="left" />
          <parameter type="gint*" name="top" />
          <parameter type="gint*" name="right" />
          <parameter type="gint*" name="bottom" />
        </parameters>
      </method>
      <method name="GetGravity" cname="gtk_window_get_gravity">
        <return-type type="GdkGravity" />
      </method>
      <method name="GetHasFrame" cname="gtk_window_get_has_frame">
        <return-type type="gboolean" />
      </method>
      <method name="GetIcon" cname="gtk_window_get_icon">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetIconList" cname="gtk_window_get_icon_list">
        <return-type type="GList*" />
      </method>
      <method name="GetMnemonicModifier" cname="gtk_window_get_mnemonic_modifier">
        <return-type type="GdkModifierType" />
      </method>
      <method name="GetModal" cname="gtk_window_get_modal">
        <return-type type="gboolean" />
      </method>
      <method name="GetPosition" cname="gtk_window_get_position">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="root_x" />
          <parameter type="gint*" name="root_y" />
        </parameters>
      </method>
      <method name="GetResizable" cname="gtk_window_get_resizable">
        <return-type type="gboolean" />
      </method>
      <method name="GetRole" cname="gtk_window_get_role">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetScreen" cname="gtk_window_get_screen">
        <return-type type="GdkScreen*" />
      </method>
      <method name="GetSize" cname="gtk_window_get_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="GetSkipPagerHint" cname="gtk_window_get_skip_pager_hint">
        <return-type type="gboolean" />
      </method>
      <method name="GetSkipTaskbarHint" cname="gtk_window_get_skip_taskbar_hint">
        <return-type type="gboolean" />
      </method>
      <method name="GetTitle" cname="gtk_window_get_title">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetTransientFor" cname="gtk_window_get_transient_for">
        <return-type type="GtkWindow*" />
      </method>
      <method name="GetType" cname="gtk_window_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetTypeHint" cname="gtk_window_get_type_hint">
        <return-type type="GdkWindowTypeHint" />
      </method>
      <method name="HasToplevelFocus" cname="gtk_window_has_toplevel_focus">
        <return-type type="gboolean" />
      </method>
      <method name="Iconify" cname="gtk_window_iconify">
        <return-type type="void" />
      </method>
      <method name="IsActive" cname="gtk_window_is_active">
        <return-type type="gboolean" />
      </method>
      <method name="ListToplevels" cname="gtk_window_list_toplevels" shared="true">
        <return-type type="GList*" />
      </method>
      <method name="Maximize" cname="gtk_window_maximize">
        <return-type type="void" />
      </method>
      <method name="MnemonicActivate" cname="gtk_window_mnemonic_activate">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifier" />
        </parameters>
      </method>
      <method name="Move" cname="gtk_window_move">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <constructor cname="gtk_window_new">
        <parameters>
          <parameter type="GtkWindowType" name="type" />
        </parameters>
      </constructor>
      <method name="ParseGeometry" cname="gtk_window_parse_geometry">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="geometry" />
        </parameters>
      </method>
      <method name="Present" cname="gtk_window_present">
        <return-type type="void" />
      </method>
      <method name="PropagateKeyEvent" cname="gtk_window_propagate_key_event">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkEventKey*" name="event" />
        </parameters>
      </method>
      <method name="RemoveAccelGroup" cname="gtk_window_remove_accel_group">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkAccelGroup*" name="accel_group" />
        </parameters>
      </method>
      <method name="RemoveEmbeddedXid" cname="gtk_window_remove_embedded_xid">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="xid" />
        </parameters>
      </method>
      <method name="RemoveMnemonic" cname="gtk_window_remove_mnemonic">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="keyval" />
          <parameter type="GtkWidget*" name="target" />
        </parameters>
      </method>
      <method name="ReshowWithInitialSize" cname="gtk_window_reshow_with_initial_size">
        <return-type type="void" />
      </method>
      <method name="Resize" cname="gtk_window_resize">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="SetAcceptFocus" cname="gtk_window_set_accept_focus">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetAutoStartupNotification" cname="gtk_window_set_auto_startup_notification" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetDecorated" cname="gtk_window_set_decorated">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetDefault" cname="gtk_window_set_default">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="default_widget" />
        </parameters>
      </method>
      <method name="SetDefaultIcon" cname="gtk_window_set_default_icon" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="icon" />
        </parameters>
      </method>
      <method name="SetDefaultIconFromFile" cname="gtk_window_set_default_icon_from_file" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="GError**" name="err" />
        </parameters>
      </method>
      <method name="SetDefaultIconList" cname="gtk_window_set_default_icon_list" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="list" />
        </parameters>
      </method>
      <method name="SetDefaultSize" cname="gtk_window_set_default_size">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="SetDestroyWithParent" cname="gtk_window_set_destroy_with_parent">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetFocus" cname="gtk_window_set_focus">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="focus" />
        </parameters>
      </method>
      <method name="SetFrameDimensions" cname="gtk_window_set_frame_dimensions">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="left" />
          <parameter type="gint" name="top" />
          <parameter type="gint" name="right" />
          <parameter type="gint" name="bottom" />
        </parameters>
      </method>
      <method name="SetGeometryHints" cname="gtk_window_set_geometry_hints">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="geometry_widget" />
          <parameter type="GdkGeometry*" name="geometry" />
          <parameter type="GdkWindowHints" name="geom_mask" />
        </parameters>
      </method>
      <method name="SetGravity" cname="gtk_window_set_gravity">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGravity" name="gravity" />
        </parameters>
      </method>
      <method name="SetHasFrame" cname="gtk_window_set_has_frame">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetIcon" cname="gtk_window_set_icon">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="icon" />
        </parameters>
      </method>
      <method name="SetIconFromFile" cname="gtk_window_set_icon_from_file">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
          <parameter type="GError**" name="err" />
        </parameters>
      </method>
      <method name="SetIconList" cname="gtk_window_set_icon_list">
        <return-type type="void" />
        <parameters>
          <parameter type="GList*" name="list" />
        </parameters>
      </method>
      <method name="SetKeepAbove" cname="gtk_window_set_keep_above">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetKeepBelow" cname="gtk_window_set_keep_below">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetMnemonicModifier" cname="gtk_window_set_mnemonic_modifier">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkModifierType" name="modifier" />
        </parameters>
      </method>
      <method name="SetModal" cname="gtk_window_set_modal">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="modal" />
        </parameters>
      </method>
      <method name="SetPolicy" cname="gtk_window_set_policy" deprecated="1">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="allow_shrink" />
          <parameter type="gint" name="allow_grow" />
          <parameter type="gint" name="auto_shrink" />
        </parameters>
      </method>
      <method name="SetPosition" cname="gtk_window_set_position">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindowPosition" name="position" />
        </parameters>
      </method>
      <method name="SetResizable" cname="gtk_window_set_resizable">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="resizable" />
        </parameters>
      </method>
      <method name="SetRole" cname="gtk_window_set_role">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="role" />
        </parameters>
      </method>
      <method name="SetScreen" cname="gtk_window_set_screen">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkScreen*" name="screen" />
        </parameters>
      </method>
      <method name="SetSkipPagerHint" cname="gtk_window_set_skip_pager_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetSkipTaskbarHint" cname="gtk_window_set_skip_taskbar_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetTitle" cname="gtk_window_set_title">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="title" />
        </parameters>
      </method>
      <method name="SetTransientFor" cname="gtk_window_set_transient_for">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="parent" />
        </parameters>
      </method>
      <method name="SetTypeHint" cname="gtk_window_set_type_hint">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkWindowTypeHint" name="hint" />
        </parameters>
      </method>
      <method name="SetWmclass" cname="gtk_window_set_wmclass">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="wmclass_name" />
          <parameter type="const-gchar*" name="wmclass_class" />
        </parameters>
      </method>
      <method name="Stick" cname="gtk_window_stick">
        <return-type type="void" />
      </method>
      <method name="Unfullscreen" cname="gtk_window_unfullscreen">
        <return-type type="void" />
      </method>
      <method name="Unmaximize" cname="gtk_window_unmaximize">
        <return-type type="void" />
      </method>
      <method name="Unstick" cname="gtk_window_unstick">
        <return-type type="void" />
      </method>
    </object>
    <object name="WindowGroup" cname="GtkWindowGroup" parent="GObject">
      <field name="Grabs" cname="grabs" type="GSList*" />
      <method name="AddWindow" cname="gtk_window_group_add_window">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="window" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_window_group_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_window_group_new" />
      <method name="RemoveWindow" cname="gtk_window_group_remove_window">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWindow*" name="window" />
        </parameters>
      </method>
    </object>
    <struct name="AccelGroupEntry" cname="GtkAccelGroupEntry">
      <field name="Key" cname="key" type="GtkAccelKey" />
      <field name="Closure" cname="closure" type="GClosure*" />
      <field name="AccelPathQuark" cname="accel_path_quark" type="GQuark" />
    </struct>
    <struct name="AccelKey" cname="GtkAccelKey">
      <field name="AccelKey" cname="accel_key" type="guint" />
      <field name="AccelMods" cname="accel_mods" type="GdkModifierType" />
      <field name="AccelFlags" cname="accel_flags" bits="16" type="guint" />
    </struct>
    <struct name="ActionEntry" cname="GtkActionEntry">
      <field name="Name" cname="name" type="const-gchar*" />
      <field name="StockId" cname="stock_id" type="const-gchar*" />
      <field name="Label" cname="label" type="const-gchar*" />
      <field name="Accelerator" cname="accelerator" type="const-gchar*" />
      <field name="Tooltip" cname="tooltip" type="const-gchar*" />
      <field name="Callback" cname="callback" type="GCallback" />
    </struct>
    <alias name="Allocation" cname="GtkAllocation" type="GdkRectangle" />
    <struct name="Arg" cname="GtkArg" deprecated="1">
      <field name="Type" cname="type" type="GtkType" />
      <field name="Name" cname="name" type="gchar*" />
      <field name="CharData" cname="char_data" type="gchar" />
    </struct>
    <struct name="BindingArg" cname="GtkBindingArg">
      <field name="ArgType" cname="arg_type" type="GType" />
      <field name="LongData" cname="long_data" type="glong" />
    </struct>
    <struct name="BindingEntry" cname="GtkBindingEntry">
      <field name="Keyval" cname="keyval" type="guint" />
      <field name="Modifiers" cname="modifiers" type="GdkModifierType" />
      <field name="BindingSet" cname="binding_set" type="GtkBindingSet*" />
      <field name="Destroyed" cname="destroyed" bits="1" type="guint" />
      <field name="InEmission" cname="in_emission" bits="1" type="guint" />
      <field name="SetNext" cname="set_next" type="GtkBindingEntry*" />
      <field name="HashNext" cname="hash_next" type="GtkBindingEntry*" />
      <field name="Signals" cname="signals" type="GtkBindingSignal*" />
      <method name="AddSignal" cname="gtk_binding_entry_add_signal" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkBindingSet*" name="binding_set" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
          <parameter type="const-gchar*" name="signal_name" />
          <parameter type="guint" name="n_args" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="AddSignall" cname="gtk_binding_entry_add_signall" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkBindingSet*" name="binding_set" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
          <parameter type="const-gchar*" name="signal_name" />
          <parameter type="GSList*" name="binding_args" />
        </parameters>
      </method>
      <method name="Clear" cname="gtk_binding_entry_clear" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkBindingSet*" name="binding_set" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_binding_entry_remove" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkBindingSet*" name="binding_set" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
        </parameters>
      </method>
    </struct>
    <struct name="BindingSet" cname="GtkBindingSet" opaque="true">
      <field name="SetName" cname="set_name" type="gchar*" access="public" writeable="true" />
      <field name="Priority" cname="priority" type="gint" access="public" writeable="true" />
      <field name="WidgetPathPspecs" cname="widget_path_pspecs" type="GSList*" access="public" writeable="true" />
      <field name="WidgetClassPspecs" cname="widget_class_pspecs" type="GSList*" access="public" writeable="true" />
      <field name="ClassBranchPspecs" cname="class_branch_pspecs" type="GSList*" access="public" writeable="true" />
      <field name="Entries" cname="entries" type="GtkBindingEntry*" access="public" writeable="true" />
      <field name="Current" cname="current" type="GtkBindingEntry*" access="public" writeable="true" />
      <field name="Parsed" cname="parsed" bits="1" type="guint" access="public" writeable="true" />
      <method name="Activate" cname="gtk_binding_set_activate">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
          <parameter type="GtkObject*" name="object" />
        </parameters>
      </method>
      <method name="AddPath" cname="gtk_binding_set_add_path">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkPathType" name="path_type" />
          <parameter type="const-gchar*" name="path_pattern" />
          <parameter type="GtkPathPriorityType" name="priority" />
        </parameters>
      </method>
      <method name="ByClass" cname="gtk_binding_set_by_class" shared="true">
        <return-type type="GtkBindingSet*" />
        <parameters>
          <parameter type="gpointer" name="object_class" />
        </parameters>
      </method>
      <method name="Find" cname="gtk_binding_set_find" shared="true">
        <return-type type="GtkBindingSet*" />
        <parameters>
          <parameter type="const-gchar*" name="set_name" />
        </parameters>
      </method>
      <constructor cname="gtk_binding_set_new">
        <parameters>
          <parameter type="const-gchar*" name="set_name" />
        </parameters>
      </constructor>
    </struct>
    <struct name="BindingSignal" cname="GtkBindingSignal">
      <field name="Next" cname="next" type="GtkBindingSignal*" />
      <field name="SignalName" cname="signal_name" type="gchar*" />
      <field name="NArgs" cname="n_args" type="guint" />
      <field name="Args" cname="args" type="GtkBindingArg*" />
    </struct>
    <boxed name="Border" cname="GtkBorder">
      <field name="Left" cname="left" type="gint" />
      <field name="Right" cname="right" type="gint" />
      <field name="Top" cname="top" type="gint" />
      <field name="Bottom" cname="bottom" type="gint" />
      <method name="Copy" cname="gtk_border_copy">
        <return-type type="GtkBorder*" owned="true" />
      </method>
      <method name="Free" cname="gtk_border_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_border_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <struct name="BoxChild" cname="GtkBoxChild">
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <field name="Padding" cname="padding" type="guint16" />
      <field name="Expand" cname="expand" bits="1" type="guint" />
      <field name="Fill" cname="fill" bits="1" type="guint" />
      <field name="Pack" cname="pack" bits="1" type="guint" />
      <field name="IsSecondary" cname="is_secondary" bits="1" type="guint" />
    </struct>
    <alias name="ClassInitFunc" cname="GtkClassInitFunc" type="GBaseInitFunc" />
    <alias name="EnumValue" cname="GtkEnumValue" type="GEnumValue" />
    <struct name="FileFilterInfo" cname="GtkFileFilterInfo">
      <field name="Contains" cname="contains" type="GtkFileFilterFlags" />
      <field name="Filename" cname="filename" type="const-gchar*" />
      <field name="Uri" cname="uri" type="const-gchar*" />
      <field name="DisplayName" cname="display_name" type="const-gchar*" />
      <field name="MimeType" cname="mime_type" type="const-gchar*" />
    </struct>
    <struct name="FixedChild" cname="GtkFixedChild">
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
    </struct>
    <alias name="FlagValue" cname="GtkFlagValue" type="GFlagsValue" />
    <alias name="FundamentalType" cname="GtkFundamentalType" type="GType" />
    <struct name="IMContextInfo" cname="GtkIMContextInfo">
      <field name="ContextId" cname="context_id" type="const-gchar*" />
      <field name="ContextName" cname="context_name" type="const-gchar*" />
      <field name="Domain" cname="domain" type="const-gchar*" />
      <field name="DomainDirname" cname="domain_dirname" type="const-gchar*" />
      <field name="DefaultLocales" cname="default_locales" type="const-gchar*" />
    </struct>
    <boxed name="IconInfo" cname="GtkIconInfo" opaque="true">
      <method name="Copy" cname="gtk_icon_info_copy">
        <return-type type="GtkIconInfo*" owned="true" />
      </method>
      <method name="Free" cname="gtk_icon_info_free">
        <return-type type="void" />
      </method>
      <method name="GetAttachPoints" cname="gtk_icon_info_get_attach_points">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkPoint**" name="points" />
          <parameter type="gint*" name="n_points" />
        </parameters>
      </method>
      <method name="GetBaseSize" cname="gtk_icon_info_get_base_size">
        <return-type type="gint" />
      </method>
      <method name="GetBuiltinPixbuf" cname="gtk_icon_info_get_builtin_pixbuf">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetDisplayName" cname="gtk_icon_info_get_display_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetEmbeddedRect" cname="gtk_icon_info_get_embedded_rect">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkRectangle*" name="rectangle" />
        </parameters>
      </method>
      <method name="GetFilename" cname="gtk_icon_info_get_filename">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetType" cname="gtk_icon_info_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="LoadIcon" cname="gtk_icon_info_load_icon">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GError**" name="error" />
        </parameters>
      </method>
      <method name="SetRawCoordinates" cname="gtk_icon_info_set_raw_coordinates">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="raw_coordinates" />
        </parameters>
      </method>
    </boxed>
    <boxed name="IconSet" cname="GtkIconSet" opaque="true">
      <method name="AddSource" cname="gtk_icon_set_add_source">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkIconSource*" name="source" />
        </parameters>
      </method>
      <method name="Copy" cname="gtk_icon_set_copy">
        <return-type type="GtkIconSet*" owned="true" />
      </method>
      <method name="GetSizes" cname="gtk_icon_set_get_sizes">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIconSize**" name="sizes" />
          <parameter type="gint*" name="n_sizes" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_icon_set_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_icon_set_new" />
      <constructor cname="gtk_icon_set_new_from_pixbuf">
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </constructor>
      <method name="Ref" cname="gtk_icon_set_ref">
        <return-type type="GtkIconSet*" />
      </method>
      <method name="RenderIcon" cname="gtk_icon_set_render_icon">
        <return-type type="GdkPixbuf*" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GtkTextDirection" name="direction" />
          <parameter type="GtkStateType" name="state" />
          <parameter type="GtkIconSize" name="size" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-char*" name="detail" />
        </parameters>
      </method>
      <method name="Unref" cname="gtk_icon_set_unref">
        <return-type type="void" />
      </method>
    </boxed>
    <boxed name="IconSource" cname="GtkIconSource" opaque="true">
      <method name="Copy" cname="gtk_icon_source_copy">
        <return-type type="GtkIconSource*" owned="true" />
      </method>
      <method name="Free" cname="gtk_icon_source_free">
        <return-type type="void" />
      </method>
      <method name="GetDirection" cname="gtk_icon_source_get_direction">
        <return-type type="GtkTextDirection" />
      </method>
      <method name="GetDirectionWildcarded" cname="gtk_icon_source_get_direction_wildcarded">
        <return-type type="gboolean" />
      </method>
      <method name="GetFilename" cname="gtk_icon_source_get_filename">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetIconName" cname="gtk_icon_source_get_icon_name">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetPixbuf" cname="gtk_icon_source_get_pixbuf">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetSize" cname="gtk_icon_source_get_size">
        <return-type type="GtkIconSize" />
      </method>
      <method name="GetSizeWildcarded" cname="gtk_icon_source_get_size_wildcarded">
        <return-type type="gboolean" />
      </method>
      <method name="GetState" cname="gtk_icon_source_get_state">
        <return-type type="GtkStateType" />
      </method>
      <method name="GetStateWildcarded" cname="gtk_icon_source_get_state_wildcarded">
        <return-type type="gboolean" />
      </method>
      <method name="GetType" cname="gtk_icon_source_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_icon_source_new" />
      <method name="SetDirection" cname="gtk_icon_source_set_direction">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextDirection" name="direction" />
        </parameters>
      </method>
      <method name="SetDirectionWildcarded" cname="gtk_icon_source_set_direction_wildcarded">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetFilename" cname="gtk_icon_source_set_filename">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="SetIconName" cname="gtk_icon_source_set_icon_name">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
        </parameters>
      </method>
      <method name="SetPixbuf" cname="gtk_icon_source_set_pixbuf">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="SetSize" cname="gtk_icon_source_set_size">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkIconSize" name="size" />
        </parameters>
      </method>
      <method name="SetSizeWildcarded" cname="gtk_icon_source_set_size_wildcarded">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
      <method name="SetState" cname="gtk_icon_source_set_state">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStateType" name="state" />
        </parameters>
      </method>
      <method name="SetStateWildcarded" cname="gtk_icon_source_set_state_wildcarded">
        <return-type type="void" />
        <parameters>
          <parameter type="gboolean" name="setting" />
        </parameters>
      </method>
    </boxed>
    <struct name="ImageAnimationData" cname="GtkImageAnimationData">
      <field name="Anim" cname="anim" type="GdkPixbufAnimation*" />
      <field name="Iter" cname="iter" type="GdkPixbufAnimationIter*" />
      <field name="FrameTimeout" cname="frame_timeout" type="guint" />
    </struct>
    <struct name="ImageIconSetData" cname="GtkImageIconSetData">
      <field name="IconSet" cname="icon_set" type="GtkIconSet*" />
    </struct>
    <struct name="ImageImageData" cname="GtkImageImageData">
      <field name="Image" cname="image" type="GdkImage*" />
    </struct>
    <struct name="ImagePixbufData" cname="GtkImagePixbufData">
      <field name="Pixbuf" cname="pixbuf" type="GdkPixbuf*" />
    </struct>
    <struct name="ImagePixmapData" cname="GtkImagePixmapData">
      <field name="Pixmap" cname="pixmap" type="GdkPixmap*" />
    </struct>
    <struct name="ImageStockData" cname="GtkImageStockData">
      <field name="StockId" cname="stock_id" type="gchar*" />
    </struct>
    <struct name="ItemFactoryEntry" cname="GtkItemFactoryEntry" deprecated="1">
      <field name="Path" cname="path" type="gchar*" />
      <field name="Accelerator" cname="accelerator" type="gchar*" />
      <field name="Callback" cname="callback" type="GtkItemFactoryCallback" />
      <field name="CallbackAction" cname="callback_action" type="guint" />
      <field name="ItemType" cname="item_type" type="gchar*" />
      <field name="ExtraData" cname="extra_data" type="gconstpointer" />
    </struct>
    <struct name="ItemFactoryItem" cname="GtkItemFactoryItem" deprecated="1">
      <field name="Path" cname="path" type="gchar*" />
      <field name="Widgets" cname="widgets" type="GSList*" />
    </struct>
    <struct name="KeyHash" cname="GtkKeyHash" opaque="true" />
    <struct name="LabelSelectionInfo" cname="GtkLabelSelectionInfo" opaque="true" />
    <struct name="MenuEntry" cname="GtkMenuEntry">
      <field name="Path" cname="path" type="gchar*" />
      <field name="Accelerator" cname="accelerator" type="gchar*" />
      <field name="Callback" cname="callback" type="GtkMenuCallback" />
      <field name="CallbackData" cname="callback_data" type="gpointer" />
      <field name="Widget" cname="widget" type="GtkWidget*" />
    </struct>
    <struct name="NotebookPage" cname="GtkNotebookPage" opaque="true">
      <method name="Num" cname="gtk_notebook_page_num" shared="true">
        <return-type type="gint" />
        <parameters>
          <parameter type="GtkNotebook*" name="notebook" />
          <parameter type="GtkWidget*" name="child" />
        </parameters>
      </method>
    </struct>
    <alias name="ObjectInitFunc" cname="GtkObjectInitFunc" type="GInstanceInitFunc" />
    <struct name="RadioActionEntry" cname="GtkRadioActionEntry">
      <field name="Name" cname="name" type="const-gchar*" />
      <field name="StockId" cname="stock_id" type="const-gchar*" />
      <field name="Label" cname="label" type="const-gchar*" />
      <field name="Accelerator" cname="accelerator" type="const-gchar*" />
      <field name="Tooltip" cname="tooltip" type="const-gchar*" />
      <field name="Value" cname="value" type="gint" />
    </struct>
    <struct name="RangeLayout" cname="GtkRangeLayout" opaque="true" />
    <struct name="RangeStepTimer" cname="GtkRangeStepTimer" opaque="true" />
    <struct name="RcContext" cname="GtkRcContext" opaque="true" />
    <struct name="RcProperty" cname="GtkRcProperty">
      <field name="TypeName" cname="type_name" type="GQuark" />
      <field name="PropertyName" cname="property_name" type="GQuark" />
      <field name="Origin" cname="origin" type="gchar*" />
      <field name="Value" cname="value" type="GValue" />
      <method name="ParseBorder" cname="gtk_rc_property_parse_border" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GParamSpec*" name="pspec" />
          <parameter type="const-GString*" name="gstring" />
          <parameter type="GValue*" name="property_value" />
        </parameters>
      </method>
      <method name="ParseColor" cname="gtk_rc_property_parse_color" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GParamSpec*" name="pspec" />
          <parameter type="const-GString*" name="gstring" />
          <parameter type="GValue*" name="property_value" />
        </parameters>
      </method>
      <method name="ParseEnum" cname="gtk_rc_property_parse_enum" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GParamSpec*" name="pspec" />
          <parameter type="const-GString*" name="gstring" />
          <parameter type="GValue*" name="property_value" />
        </parameters>
      </method>
      <method name="ParseFlags" cname="gtk_rc_property_parse_flags" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GParamSpec*" name="pspec" />
          <parameter type="const-GString*" name="gstring" />
          <parameter type="GValue*" name="property_value" />
        </parameters>
      </method>
      <method name="ParseRequisition" cname="gtk_rc_property_parse_requisition" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GParamSpec*" name="pspec" />
          <parameter type="const-GString*" name="gstring" />
          <parameter type="GValue*" name="property_value" />
        </parameters>
      </method>
    </struct>
    <boxed name="Requisition" cname="GtkRequisition">
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
      <method name="Copy" cname="gtk_requisition_copy">
        <return-type type="GtkRequisition*" owned="true" />
      </method>
      <method name="Free" cname="gtk_requisition_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_requisition_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <struct name="RulerMetric" cname="GtkRulerMetric">
      <field name="MetricName" cname="metric_name" type="gchar*" />
      <field name="Abbrev" cname="abbrev" type="gchar*" />
      <field name="PixelsPerUnit" cname="pixels_per_unit" type="gdouble" />
      <field name="RulerScale" cname="ruler_scale" array_len="10" type="gdouble" />
      <field name="Subdivide" cname="subdivide" array_len="5" type="gint" />
    </struct>
    <boxed name="SelectionData" cname="GtkSelectionData">
      <field name="Selection" cname="selection" type="GdkAtom" />
      <field name="Target" cname="target" type="GdkAtom" />
      <field name="Type" cname="type" type="GdkAtom" />
      <field name="Format" cname="format" type="gint" />
      <field name="Data" cname="data" type="guchar*" />
      <field name="Length" cname="length" type="gint" />
      <field name="Display" cname="display" type="GdkDisplay*" />
      <method name="Copy" cname="gtk_selection_data_copy">
        <return-type type="GtkSelectionData*" owned="true" />
      </method>
      <method name="Free" cname="gtk_selection_data_free">
        <return-type type="void" />
      </method>
      <method name="GetTargets" cname="gtk_selection_data_get_targets">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom**" name="targets" />
          <parameter type="gint*" name="n_atoms" />
        </parameters>
      </method>
      <method name="GetText" cname="gtk_selection_data_get_text">
        <return-type type="guchar*" />
      </method>
      <method name="GetType" cname="gtk_selection_data_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Set" cname="gtk_selection_data_set">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkAtom" name="type" />
          <parameter type="gint" name="format" />
          <parameter type="const-guchar*" name="data" />
          <parameter type="gint" name="length" />
        </parameters>
      </method>
      <method name="SetText" cname="gtk_selection_data_set_text">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
          <parameter type="gint" name="len" />
        </parameters>
      </method>
      <method name="TargetsIncludeText" cname="gtk_selection_data_targets_include_text">
        <return-type type="gboolean" />
      </method>
    </boxed>
    <struct name="SettingsPropertyValue" cname="GtkSettingsPropertyValue" opaque="true" />
    <struct name="SettingsValue" cname="GtkSettingsValue">
      <field name="Origin" cname="origin" type="gchar*" />
      <field name="Value" cname="value" type="GValue" />
    </struct>
    <alias name="SignalMarshaller" cname="GtkSignalMarshaller" type="GSignalCMarshaller" />
    <struct name="StockItem" cname="GtkStockItem">
      <field name="StockId" cname="stock_id" type="gchar*" />
      <field name="Label" cname="label" type="gchar*" />
      <field name="Modifier" cname="modifier" type="GdkModifierType" />
      <field name="Keyval" cname="keyval" type="guint" />
      <field name="TranslationDomain" cname="translation_domain" type="gchar*" />
      <method name="Copy" cname="gtk_stock_item_copy">
        <return-type type="GtkStockItem*" owned="true" />
      </method>
      <method name="Free" cname="gtk_stock_item_free">
        <return-type type="void" />
      </method>
    </struct>
    <struct name="TableChild" cname="GtkTableChild">
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <field name="LeftAttach" cname="left_attach" type="guint16" />
      <field name="RightAttach" cname="right_attach" type="guint16" />
      <field name="TopAttach" cname="top_attach" type="guint16" />
      <field name="BottomAttach" cname="bottom_attach" type="guint16" />
      <field name="Xpadding" cname="xpadding" type="guint16" />
      <field name="Ypadding" cname="ypadding" type="guint16" />
      <field name="Xexpand" cname="xexpand" bits="1" type="guint" />
      <field name="Yexpand" cname="yexpand" bits="1" type="guint" />
      <field name="Xshrink" cname="xshrink" bits="1" type="guint" />
      <field name="Yshrink" cname="yshrink" bits="1" type="guint" />
      <field name="Xfill" cname="xfill" bits="1" type="guint" />
      <field name="Yfill" cname="yfill" bits="1" type="guint" />
    </struct>
    <struct name="TableRowCol" cname="GtkTableRowCol">
      <field name="Requisition" cname="requisition" type="guint16" />
      <field name="Allocation" cname="allocation" type="guint16" />
      <field name="Spacing" cname="spacing" type="guint16" />
      <field name="NeedExpand" cname="need_expand" bits="1" type="guint" />
      <field name="NeedShrink" cname="need_shrink" bits="1" type="guint" />
      <field name="Expand" cname="expand" bits="1" type="guint" />
      <field name="Shrink" cname="shrink" bits="1" type="guint" />
      <field name="Empty" cname="empty" bits="1" type="guint" />
    </struct>
    <struct name="TargetEntry" cname="GtkTargetEntry">
      <field name="Target" cname="target" type="gchar*" />
      <field name="Flags" cname="flags" type="guint" />
      <field name="Info" cname="info" type="guint" />
    </struct>
    <struct name="TargetList" cname="GtkTargetList" opaque="true">
      <field name="List" cname="list" type="GList*" access="public" writeable="true" />
      <field name="RefCount" cname="ref_count" type="guint" access="public" writeable="true" />
      <method name="Add" cname="gtk_target_list_add">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkAtom" name="target" />
          <parameter type="guint" name="flags" />
          <parameter type="guint" name="info" />
        </parameters>
      </method>
      <method name="AddTable" cname="gtk_target_list_add_table">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="guint" name="ntargets" />
        </parameters>
      </method>
      <method name="Find" cname="gtk_target_list_find">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkAtom" name="target" />
          <parameter type="guint*" name="info" />
        </parameters>
      </method>
      <constructor cname="gtk_target_list_new">
        <parameters>
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="guint" name="ntargets" />
        </parameters>
      </constructor>
      <method name="Ref" cname="gtk_target_list_ref">
        <return-type type="void" />
      </method>
      <method name="Remove" cname="gtk_target_list_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkAtom" name="target" />
        </parameters>
      </method>
      <method name="Unref" cname="gtk_target_list_unref">
        <return-type type="void" />
      </method>
    </struct>
    <struct name="TargetPair" cname="GtkTargetPair">
      <field name="Target" cname="target" type="GdkAtom" />
      <field name="Flags" cname="flags" type="guint" />
      <field name="Info" cname="info" type="guint" />
    </struct>
    <struct name="TextAppearance" cname="GtkTextAppearance">
      <field name="BgColor" cname="bg_color" type="GdkColor" />
      <field name="FgColor" cname="fg_color" type="GdkColor" />
      <field name="BgStipple" cname="bg_stipple" type="GdkBitmap*" />
      <field name="FgStipple" cname="fg_stipple" type="GdkBitmap*" />
      <field name="Rise" cname="rise" type="gint" />
      <field name="Padding1" cname="padding1" type="gpointer" access="private" />
      <field name="Underline" cname="underline" bits="4" type="guint" />
      <field name="Strikethrough" cname="strikethrough" bits="1" type="guint" />
      <field name="DrawBg" cname="draw_bg" bits="1" type="guint" />
      <field name="InsideSelection" cname="inside_selection" bits="1" type="guint" />
      <field name="IsText" cname="is_text" bits="1" type="guint" />
      <field name="Pad1" cname="pad1" bits="1" type="guint" access="private" />
      <field name="Pad2" cname="pad2" bits="1" type="guint" access="private" />
      <field name="Pad3" cname="pad3" bits="1" type="guint" access="private" />
      <field name="Pad4" cname="pad4" bits="1" type="guint" access="private" />
    </struct>
    <boxed name="TextAttributes" cname="GtkTextAttributes" opaque="true">
      <field name="Refcount" cname="refcount" type="guint" access="private" />
      <field name="Appearance" cname="appearance" type="GtkTextAppearance" access="public" writeable="true" />
      <field name="Justification" cname="justification" type="GtkJustification" access="public" writeable="true" />
      <field name="Direction" cname="direction" type="GtkTextDirection" access="public" writeable="true" />
      <field name="Font" cname="font" type="PangoFontDescription*" access="public" writeable="true" />
      <field name="FontScale" cname="font_scale" type="gdouble" access="public" writeable="true" />
      <field name="LeftMargin" cname="left_margin" type="gint" access="public" writeable="true" />
      <field name="Indent" cname="indent" type="gint" access="public" writeable="true" />
      <field name="RightMargin" cname="right_margin" type="gint" access="public" writeable="true" />
      <field name="PixelsAboveLines" cname="pixels_above_lines" type="gint" access="public" writeable="true" />
      <field name="PixelsBelowLines" cname="pixels_below_lines" type="gint" access="public" writeable="true" />
      <field name="PixelsInsideWrap" cname="pixels_inside_wrap" type="gint" access="public" writeable="true" />
      <field name="Tabs" cname="tabs" type="PangoTabArray*" access="public" writeable="true" />
      <field name="WrapMode" cname="wrap_mode" type="GtkWrapMode" access="public" writeable="true" />
      <field name="Language" cname="language" type="PangoLanguage*" access="public" writeable="true" />
      <field name="Padding1" cname="padding1" type="gpointer" access="private" />
      <field name="Invisible" cname="invisible" bits="1" type="guint" access="public" writeable="true" />
      <field name="BgFullHeight" cname="bg_full_height" bits="1" type="guint" access="public" writeable="true" />
      <field name="Editable" cname="editable" bits="1" type="guint" access="public" writeable="true" />
      <field name="Realized" cname="realized" bits="1" type="guint" access="public" writeable="true" />
      <field name="Pad1" cname="pad1" bits="1" type="guint" access="private" />
      <field name="Pad2" cname="pad2" bits="1" type="guint" access="private" />
      <field name="Pad3" cname="pad3" bits="1" type="guint" access="private" />
      <field name="Pad4" cname="pad4" bits="1" type="guint" access="private" />
      <method name="Copy" cname="gtk_text_attributes_copy">
        <return-type type="GtkTextAttributes*" owned="true" />
      </method>
      <method name="CopyValues" cname="gtk_text_attributes_copy_values">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextAttributes*" name="dest" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_text_attributes_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="gtk_text_attributes_new" />
      <method name="Ref" cname="gtk_text_attributes_ref">
        <return-type type="void" />
      </method>
      <method name="Unref" cname="gtk_text_attributes_unref">
        <return-type type="void" />
      </method>
    </boxed>
    <struct name="TextBTree" cname="GtkTextBTree" opaque="true" />
    <boxed name="TextIter" cname="GtkTextIter">
      <field name="Dummy1" cname="dummy1" type="gpointer" access="private" />
      <field name="Dummy2" cname="dummy2" type="gpointer" access="private" />
      <field name="Dummy3" cname="dummy3" type="gint" access="private" />
      <field name="Dummy4" cname="dummy4" type="gint" access="private" />
      <field name="Dummy5" cname="dummy5" type="gint" access="private" />
      <field name="Dummy6" cname="dummy6" type="gint" access="private" />
      <field name="Dummy7" cname="dummy7" type="gint" access="private" />
      <field name="Dummy8" cname="dummy8" type="gint" access="private" />
      <field name="Dummy9" cname="dummy9" type="gpointer" access="private" />
      <field name="Dummy10" cname="dummy10" type="gpointer" access="private" />
      <field name="Dummy11" cname="dummy11" type="gint" access="private" />
      <field name="Dummy12" cname="dummy12" type="gint" access="private" />
      <field name="Dummy13" cname="dummy13" type="gint" access="private" />
      <field name="Dummy14" cname="dummy14" type="gpointer" access="private" />
      <method name="BackwardChar" cname="gtk_text_iter_backward_char">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardChars" cname="gtk_text_iter_backward_chars">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BackwardCursorPosition" cname="gtk_text_iter_backward_cursor_position">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardCursorPositions" cname="gtk_text_iter_backward_cursor_positions">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BackwardFindChar" cname="gtk_text_iter_backward_find_char">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextCharPredicate" name="pred" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="const-GtkTextIter*" name="limit" />
        </parameters>
      </method>
      <method name="BackwardLine" cname="gtk_text_iter_backward_line">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardLines" cname="gtk_text_iter_backward_lines">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BackwardSearch" cname="gtk_text_iter_backward_search">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
          <parameter type="GtkTextSearchFlags" name="flags" />
          <parameter type="GtkTextIter*" name="match_start" />
          <parameter type="GtkTextIter*" name="match_end" />
          <parameter type="const-GtkTextIter*" name="limit" />
        </parameters>
      </method>
      <method name="BackwardSentenceStart" cname="gtk_text_iter_backward_sentence_start">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardSentenceStarts" cname="gtk_text_iter_backward_sentence_starts">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BackwardToTagToggle" cname="gtk_text_iter_backward_to_tag_toggle">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
      <method name="BackwardVisibleCursorPosition" cname="gtk_text_iter_backward_visible_cursor_position">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardVisibleCursorPositions" cname="gtk_text_iter_backward_visible_cursor_positions">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BackwardVisibleWordStart" cname="gtk_text_iter_backward_visible_word_start">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardVisibleWordStarts" cname="gtk_text_iter_backward_visible_word_starts">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BackwardWordStart" cname="gtk_text_iter_backward_word_start">
        <return-type type="gboolean" />
      </method>
      <method name="BackwardWordStarts" cname="gtk_text_iter_backward_word_starts">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="BeginsTag" cname="gtk_text_iter_begins_tag">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
      <method name="CanInsert" cname="gtk_text_iter_can_insert">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gboolean" name="default_editability" />
        </parameters>
      </method>
      <method name="Compare" cname="gtk_text_iter_compare">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="rhs" />
        </parameters>
      </method>
      <method name="Copy" cname="gtk_text_iter_copy">
        <return-type type="GtkTextIter*" owned="true" />
      </method>
      <method name="Editable" cname="gtk_text_iter_editable">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gboolean" name="default_setting" />
        </parameters>
      </method>
      <method name="EndsLine" cname="gtk_text_iter_ends_line">
        <return-type type="gboolean" />
      </method>
      <method name="EndsSentence" cname="gtk_text_iter_ends_sentence">
        <return-type type="gboolean" />
      </method>
      <method name="EndsTag" cname="gtk_text_iter_ends_tag">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
      <method name="EndsWord" cname="gtk_text_iter_ends_word">
        <return-type type="gboolean" />
      </method>
      <method name="Equal" cname="gtk_text_iter_equal">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="rhs" />
        </parameters>
      </method>
      <method name="ForwardChar" cname="gtk_text_iter_forward_char">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardChars" cname="gtk_text_iter_forward_chars">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="ForwardCursorPosition" cname="gtk_text_iter_forward_cursor_position">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardCursorPositions" cname="gtk_text_iter_forward_cursor_positions">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="ForwardFindChar" cname="gtk_text_iter_forward_find_char">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextCharPredicate" name="pred" />
          <parameter type="gpointer" name="user_data" />
          <parameter type="const-GtkTextIter*" name="limit" />
        </parameters>
      </method>
      <method name="ForwardLine" cname="gtk_text_iter_forward_line">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardLines" cname="gtk_text_iter_forward_lines">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="ForwardSearch" cname="gtk_text_iter_forward_search">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="str" />
          <parameter type="GtkTextSearchFlags" name="flags" />
          <parameter type="GtkTextIter*" name="match_start" />
          <parameter type="GtkTextIter*" name="match_end" />
          <parameter type="const-GtkTextIter*" name="limit" />
        </parameters>
      </method>
      <method name="ForwardSentenceEnd" cname="gtk_text_iter_forward_sentence_end">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardSentenceEnds" cname="gtk_text_iter_forward_sentence_ends">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="ForwardToEnd" cname="gtk_text_iter_forward_to_end">
        <return-type type="void" />
      </method>
      <method name="ForwardToLineEnd" cname="gtk_text_iter_forward_to_line_end">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardToTagToggle" cname="gtk_text_iter_forward_to_tag_toggle">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
      <method name="ForwardVisibleCursorPosition" cname="gtk_text_iter_forward_visible_cursor_position">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardVisibleCursorPositions" cname="gtk_text_iter_forward_visible_cursor_positions">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="ForwardVisibleWordEnd" cname="gtk_text_iter_forward_visible_word_end">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardVisibleWordEnds" cname="gtk_text_iter_forward_visible_word_ends">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="ForwardWordEnd" cname="gtk_text_iter_forward_word_end">
        <return-type type="gboolean" />
      </method>
      <method name="ForwardWordEnds" cname="gtk_text_iter_forward_word_ends">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gint" name="count" />
        </parameters>
      </method>
      <method name="Free" cname="gtk_text_iter_free">
        <return-type type="void" />
      </method>
      <method name="GetAttributes" cname="gtk_text_iter_get_attributes">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextAttributes*" name="values" />
        </parameters>
      </method>
      <method name="GetBuffer" cname="gtk_text_iter_get_buffer">
        <return-type type="GtkTextBuffer*" />
      </method>
      <method name="GetBytesInLine" cname="gtk_text_iter_get_bytes_in_line">
        <return-type type="gint" />
      </method>
      <method name="GetChar" cname="gtk_text_iter_get_char">
        <return-type type="gunichar" />
      </method>
      <method name="GetCharsInLine" cname="gtk_text_iter_get_chars_in_line">
        <return-type type="gint" />
      </method>
      <method name="GetChildAnchor" cname="gtk_text_iter_get_child_anchor">
        <return-type type="GtkTextChildAnchor*" />
      </method>
      <method name="GetLanguage" cname="gtk_text_iter_get_language">
        <return-type type="PangoLanguage*" />
      </method>
      <method name="GetLine" cname="gtk_text_iter_get_line">
        <return-type type="gint" />
      </method>
      <method name="GetLineIndex" cname="gtk_text_iter_get_line_index">
        <return-type type="gint" />
      </method>
      <method name="GetLineOffset" cname="gtk_text_iter_get_line_offset">
        <return-type type="gint" />
      </method>
      <method name="GetMarks" cname="gtk_text_iter_get_marks">
        <return-type type="GSList*" />
      </method>
      <method name="GetOffset" cname="gtk_text_iter_get_offset">
        <return-type type="gint" />
      </method>
      <method name="GetPixbuf" cname="gtk_text_iter_get_pixbuf">
        <return-type type="GdkPixbuf*" />
      </method>
      <method name="GetSlice" cname="gtk_text_iter_get_slice">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="GetTags" cname="gtk_text_iter_get_tags">
        <return-type type="GSList*" />
      </method>
      <method name="GetText" cname="gtk_text_iter_get_text">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="GetToggledTags" cname="gtk_text_iter_get_toggled_tags">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="gboolean" name="toggled_on" />
        </parameters>
      </method>
      <method name="GetType" cname="gtk_text_iter_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="GetVisibleLineIndex" cname="gtk_text_iter_get_visible_line_index">
        <return-type type="gint" />
      </method>
      <method name="GetVisibleLineOffset" cname="gtk_text_iter_get_visible_line_offset">
        <return-type type="gint" />
      </method>
      <method name="GetVisibleSlice" cname="gtk_text_iter_get_visible_slice">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="GetVisibleText" cname="gtk_text_iter_get_visible_text">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="HasTag" cname="gtk_text_iter_has_tag">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
      <method name="InRange" cname="gtk_text_iter_in_range">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-GtkTextIter*" name="start" />
          <parameter type="const-GtkTextIter*" name="end" />
        </parameters>
      </method>
      <method name="InsideSentence" cname="gtk_text_iter_inside_sentence">
        <return-type type="gboolean" />
      </method>
      <method name="InsideWord" cname="gtk_text_iter_inside_word">
        <return-type type="gboolean" />
      </method>
      <method name="IsCursorPosition" cname="gtk_text_iter_is_cursor_position">
        <return-type type="gboolean" />
      </method>
      <method name="IsEnd" cname="gtk_text_iter_is_end">
        <return-type type="gboolean" />
      </method>
      <method name="IsStart" cname="gtk_text_iter_is_start">
        <return-type type="gboolean" />
      </method>
      <method name="Order" cname="gtk_text_iter_order">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextIter*" name="second" />
        </parameters>
      </method>
      <method name="SetLine" cname="gtk_text_iter_set_line">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="line_number" />
        </parameters>
      </method>
      <method name="SetLineIndex" cname="gtk_text_iter_set_line_index">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="byte_on_line" />
        </parameters>
      </method>
      <method name="SetLineOffset" cname="gtk_text_iter_set_line_offset">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="char_on_line" />
        </parameters>
      </method>
      <method name="SetOffset" cname="gtk_text_iter_set_offset">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="char_offset" />
        </parameters>
      </method>
      <method name="SetVisibleLineIndex" cname="gtk_text_iter_set_visible_line_index">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="byte_on_line" />
        </parameters>
      </method>
      <method name="SetVisibleLineOffset" cname="gtk_text_iter_set_visible_line_offset">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="char_on_line" />
        </parameters>
      </method>
      <method name="StartsLine" cname="gtk_text_iter_starts_line">
        <return-type type="gboolean" />
      </method>
      <method name="StartsSentence" cname="gtk_text_iter_starts_sentence">
        <return-type type="gboolean" />
      </method>
      <method name="StartsWord" cname="gtk_text_iter_starts_word">
        <return-type type="gboolean" />
      </method>
      <method name="TogglesTag" cname="gtk_text_iter_toggles_tag">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTextTag*" name="tag" />
        </parameters>
      </method>
    </boxed>
    <struct name="TextLogAttrCache" cname="GtkTextLogAttrCache" opaque="true" />
    <struct name="TextPendingScroll" cname="GtkTextPendingScroll" opaque="true" />
    <struct name="TextWindow" cname="GtkTextWindow" opaque="true" />
    <struct name="ThemeEngine" cname="GtkThemeEngine" opaque="true" />
    <struct name="ToggleActionEntry" cname="GtkToggleActionEntry">
      <field name="Name" cname="name" type="const-gchar*" />
      <field name="StockId" cname="stock_id" type="const-gchar*" />
      <field name="Label" cname="label" type="const-gchar*" />
      <field name="Accelerator" cname="accelerator" type="const-gchar*" />
      <field name="Tooltip" cname="tooltip" type="const-gchar*" />
      <field name="Callback" cname="callback" type="GCallback" />
      <field name="IsActive" cname="is_active" type="gboolean" />
    </struct>
    <struct name="ToolbarChild" cname="GtkToolbarChild" deprecated="1">
      <field name="Type" cname="type" type="GtkToolbarChildType" />
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <field name="Icon" cname="icon" type="GtkWidget*" />
      <field name="Label" cname="label" type="GtkWidget*" />
    </struct>
    <struct name="TooltipsData" cname="GtkTooltipsData">
      <field name="Tooltips" cname="tooltips" type="GtkTooltips*" />
      <field name="Widget" cname="widget" type="GtkWidget*" />
      <field name="TipText" cname="tip_text" type="gchar*" />
      <field name="TipPrivate" cname="tip_private" type="gchar*" />
      <method name="Get" cname="gtk_tooltips_data_get" shared="true">
        <return-type type="GtkTooltipsData*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
    </struct>
    <boxed name="TreeIter" cname="GtkTreeIter">
      <field name="Stamp" cname="stamp" type="gint" />
      <field name="UserData" cname="user_data" type="gpointer" />
      <field name="UserData2" cname="user_data2" type="gpointer" />
      <field name="UserData3" cname="user_data3" type="gpointer" />
      <method name="Copy" cname="gtk_tree_iter_copy">
        <return-type type="GtkTreeIter*" owned="true" />
      </method>
      <method name="Free" cname="gtk_tree_iter_free">
        <return-type type="void" />
      </method>
      <method name="GetType" cname="gtk_tree_iter_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </boxed>
    <boxed name="TreePath" cname="GtkTreePath" opaque="true">
      <method name="AppendIndex" cname="gtk_tree_path_append_index">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="index_" />
        </parameters>
      </method>
      <method name="Compare" cname="gtk_tree_path_compare">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-GtkTreePath*" name="b" />
        </parameters>
      </method>
      <method name="Copy" cname="gtk_tree_path_copy">
        <return-type type="GtkTreePath*" owned="true" />
      </method>
      <method name="Down" cname="gtk_tree_path_down">
        <return-type type="void" />
      </method>
      <method name="Free" cname="gtk_tree_path_free">
        <return-type type="void" />
      </method>
      <method name="GetDepth" cname="gtk_tree_path_get_depth">
        <return-type type="gint" />
      </method>
      <method name="GetIndices" cname="gtk_tree_path_get_indices">
        <return-type type="gint*" />
      </method>
      <method name="GetType" cname="gtk_tree_path_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="IsAncestor" cname="gtk_tree_path_is_ancestor">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="descendant" />
        </parameters>
      </method>
      <method name="IsDescendant" cname="gtk_tree_path_is_descendant">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkTreePath*" name="ancestor" />
        </parameters>
      </method>
      <constructor cname="gtk_tree_path_new" />
      <constructor cname="gtk_tree_path_new_first" />
      <constructor cname="gtk_tree_path_new_from_indices">
        <parameters>
          <parameter type="gint" name="first_index" />
          <parameter ellipsis="true" />
        </parameters>
      </constructor>
      <constructor cname="gtk_tree_path_new_from_string">
        <parameters>
          <parameter type="const-gchar*" name="path" />
        </parameters>
      </constructor>
      <method name="Next" cname="gtk_tree_path_next">
        <return-type type="void" />
      </method>
      <method name="PrependIndex" cname="gtk_tree_path_prepend_index">
        <return-type type="void" />
        <parameters>
          <parameter type="gint" name="index_" />
        </parameters>
      </method>
      <method name="Prev" cname="gtk_tree_path_prev">
        <return-type type="gboolean" />
      </method>
      <method name="ToString" cname="gtk_tree_path_to_string">
        <return-type type="gchar*" />
      </method>
      <method name="Up" cname="gtk_tree_path_up">
        <return-type type="gboolean" />
      </method>
    </boxed>
    <boxed name="TreeRowReference" cname="GtkTreeRowReference" opaque="true">
      <method name="Copy" cname="gtk_tree_row_reference_copy">
        <return-type type="GtkTreeRowReference*" owned="true" />
      </method>
      <method name="Deleted" cname="gtk_tree_row_reference_deleted" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="proxy" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <method name="Free" cname="gtk_tree_row_reference_free">
        <return-type type="void" />
      </method>
      <method name="GetPath" cname="gtk_tree_row_reference_get_path">
        <return-type type="GtkTreePath*" />
      </method>
      <method name="GetType" cname="gtk_tree_row_reference_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="Inserted" cname="gtk_tree_row_reference_inserted" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="proxy" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
      <constructor cname="gtk_tree_row_reference_new">
        <parameters>
          <parameter type="GtkTreeModel*" name="model" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </constructor>
      <constructor cname="gtk_tree_row_reference_new_proxy">
        <parameters>
          <parameter type="GObject*" name="proxy" />
          <parameter type="GtkTreeModel*" name="model" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </constructor>
      <method name="Reordered" cname="gtk_tree_row_reference_reordered" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GObject*" name="proxy" />
          <parameter type="GtkTreePath*" name="path" />
          <parameter type="GtkTreeIter*" name="iter" />
          <parameter type="gint*" name="new_order" />
        </parameters>
      </method>
      <method name="Valid" cname="gtk_tree_row_reference_valid">
        <return-type type="gboolean" />
      </method>
    </boxed>
    <alias name="Type" cname="GtkType" type="GType" />
    <alias name="TypeClass" cname="GtkTypeClass" type="GTypeClass" />
    <struct name="TypeInfo" cname="GtkTypeInfo" deprecated="1">
      <field name="TypeName" cname="type_name" type="gchar*" />
      <field name="ObjectSize" cname="object_size" type="guint" />
      <field name="ClassSize" cname="class_size" type="guint" />
      <field name="ClassInitFunc" cname="class_init_func" type="GtkClassInitFunc" />
      <field name="ObjectInitFunc" cname="object_init_func" type="GtkObjectInitFunc" />
      <field name="Reserved1" cname="reserved_1" type="gpointer" />
      <field name="Reserved2" cname="reserved_2" type="gpointer" />
      <field name="BaseClassInitFunc" cname="base_class_init_func" type="GtkClassInitFunc" />
    </struct>
    <alias name="TypeObject" cname="GtkTypeObject" type="GTypeInstance" />
    <struct name="WidgetAuxInfo" cname="GtkWidgetAuxInfo">
      <field name="X" cname="x" type="gint" />
      <field name="Y" cname="y" type="gint" />
      <field name="Width" cname="width" type="gint" />
      <field name="Height" cname="height" type="gint" />
      <field name="XSet" cname="x_set" bits="1" type="guint" />
      <field name="YSet" cname="y_set" bits="1" type="guint" />
    </struct>
    <struct name="WidgetShapeInfo" cname="GtkWidgetShapeInfo">
      <field name="OffsetX" cname="offset_x" type="gint16" />
      <field name="OffsetY" cname="offset_y" type="gint16" />
      <field name="ShapeMask" cname="shape_mask" type="GdkBitmap*" />
    </struct>
    <struct name="WindowGeometryInfo" cname="GtkWindowGeometryInfo" opaque="true" />
    <class name="Accel" cname="GtkAccel_">
      <method name="GroupsActivate" cname="gtk_accel_groups_activate" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GObject*" name="object" />
          <parameter type="guint" name="accel_key" />
          <parameter type="GdkModifierType" name="accel_mods" />
        </parameters>
      </method>
      <method name="GroupsFromObject" cname="gtk_accel_groups_from_object" shared="true">
        <return-type type="GSList*" />
        <parameters>
          <parameter type="GObject*" name="object" />
        </parameters>
      </method>
    </class>
    <class name="Accelerator" cname="GtkAccelerator_">
      <method name="GetDefaultModMask" cname="gtk_accelerator_get_default_mod_mask" shared="true">
        <return-type type="guint" />
      </method>
      <method name="Name" cname="gtk_accelerator_name" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="guint" name="accelerator_key" />
          <parameter type="GdkModifierType" name="accelerator_mods" />
        </parameters>
      </method>
      <method name="Parse" cname="gtk_accelerator_parse" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="accelerator" />
          <parameter type="guint*" name="accelerator_key" />
          <parameter type="GdkModifierType*" name="accelerator_mods" />
        </parameters>
      </method>
      <method name="SetDefaultModMask" cname="gtk_accelerator_set_default_mod_mask" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkModifierType" name="default_mod_mask" />
        </parameters>
      </method>
      <method name="Valid" cname="gtk_accelerator_valid" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
        </parameters>
      </method>
    </class>
    <class name="Global" cname="GtkGlobal">
      <method name="BindingParseBinding" cname="gtk_binding_parse_binding" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GScanner*" name="scanner" />
        </parameters>
      </method>
      <method name="CellTypeGetType" cname="gtk_cell_type_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="CheckVersion" cname="gtk_check_version" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="guint" name="required_major" />
          <parameter type="guint" name="required_minor" />
          <parameter type="guint" name="required_micro" />
        </parameters>
      </method>
      <method name="ClistDragPosGetType" cname="gtk_clist_drag_pos_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="DebugFlagGetType" cname="gtk_debug_flag_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="DisableSetlocale" cname="gtk_disable_setlocale" shared="true">
        <return-type type="void" />
      </method>
      <method name="EventsPending" cname="gtk_events_pending" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="GetCurrentEvent" cname="gtk_get_current_event" shared="true">
        <return-type type="GdkEvent*" />
      </method>
      <method name="GetCurrentEventState" cname="gtk_get_current_event_state" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkModifierType*" name="state" />
        </parameters>
      </method>
      <method name="GetCurrentEventTime" cname="gtk_get_current_event_time" shared="true">
        <return-type type="guint32" />
      </method>
      <method name="GetDefaultLanguage" cname="gtk_get_default_language" shared="true">
        <return-type type="PangoLanguage*" />
      </method>
      <method name="GetEventWidget" cname="gtk_get_event_widget" shared="true">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="IdentifierGetType" cname="gtk_identifier_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="PaintArrow" cname="gtk_paint_arrow" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="GtkArrowType" name="arrow_type" />
          <parameter type="gboolean" name="fill" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintBox" cname="gtk_paint_box" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintBoxGap" cname="gtk_paint_box_gap" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
          <parameter type="gint" name="gap_x" />
          <parameter type="gint" name="gap_width" />
        </parameters>
      </method>
      <method name="PaintCheck" cname="gtk_paint_check" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintDiamond" cname="gtk_paint_diamond" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintExpander" cname="gtk_paint_expander" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="GtkExpanderStyle" name="expander_style" />
        </parameters>
      </method>
      <method name="PaintExtension" cname="gtk_paint_extension" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
        </parameters>
      </method>
      <method name="PaintFlatBox" cname="gtk_paint_flat_box" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintFocus" cname="gtk_paint_focus" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintHandle" cname="gtk_paint_handle" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="PaintHline" cname="gtk_paint_hline" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x1" />
          <parameter type="gint" name="x2" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="PaintLayout" cname="gtk_paint_layout" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="gboolean" name="use_text" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="PangoLayout*" name="layout" />
        </parameters>
      </method>
      <method name="PaintOption" cname="gtk_paint_option" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintPolygon" cname="gtk_paint_polygon" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="GdkPoint*" name="points" />
          <parameter type="gint" name="npoints" />
          <parameter type="gboolean" name="fill" />
        </parameters>
      </method>
      <method name="PaintResizeGrip" cname="gtk_paint_resize_grip" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="GdkWindowEdge" name="edge" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintShadow" cname="gtk_paint_shadow" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintShadowGap" cname="gtk_paint_shadow_gap" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
          <parameter type="gint" name="gap_x" />
          <parameter type="gint" name="gap_width" />
        </parameters>
      </method>
      <method name="PaintSlider" cname="gtk_paint_slider" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="PaintString" cname="gtk_paint_string" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
      <method name="PaintTab" cname="gtk_paint_tab" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="PaintVline" cname="gtk_paint_vline" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="detail" />
          <parameter type="gint" name="y1_" />
          <parameter type="gint" name="y2_" />
          <parameter type="gint" name="x" />
        </parameters>
      </method>
      <method name="PrivateFlagsGetType" cname="gtk_private_flags_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="PropagateEvent" cname="gtk_propagate_event" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="RgbToHsv" cname="gtk_rgb_to_hsv" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gdouble" name="r" />
          <parameter type="gdouble" name="g" />
          <parameter type="gdouble" name="b" />
          <parameter type="gdouble*" name="h" />
          <parameter type="gdouble*" name="s" />
          <parameter type="gdouble*" name="v" />
        </parameters>
      </method>
      <method name="SetLocale" cname="gtk_set_locale" shared="true">
        <return-type type="gchar*" />
      </method>
      <method name="TextLayoutDraw" cname="gtk_text_layout_draw" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkTextLayout*" name="layout" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="GdkGC*" name="cursor_gc" />
          <parameter type="gint" name="x_offset" />
          <parameter type="gint" name="y_offset" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GList**" name="widgets" />
        </parameters>
      </method>
    </class>
    <class name="Bindings" cname="GtkBindings_">
      <method name="Activate" cname="gtk_bindings_activate" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="guint" name="keyval" />
          <parameter type="GdkModifierType" name="modifiers" />
        </parameters>
      </method>
      <method name="ActivateEvent" cname="gtk_bindings_activate_event" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="GdkEventKey*" name="event" />
        </parameters>
      </method>
    </class>
    <class name="Ctree" cname="GtkCtree_">
      <method name="ExpanderStyleGetType" cname="gtk_ctree_expander_style_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="ExpansionTypeGetType" cname="gtk_ctree_expansion_type_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="LineStyleGetType" cname="gtk_ctree_line_style_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <method name="PosGetType" cname="gtk_ctree_pos_get_type" shared="true">
        <return-type type="GType" />
      </method>
    </class>
    <class name="Drag" cname="GtkDrag_">
      <method name="Begin" cname="gtk_drag_begin" shared="true">
        <return-type type="GdkDragContext*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkTargetList*" name="targets" />
          <parameter type="GdkDragAction" name="actions" />
          <parameter type="gint" name="button" />
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="CheckThreshold" cname="gtk_drag_check_threshold" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gint" name="start_x" />
          <parameter type="gint" name="start_y" />
          <parameter type="gint" name="current_x" />
          <parameter type="gint" name="current_y" />
        </parameters>
      </method>
      <method name="DestFindTarget" cname="gtk_drag_dest_find_target" shared="true">
        <return-type type="GdkAtom" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GtkTargetList*" name="target_list" />
        </parameters>
      </method>
      <method name="DestGetTargetList" cname="gtk_drag_dest_get_target_list" shared="true">
        <return-type type="GtkTargetList*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="DestSet" cname="gtk_drag_dest_set" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkDestDefaults" name="flags" />
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="gint" name="n_targets" />
          <parameter type="GdkDragAction" name="actions" />
        </parameters>
      </method>
      <method name="DestSetProxy" cname="gtk_drag_dest_set_proxy" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkWindow*" name="proxy_window" />
          <parameter type="GdkDragProtocol" name="protocol" />
          <parameter type="gboolean" name="use_coordinates" />
        </parameters>
      </method>
      <method name="DestSetTargetList" cname="gtk_drag_dest_set_target_list" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkTargetList*" name="target_list" />
        </parameters>
      </method>
      <method name="DestUnset" cname="gtk_drag_dest_unset" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="Finish" cname="gtk_drag_finish" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="gboolean" name="success" />
          <parameter type="gboolean" name="del" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="GetData" cname="gtk_drag_get_data" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GdkAtom" name="target" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="GetSourceWidget" cname="gtk_drag_get_source_widget" shared="true">
        <return-type type="GtkWidget*" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
        </parameters>
      </method>
      <method name="Highlight" cname="gtk_drag_highlight" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="SetDefaultIcon" cname="gtk_drag_set_default_icon" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
          <parameter type="gint" name="hot_x" />
          <parameter type="gint" name="hot_y" />
        </parameters>
      </method>
      <method name="SetIconDefault" cname="gtk_drag_set_icon_default" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
        </parameters>
      </method>
      <method name="SetIconPixbuf" cname="gtk_drag_set_icon_pixbuf" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
          <parameter type="gint" name="hot_x" />
          <parameter type="gint" name="hot_y" />
        </parameters>
      </method>
      <method name="SetIconPixmap" cname="gtk_drag_set_icon_pixmap" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
          <parameter type="gint" name="hot_x" />
          <parameter type="gint" name="hot_y" />
        </parameters>
      </method>
      <method name="SetIconStock" cname="gtk_drag_set_icon_stock" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="gint" name="hot_x" />
          <parameter type="gint" name="hot_y" />
        </parameters>
      </method>
      <method name="SetIconWidget" cname="gtk_drag_set_icon_widget" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkDragContext*" name="context" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="gint" name="hot_x" />
          <parameter type="gint" name="hot_y" />
        </parameters>
      </method>
      <method name="SourceGetTargetList" cname="gtk_drag_source_get_target_list" shared="true">
        <return-type type="GtkTargetList*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="SourceSet" cname="gtk_drag_source_set" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkModifierType" name="start_button_mask" />
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="gint" name="n_targets" />
          <parameter type="GdkDragAction" name="actions" />
        </parameters>
      </method>
      <method name="SourceSetIcon" cname="gtk_drag_source_set_icon" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkPixmap*" name="pixmap" />
          <parameter type="GdkBitmap*" name="mask" />
        </parameters>
      </method>
      <method name="SourceSetIconPixbuf" cname="gtk_drag_source_set_icon_pixbuf" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkPixbuf*" name="pixbuf" />
        </parameters>
      </method>
      <method name="SourceSetIconStock" cname="gtk_drag_source_set_icon_stock" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="const-gchar*" name="stock_id" />
        </parameters>
      </method>
      <method name="SourceSetTargetList" cname="gtk_drag_source_set_target_list" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GtkTargetList*" name="target_list" />
        </parameters>
      </method>
      <method name="SourceUnset" cname="gtk_drag_source_unset" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="Unhighlight" cname="gtk_drag_unhighlight" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
    </class>
    <class name="Draw" cname="GtkDraw_">
      <method name="Arrow" cname="gtk_draw_arrow" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GtkArrowType" name="arrow_type" />
          <parameter type="gboolean" name="fill" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Box" cname="gtk_draw_box" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="BoxGap" cname="gtk_draw_box_gap" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
          <parameter type="gint" name="gap_x" />
          <parameter type="gint" name="gap_width" />
        </parameters>
      </method>
      <method name="Check" cname="gtk_draw_check" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Diamond" cname="gtk_draw_diamond" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Expander" cname="gtk_draw_expander" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="GtkExpanderStyle" name="expander_style" />
        </parameters>
      </method>
      <method name="Extension" cname="gtk_draw_extension" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
        </parameters>
      </method>
      <method name="FlatBox" cname="gtk_draw_flat_box" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Focus" cname="gtk_draw_focus" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Handle" cname="gtk_draw_handle" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="Hline" cname="gtk_draw_hline" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="gint" name="x1" />
          <parameter type="gint" name="x2" />
          <parameter type="gint" name="y" />
        </parameters>
      </method>
      <method name="InsertionCursor" cname="gtk_draw_insertion_cursor" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkDrawable*" name="drawable" />
          <parameter type="GdkRectangle*" name="area" />
          <parameter type="GdkRectangle*" name="location" />
          <parameter type="gboolean" name="is_primary" />
          <parameter type="GtkTextDirection" name="direction" />
          <parameter type="gboolean" name="draw_arrow" />
        </parameters>
      </method>
      <method name="Layout" cname="gtk_draw_layout" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="gboolean" name="use_text" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="PangoLayout*" name="layout" />
        </parameters>
      </method>
      <method name="Option" cname="gtk_draw_option" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Polygon" cname="gtk_draw_polygon" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="GdkPoint*" name="points" />
          <parameter type="gint" name="npoints" />
          <parameter type="gboolean" name="fill" />
        </parameters>
      </method>
      <method name="ResizeGrip" cname="gtk_draw_resize_grip" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GdkWindowEdge" name="edge" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Shadow" cname="gtk_draw_shadow" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="ShadowGap" cname="gtk_draw_shadow_gap" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkPositionType" name="gap_side" />
          <parameter type="gint" name="gap_x" />
          <parameter type="gint" name="gap_width" />
        </parameters>
      </method>
      <method name="Slider" cname="gtk_draw_slider" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
          <parameter type="GtkOrientation" name="orientation" />
        </parameters>
      </method>
      <method name="String" cname="gtk_draw_string" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="const-gchar*" name="string" />
        </parameters>
      </method>
      <method name="Tab" cname="gtk_draw_tab" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="GtkShadowType" name="shadow_type" />
          <parameter type="gint" name="x" />
          <parameter type="gint" name="y" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="Vline" cname="gtk_draw_vline" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkStyle*" name="style" />
          <parameter type="GdkWindow*" name="window" />
          <parameter type="GtkStateType" name="state_type" />
          <parameter type="gint" name="y1_" />
          <parameter type="gint" name="y2_" />
          <parameter type="gint" name="x" />
        </parameters>
      </method>
    </class>
    <class name="Gc" cname="GtkGc_">
      <method name="Get" cname="gtk_gc_get" shared="true">
        <return-type type="GdkGC*" />
        <parameters>
          <parameter type="gint" name="depth" />
          <parameter type="GdkColormap*" name="colormap" />
          <parameter type="GdkGCValues*" name="values" />
          <parameter type="GdkGCValuesMask" name="values_mask" />
        </parameters>
      </method>
      <method name="Release" cname="gtk_gc_release" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkGC*" name="gc" />
        </parameters>
      </method>
    </class>
    <class name="Grab" cname="GtkGrab_">
      <method name="Add" cname="gtk_grab_add" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="GetCurrent" cname="gtk_grab_get_current" shared="true">
        <return-type type="GtkWidget*" />
      </method>
      <method name="Remove" cname="gtk_grab_remove" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
    </class>
    <class name="Icon" cname="GtkIcon_">
      <method name="SizeFromName" cname="gtk_icon_size_from_name" shared="true">
        <return-type type="GtkIconSize" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="SizeGetName" cname="gtk_icon_size_get_name" shared="true">
        <return-type type="const-gchar*" />
        <parameters>
          <parameter type="GtkIconSize" name="size" />
        </parameters>
      </method>
      <method name="SizeLookup" cname="gtk_icon_size_lookup" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkIconSize" name="size" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="SizeLookupForSettings" cname="gtk_icon_size_lookup_for_settings" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkSettings*" name="settings" />
          <parameter type="GtkIconSize" name="size" />
          <parameter type="gint*" name="width" />
          <parameter type="gint*" name="height" />
        </parameters>
      </method>
      <method name="SizeRegister" cname="gtk_icon_size_register" shared="true">
        <return-type type="GtkIconSize" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="gint" name="width" />
          <parameter type="gint" name="height" />
        </parameters>
      </method>
      <method name="SizeRegisterAlias" cname="gtk_icon_size_register_alias" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="alias" />
          <parameter type="GtkIconSize" name="target" />
        </parameters>
      </method>
    </class>
    <class name="Idle" cname="GtkIdle_">
      <method name="Add" cname="gtk_idle_add" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GtkFunction" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AddFull" cname="gtk_idle_add_full" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="priority" />
          <parameter type="GtkFunction" name="function" />
          <parameter type="GtkCallbackMarshal" name="marshal" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="AddPriority" cname="gtk_idle_add_priority" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="priority" />
          <parameter type="GtkFunction" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_idle_remove" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="idle_handler_id" />
        </parameters>
      </method>
      <method name="RemoveByData" cname="gtk_idle_remove_by_data" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
    </class>
    <class name="Init" cname="GtkInit_">
      <method name="AbiCheck" cname="gtk_init_abi_check" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="int*" name="argc" />
          <parameter type="char***" name="argv" />
          <parameter type="int" name="num_checks" />
          <parameter type="size_t" name="sizeof_GtkWindow" />
          <parameter type="size_t" name="sizeof_GtkBox" />
        </parameters>
      </method>
      <method name="Add" cname="gtk_init_add" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkFunction" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="Check" cname="gtk_init_check" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="int*" name="argc" />
          <parameter type="char***" name="argv" />
        </parameters>
      </method>
      <method name="CheckAbiCheck" cname="gtk_init_check_abi_check" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="int*" name="argc" />
          <parameter type="char***" name="argv" />
          <parameter type="int" name="num_checks" />
          <parameter type="size_t" name="sizeof_GtkWindow" />
          <parameter type="size_t" name="sizeof_GtkBox" />
        </parameters>
      </method>
    </class>
    <class name="Input" cname="GtkInput_">
      <method name="AddFull" cname="gtk_input_add_full" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="gint" name="source" />
          <parameter type="GdkInputCondition" name="condition" />
          <parameter type="GdkInputFunction" name="function" />
          <parameter type="GtkCallbackMarshal" name="marshal" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_input_remove" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="input_handler_id" />
        </parameters>
      </method>
    </class>
    <class name="Key" cname="GtkKey_">
      <method name="SnooperInstall" cname="gtk_key_snooper_install" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GtkKeySnoopFunc" name="snooper" />
          <parameter type="gpointer" name="func_data" />
        </parameters>
      </method>
      <method name="SnooperRemove" cname="gtk_key_snooper_remove" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="snooper_handler_id" />
        </parameters>
      </method>
    </class>
    <class name="Main" cname="GtkMain_">
      <method name="DoEvent" cname="gtk_main_do_event" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GdkEvent*" name="event" />
        </parameters>
      </method>
      <method name="Iteration" cname="gtk_main_iteration" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="IterationDo" cname="gtk_main_iteration_do" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="gboolean" name="blocking" />
        </parameters>
      </method>
      <method name="Level" cname="gtk_main_level" shared="true">
        <return-type type="guint" />
      </method>
      <method name="Quit" cname="gtk_main_quit" shared="true">
        <return-type type="void" />
      </method>
    </class>
    <class name="Quit" cname="GtkQuit_">
      <method name="Add" cname="gtk_quit_add" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="main_level" />
          <parameter type="GtkFunction" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AddDestroy" cname="gtk_quit_add_destroy" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="main_level" />
          <parameter type="GtkObject*" name="object" />
        </parameters>
      </method>
      <method name="AddFull" cname="gtk_quit_add_full" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint" name="main_level" />
          <parameter type="GtkFunction" name="function" />
          <parameter type="GtkCallbackMarshal" name="marshal" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_quit_remove" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="quit_handler_id" />
        </parameters>
      </method>
      <method name="RemoveByData" cname="gtk_quit_remove_by_data" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
    </class>
    <class name="Rc" cname="GtkRc_">
      <method name="AddClassStyle" cname="gtk_rc_add_class_style" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRcStyle*" name="rc_style" />
          <parameter type="const-gchar*" name="pattern" />
        </parameters>
      </method>
      <method name="AddDefaultFile" cname="gtk_rc_add_default_file" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="AddWidgetClassStyle" cname="gtk_rc_add_widget_class_style" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRcStyle*" name="rc_style" />
          <parameter type="const-gchar*" name="pattern" />
        </parameters>
      </method>
      <method name="AddWidgetNameStyle" cname="gtk_rc_add_widget_name_style" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkRcStyle*" name="rc_style" />
          <parameter type="const-gchar*" name="pattern" />
        </parameters>
      </method>
      <method name="FindModuleInPath" cname="gtk_rc_find_module_in_path" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="const-gchar*" name="module_file" />
        </parameters>
      </method>
      <method name="FindPixmapInPath" cname="gtk_rc_find_pixmap_in_path" shared="true">
        <return-type type="gchar*" />
        <parameters>
          <parameter type="GtkSettings*" name="settings" />
          <parameter type="GScanner*" name="scanner" />
          <parameter type="const-gchar*" name="pixmap_file" />
        </parameters>
      </method>
      <method name="GetDefaultFiles" cname="gtk_rc_get_default_files" shared="true">
        <return-type type="gchar**" />
      </method>
      <method name="GetImModuleFile" cname="gtk_rc_get_im_module_file" shared="true">
        <return-type type="gchar*" />
      </method>
      <method name="GetImModulePath" cname="gtk_rc_get_im_module_path" shared="true">
        <return-type type="gchar*" />
      </method>
      <method name="GetModuleDir" cname="gtk_rc_get_module_dir" shared="true">
        <return-type type="gchar*" />
      </method>
      <method name="GetStyle" cname="gtk_rc_get_style" shared="true">
        <return-type type="GtkStyle*" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
      <method name="GetStyleByPaths" cname="gtk_rc_get_style_by_paths" shared="true">
        <return-type type="GtkStyle*" />
        <parameters>
          <parameter type="GtkSettings*" name="settings" />
          <parameter type="const-char*" name="widget_path" />
          <parameter type="const-char*" name="class_path" />
          <parameter type="GType" name="type" />
        </parameters>
      </method>
      <method name="GetThemeDir" cname="gtk_rc_get_theme_dir" shared="true">
        <return-type type="gchar*" />
      </method>
      <method name="Parse" cname="gtk_rc_parse" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="filename" />
        </parameters>
      </method>
      <method name="ParseColor" cname="gtk_rc_parse_color" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GScanner*" name="scanner" />
          <parameter type="GdkColor*" name="color" />
        </parameters>
      </method>
      <method name="ParsePriority" cname="gtk_rc_parse_priority" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GScanner*" name="scanner" />
          <parameter type="GtkPathPriorityType*" name="priority" />
        </parameters>
      </method>
      <method name="ParseState" cname="gtk_rc_parse_state" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="GScanner*" name="scanner" />
          <parameter type="GtkStateType*" name="state" />
        </parameters>
      </method>
      <method name="ParseString" cname="gtk_rc_parse_string" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="rc_string" />
        </parameters>
      </method>
      <method name="ReparseAll" cname="gtk_rc_reparse_all" shared="true">
        <return-type type="gboolean" />
      </method>
      <method name="ReparseAllForSettings" cname="gtk_rc_reparse_all_for_settings" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkSettings*" name="settings" />
          <parameter type="gboolean" name="force_load" />
        </parameters>
      </method>
      <method name="ResetStyles" cname="gtk_rc_reset_styles" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkSettings*" name="settings" />
        </parameters>
      </method>
      <method name="ScannerNew" cname="gtk_rc_scanner_new" shared="true">
        <return-type type="GScanner*" />
      </method>
      <method name="SetDefaultFiles" cname="gtk_rc_set_default_files" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="gchar**" name="filenames" />
        </parameters>
      </method>
    </class>
    <class name="Selection" cname="GtkSelection_">
      <method name="AddTarget" cname="gtk_selection_add_target" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="GdkAtom" name="target" />
          <parameter type="guint" name="info" />
        </parameters>
      </method>
      <method name="AddTargets" cname="gtk_selection_add_targets" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="const-GtkTargetEntry*" name="targets" />
          <parameter type="guint" name="ntargets" />
        </parameters>
      </method>
      <method name="Clear" cname="gtk_selection_clear" deprecated="1" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkEventSelection*" name="event" />
        </parameters>
      </method>
      <method name="ClearTargets" cname="gtk_selection_clear_targets" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkAtom" name="selection" />
        </parameters>
      </method>
      <method name="Convert" cname="gtk_selection_convert" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="GdkAtom" name="target" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="OwnerSet" cname="gtk_selection_owner_set" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="OwnerSetForDisplay" cname="gtk_selection_owner_set_for_display" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GdkDisplay*" name="display" />
          <parameter type="GtkWidget*" name="widget" />
          <parameter type="GdkAtom" name="selection" />
          <parameter type="guint32" name="time_" />
        </parameters>
      </method>
      <method name="RemoveAll" cname="gtk_selection_remove_all" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkWidget*" name="widget" />
        </parameters>
      </method>
    </class>
    <class name="Signal" cname="GtkSignal_">
      <method name="CompatMatched" cname="gtk_signal_compat_matched" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="GtkSignalFunc" name="func" />
          <parameter type="gpointer" name="data" />
          <parameter type="GSignalMatchType" name="match" />
          <parameter type="guint" name="action" />
        </parameters>
      </method>
      <method name="ConnectFull" cname="gtk_signal_connect_full" deprecated="1" shared="true">
        <return-type type="gulong" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="GtkSignalFunc" name="func" />
          <parameter type="GtkCallbackMarshal" name="unsupported" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy_func" />
          <parameter type="gint" name="object_signal" />
          <parameter type="gint" name="after" />
        </parameters>
      </method>
      <method name="ConnectObjectWhileAlive" cname="gtk_signal_connect_object_while_alive" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="GtkSignalFunc" name="func" />
          <parameter type="GtkObject*" name="alive_object" />
        </parameters>
      </method>
      <method name="ConnectWhileAlive" cname="gtk_signal_connect_while_alive" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="GtkSignalFunc" name="func" />
          <parameter type="gpointer" name="func_data" />
          <parameter type="GtkObject*" name="alive_object" />
        </parameters>
      </method>
      <method name="Emit" cname="gtk_signal_emit" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="guint" name="signal_id" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="EmitByName" cname="gtk_signal_emit_by_name" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="const-gchar*" name="name" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="EmitStopByName" cname="gtk_signal_emit_stop_by_name" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="const-gchar*" name="name" />
        </parameters>
      </method>
      <method name="Emitv" cname="gtk_signal_emitv" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="guint" name="signal_id" />
          <parameter type="GtkArg*" name="args" />
        </parameters>
      </method>
      <method name="EmitvByName" cname="gtk_signal_emitv_by_name" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkObject*" name="object" />
          <parameter type="const-gchar*" name="name" />
          <parameter type="GtkArg*" name="args" />
        </parameters>
      </method>
      <method name="New" cname="gtk_signal_new" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GtkSignalRunType" name="signal_flags" />
          <parameter type="GtkType" name="object_type" />
          <parameter type="guint" name="function_offset" />
          <parameter type="GtkSignalMarshaller" name="marshaller" />
          <parameter type="GtkType" name="return_val" />
          <parameter type="guint" name="n_args" />
          <parameter ellipsis="true" />
        </parameters>
      </method>
      <method name="Newv" cname="gtk_signal_newv" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="const-gchar*" name="name" />
          <parameter type="GtkSignalRunType" name="signal_flags" />
          <parameter type="GtkType" name="object_type" />
          <parameter type="guint" name="function_offset" />
          <parameter type="GtkSignalMarshaller" name="marshaller" />
          <parameter type="GtkType" name="return_val" />
          <parameter type="guint" name="n_args" />
          <parameter type="GtkType*" name="args" />
        </parameters>
      </method>
    </class>
    <class name="Stock" cname="GtkStock_">
      <method name="Add" cname="gtk_stock_add" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkStockItem*" name="items" />
          <parameter type="guint" name="n_items" />
        </parameters>
      </method>
      <method name="AddStatic" cname="gtk_stock_add_static" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="const-GtkStockItem*" name="items" />
          <parameter type="guint" name="n_items" />
        </parameters>
      </method>
      <method name="ListIds" cname="gtk_stock_list_ids" shared="true">
        <return-type type="GSList*" />
      </method>
      <method name="Lookup" cname="gtk_stock_lookup" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="const-gchar*" name="stock_id" />
          <parameter type="GtkStockItem*" name="item" />
        </parameters>
      </method>
    </class>
    <class name="Timeout" cname="GtkTimeout_">
      <method name="Add" cname="gtk_timeout_add" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint32" name="interval" />
          <parameter type="GtkFunction" name="function" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </method>
      <method name="AddFull" cname="gtk_timeout_add_full" deprecated="1" shared="true">
        <return-type type="guint" />
        <parameters>
          <parameter type="guint32" name="interval" />
          <parameter type="GtkFunction" name="function" />
          <parameter type="GtkCallbackMarshal" name="marshal" />
          <parameter type="gpointer" name="data" />
          <parameter type="GtkDestroyNotify" name="destroy" />
        </parameters>
      </method>
      <method name="Remove" cname="gtk_timeout_remove" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="guint" name="timeout_handler_id" />
        </parameters>
      </method>
    </class>
    <class name="Tree" cname="GtkTree_">
      <method name="GetRowDragData" cname="gtk_tree_get_row_drag_data" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkSelectionData*" name="selection_data" />
          <parameter type="GtkTreeModel**" name="tree_model" />
          <parameter type="GtkTreePath**" name="path" />
        </parameters>
      </method>
      <method name="SetRowDragData" cname="gtk_tree_set_row_drag_data" shared="true">
        <return-type type="gboolean" />
        <parameters>
          <parameter type="GtkSelectionData*" name="selection_data" />
          <parameter type="GtkTreeModel*" name="tree_model" />
          <parameter type="GtkTreePath*" name="path" />
        </parameters>
      </method>
    </class>
    <class name="Type" cname="GtkType_">
      <method name="Class" cname="gtk_type_class" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="GtkType" name="type" />
        </parameters>
      </method>
      <method name="EnumFindValue" cname="gtk_type_enum_find_value" deprecated="1" shared="true">
        <return-type type="GtkEnumValue*" />
        <parameters>
          <parameter type="GtkType" name="enum_type" />
          <parameter type="const-gchar*" name="value_name" />
        </parameters>
      </method>
      <method name="EnumGetValues" cname="gtk_type_enum_get_values" deprecated="1" shared="true">
        <return-type type="GtkEnumValue*" />
        <parameters>
          <parameter type="GtkType" name="enum_type" />
        </parameters>
      </method>
      <method name="FlagsFindValue" cname="gtk_type_flags_find_value" deprecated="1" shared="true">
        <return-type type="GtkFlagValue*" />
        <parameters>
          <parameter type="GtkType" name="flags_type" />
          <parameter type="const-gchar*" name="value_name" />
        </parameters>
      </method>
      <method name="FlagsGetValues" cname="gtk_type_flags_get_values" deprecated="1" shared="true">
        <return-type type="GtkFlagValue*" />
        <parameters>
          <parameter type="GtkType" name="flags_type" />
        </parameters>
      </method>
      <method name="Init" cname="gtk_type_init" deprecated="1" shared="true">
        <return-type type="void" />
        <parameters>
          <parameter type="GTypeDebugFlags" name="debug_flags" />
        </parameters>
      </method>
      <method name="New" cname="gtk_type_new" deprecated="1" shared="true">
        <return-type type="gpointer" />
        <parameters>
          <parameter type="GtkType" name="type" />
        </parameters>
      </method>
      <method name="Unique" cname="gtk_type_unique" deprecated="1" shared="true">
        <return-type type="GtkType" />
        <parameters>
          <parameter type="GtkType" name="parent_type" />
          <parameter type="const-GtkTypeInfo*" name="gtkinfo" />
        </parameters>
      </method>
    </class>
    <object name="Stock" cname="GtkStock">
      <static-string cname="GTK_STOCK_ADD" name="Add" value="gtk-add" />
      <static-string cname="GTK_STOCK_APPLY" name="Apply" value="gtk-apply" />
      <static-string cname="GTK_STOCK_BOLD" name="Bold" value="gtk-bold" />
      <static-string cname="GTK_STOCK_CANCEL" name="Cancel" value="gtk-cancel" />
      <static-string cname="GTK_STOCK_CDROM" name="Cdrom" value="gtk-cdrom" />
      <static-string cname="GTK_STOCK_CLEAR" name="Clear" value="gtk-clear" />
      <static-string cname="GTK_STOCK_CLOSE" name="Close" value="gtk-close" />
      <static-string cname="GTK_STOCK_COLOR_PICKER" name="ColorPicker" value="gtk-color-picker" />
      <static-string cname="GTK_STOCK_CONVERT" name="Convert" value="gtk-convert" />
      <static-string cname="GTK_STOCK_COPY" name="Copy" value="gtk-copy" />
      <static-string cname="GTK_STOCK_CUT" name="Cut" value="gtk-cut" />
      <static-string cname="GTK_STOCK_DELETE" name="Delete" value="gtk-delete" />
      <static-string cname="GTK_STOCK_DIALOG_ERROR" name="DialogError" value="gtk-dialog-error" />
      <static-string cname="GTK_STOCK_DIALOG_INFO" name="DialogInfo" value="gtk-dialog-info" />
      <static-string cname="GTK_STOCK_DIALOG_QUESTION" name="DialogQuestion" value="gtk-dialog-question" />
      <static-string cname="GTK_STOCK_DIALOG_WARNING" name="DialogWarning" value="gtk-dialog-warning" />
      <static-string cname="GTK_STOCK_DND" name="Dnd" value="gtk-dnd" />
      <static-string cname="GTK_STOCK_DND_MULTIPLE" name="DndMultiple" value="gtk-dnd-multiple" />
      <static-string cname="GTK_STOCK_EXECUTE" name="Execute" value="gtk-execute" />
      <static-string cname="GTK_STOCK_FIND" name="Find" value="gtk-find" />
      <static-string cname="GTK_STOCK_FIND_AND_REPLACE" name="FindAndReplace" value="gtk-find-and-replace" />
      <static-string cname="GTK_STOCK_FLOPPY" name="Floppy" value="gtk-floppy" />
      <static-string cname="GTK_STOCK_GOTO_BOTTOM" name="GotoBottom" value="gtk-goto-bottom" />
      <static-string cname="GTK_STOCK_GOTO_FIRST" name="GotoFirst" value="gtk-goto-first" />
      <static-string cname="GTK_STOCK_GOTO_LAST" name="GotoLast" value="gtk-goto-last" />
      <static-string cname="GTK_STOCK_GOTO_TOP" name="GotoTop" value="gtk-goto-top" />
      <static-string cname="GTK_STOCK_GO_BACK" name="GoBack" value="gtk-go-back" />
      <static-string cname="GTK_STOCK_GO_DOWN" name="GoDown" value="gtk-go-down" />
      <static-string cname="GTK_STOCK_GO_FORWARD" name="GoForward" value="gtk-go-forward" />
      <static-string cname="GTK_STOCK_GO_UP" name="GoUp" value="gtk-go-up" />
      <static-string cname="GTK_STOCK_HARDDISK" name="Harddisk" value="gtk-harddisk" />
      <static-string cname="GTK_STOCK_HELP" name="Help" value="gtk-help" />
      <static-string cname="GTK_STOCK_HOME" name="Home" value="gtk-home" />
      <static-string cname="GTK_STOCK_INDENT" name="Indent" value="gtk-indent" />
      <static-string cname="GTK_STOCK_INDEX" name="Index" value="gtk-index" />
      <static-string cname="GTK_STOCK_ITALIC" name="Italic" value="gtk-italic" />
      <static-string cname="GTK_STOCK_JUMP_TO" name="JumpTo" value="gtk-jump-to" />
      <static-string cname="GTK_STOCK_JUSTIFY_CENTER" name="JustifyCenter" value="gtk-justify-center" />
      <static-string cname="GTK_STOCK_JUSTIFY_FILL" name="JustifyFill" value="gtk-justify-fill" />
      <static-string cname="GTK_STOCK_JUSTIFY_LEFT" name="JustifyLeft" value="gtk-justify-left" />
      <static-string cname="GTK_STOCK_JUSTIFY_RIGHT" name="JustifyRight" value="gtk-justify-right" />
      <static-string cname="GTK_STOCK_MISSING_IMAGE" name="MissingImage" value="gtk-missing-image" />
      <static-string cname="GTK_STOCK_NETWORK" name="Network" value="gtk-network" />
      <static-string cname="GTK_STOCK_NEW" name="New" value="gtk-new" />
      <static-string cname="GTK_STOCK_NO" name="No" value="gtk-no" />
      <static-string cname="GTK_STOCK_OK" name="Ok" value="gtk-ok" />
      <static-string cname="GTK_STOCK_OPEN" name="Open" value="gtk-open" />
      <static-string cname="GTK_STOCK_PASTE" name="Paste" value="gtk-paste" />
      <static-string cname="GTK_STOCK_PREFERENCES" name="Preferences" value="gtk-preferences" />
      <static-string cname="GTK_STOCK_PRINT" name="Print" value="gtk-print" />
      <static-string cname="GTK_STOCK_PRINT_PREVIEW" name="PrintPreview" value="gtk-print-preview" />
      <static-string cname="GTK_STOCK_PROPERTIES" name="Properties" value="gtk-properties" />
      <static-string cname="GTK_STOCK_QUIT" name="Quit" value="gtk-quit" />
      <static-string cname="GTK_STOCK_REDO" name="Redo" value="gtk-redo" />
      <static-string cname="GTK_STOCK_REFRESH" name="Refresh" value="gtk-refresh" />
      <static-string cname="GTK_STOCK_REMOVE" name="Remove" value="gtk-remove" />
      <static-string cname="GTK_STOCK_REVERT_TO_SAVED" name="RevertToSaved" value="gtk-revert-to-saved" />
      <static-string cname="GTK_STOCK_SAVE" name="Save" value="gtk-save" />
      <static-string cname="GTK_STOCK_SAVE_AS" name="SaveAs" value="gtk-save-as" />
      <static-string cname="GTK_STOCK_SELECT_COLOR" name="SelectColor" value="gtk-select-color" />
      <static-string cname="GTK_STOCK_SELECT_FONT" name="SelectFont" value="gtk-select-font" />
      <static-string cname="GTK_STOCK_SORT_ASCENDING" name="SortAscending" value="gtk-sort-ascending" />
      <static-string cname="GTK_STOCK_SORT_DESCENDING" name="SortDescending" value="gtk-sort-descending" />
      <static-string cname="GTK_STOCK_SPELL_CHECK" name="SpellCheck" value="gtk-spell-check" />
      <static-string cname="GTK_STOCK_STOP" name="Stop" value="gtk-stop" />
      <static-string cname="GTK_STOCK_STRIKETHROUGH" name="Strikethrough" value="gtk-strikethrough" />
      <static-string cname="GTK_STOCK_UNDELETE" name="Undelete" value="gtk-undelete" />
      <static-string cname="GTK_STOCK_UNDERLINE" name="Underline" value="gtk-underline" />
      <static-string cname="GTK_STOCK_UNDO" name="Undo" value="gtk-undo" />
      <static-string cname="GTK_STOCK_UNINDENT" name="Unindent" value="gtk-unindent" />
      <static-string cname="GTK_STOCK_YES" name="Yes" value="gtk-yes" />
      <static-string cname="GTK_STOCK_ZOOM_100" name="Zoom100" value="gtk-zoom-100" />
      <static-string cname="GTK_STOCK_ZOOM_FIT" name="ZoomFit" value="gtk-zoom-fit" />
      <static-string cname="GTK_STOCK_ZOOM_IN" name="ZoomIn" value="gtk-zoom-in" />
      <static-string cname="GTK_STOCK_ZOOM_OUT" name="ZoomOut" value="gtk-zoom-out" />
    </object>
  </namespace>
</api>