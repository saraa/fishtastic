<Type Name="FileSelection" FullName="Gtk.FileSelection">
  <TypeSignature Language="C#" Value="public class FileSelection : Gtk.Dialog, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="Lee Mallabone" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Creates a new dialog for the user to select one or more files, directories, or cancel.</summary>
    <remarks>
      <para>FileSelection should be used to retrieve file or directory names from the user. It will create a new dialog window containing a directory list, and a file list corresponding to the current working directory.
    </para>
      <para>
    The filesystem can be navigated using the directory list or the drop-down history menu. Alternatively, the TAB key can be used to navigate using filename completion - common in text based editors such as emacs and jed.</para>
      <para>
    Simple file operations; create directory, delete file, and rename file, are available from buttons at the top of the dialog.</para>
      <para>
    The functionality of the FileSelection can be extended by using the available accessors to the buttons and drop downs.
    </para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Dialog</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (string pattern);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Restrict the visible files and directories to those that match the given <paramref name="pattern" />.</summary>
        <param name="pattern">A simple wildcard pattern such as '*.txt'.</param>
        <remarks>
          <para>This method attempts to match <paramref name="pattern" /> to a valid filenames or subdirectories in the current directory. If a match can be made, the matched filename will appear in the text entry field of the file selection dialog. If a partial match can be made, the "Files" list will contain those file names which have been partially matched, and the "Folders" list will show those directories with a partial match.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFileopButtons">
      <MemberSignature Language="C#" Value="public void ShowFileopButtons ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ensures that the file operation buttons are visible.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="HideFileopButtons">
      <MemberSignature Language="C#" Value="public void HideFileopButtons ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ensures that the file operation buttons are hidden.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected virtual void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSelection (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of FileSelection, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSelection (string title);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>The main way to construct a new file selector.</summary>
        <param name="title">A title that will appear in the window's title bar.</param>
        <returns>A new FileSelection</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileSelection ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Internal constructor</summary>
        <returns />
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The GLib Type for Gtk.FileSelection</summary>
        <returns>The GLib Type for the Gtk.FileSelection class.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ActionArea">
      <MemberSignature Language="C#" Value="public Gtk.HButtonBox ActionArea { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.HButtonBox</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gtk.HButtonBox'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ButtonArea">
      <MemberSignature Language="C#" Value="public Gtk.HButtonBox ButtonArea { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.HButtonBox</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gtk.HButtonBox'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileopRenFile">
      <MemberSignature Language="C#" Value="public Gtk.Button FileopRenFile { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Button</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The 'rename file' button of this file selector.</summary>
        <returns />
        <remarks>
          <para>This button may or may not be visible, see <see cref="M:Gtk.FileSelection.ShowFileopButtons()" /> and <see cref="M:Gtk.FileSelection.ShowFileopButtons()" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileopDelFile">
      <MemberSignature Language="C#" Value="public Gtk.Button FileopDelFile { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Button</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The 'delete' button of this file selector.</summary>
        <returns />
        <remarks>
          <para>This button may or may not be visible, see <see cref="M:Gtk.FileSelection.ShowFileopButtons()" /> and <see cref="M:Gtk.FileSelection.ShowFileopButtons()" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileopCDir">
      <MemberSignature Language="C#" Value="public Gtk.Button FileopCDir { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Button</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The 'create directory' button of this file selector.</summary>
        <returns />
        <remarks>
          <para>This button may or may not be visible, see <see cref="M:Gtk.FileSelection.ShowFileopButtons()" /> and <see cref="M:Gtk.FileSelection.ShowFileopButtons()" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileopFile">
      <MemberSignature Language="C#" Value="public string FileopFile { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'string'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileopEntry">
      <MemberSignature Language="C#" Value="public Gtk.Entry FileopEntry { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Entry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The main text entry widget of this file selector.</summary>
        <returns />
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FileopDialog">
      <MemberSignature Language="C#" Value="public Gtk.MessageDialog FileopDialog { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.MessageDialog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gtk.MessageDialog'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="HistoryMenu">
      <MemberSignature Language="C#" Value="public Gtk.Menu HistoryMenu { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Menu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:Gtk.Menu" /> that is displayed by the <see cref="P:Gtk.FileSelection.HistoryPulldown" />.</summary>
        <returns>A menu containing the file system paths higher than the selected directory, and the user's directory history.</returns>
        <remarks>
          <para>Note that this widget does not just contain history, it contains a list of directories above the current directory in the filesystem as well as user directory history.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HistoryPulldown">
      <MemberSignature Language="C#" Value="public Gtk.OptionMenu HistoryPulldown { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.OptionMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The drop down menu containing directories in the filesystem above the selected directory, and the user's directory history.</summary>
        <returns>The <see cref="T:Gtk.OptionMenu" /> at the top of the file selector.</returns>
        <remarks>
          <para>This widget displays the menu returned by <see cref="P:Gtk.FileSelection.HistoryMenu" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpButton">
      <MemberSignature Language="C#" Value="public Gtk.Button HelpButton { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Button</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A help button, not displayed by default.</summary>
        <returns />
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CancelButton">
      <MemberSignature Language="C#" Value="public Gtk.Button CancelButton { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Button</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The 'cancel' of this file selector.</summary>
        <returns />
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="OkButton">
      <MemberSignature Language="C#" Value="public Gtk.Button OkButton { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Button</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The 'OK' button of this file selector.</summary>
        <returns />
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SelectionText">
      <MemberSignature Language="C#" Value="public Gtk.Label SelectionText { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Label</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gtk.Label'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionEntry">
      <MemberSignature Language="C#" Value="public Gtk.Entry SelectionEntry { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Entry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gtk.Entry'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileList">
      <MemberSignature Language="C#" Value="public Gtk.TreeView FileList { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.TreeView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:Gtk.TreeView" /> widget that displays files in this file selector.</summary>
        <returns />
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="DirList">
      <MemberSignature Language="C#" Value="public Gtk.TreeView DirList { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.TreeView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:Gtk.TreeView" /> widget that displays directories in this file selector.</summary>
        <returns />
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Selections">
      <MemberSignature Language="C#" Value="public string [] Selections { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String []</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the files that are selected</summary>
        <returns>An array of file paths</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ShowFileops">
      <MemberSignature Language="C#" Value="public bool ShowFileops { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Manage whether buttons are displayed for doing file operations.</summary>
        <param name="value">Set to <see langword="true" /> to display the file buttons.</param>
        <returns>
          <see langword="true" /> for buttons to be shown, <see langword="false" /> otherwise.</returns>
        <remarks>
          <para>This manipulates whether the buttons for creating a directory, deleting files and renaming files, are displayed.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filename">
      <MemberSignature Language="C#" Value="public string Filename { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Manage the selected filename.</summary>
        <param name="value">Sets a default path for the file requestor.</param>
        <returns>The selected filename in the on-disk encoding.</returns>
        <remarks>
          <para>If <paramref name="value" /> includes a directory path, then the requestor will open with that path as its current working directory. The encoding of filename is the on-disk encoding, which may not be UTF-8.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMultiple">
      <MemberSignature Language="C#" Value="public bool SelectMultiple { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Manage whether more than one file can be selected.</summary>
        <param name="value">Set to <see langword="true" /> to allow more than one file to be selected in the file list, <see langword="false" /> to only allow selection of a single file.</param>
        <returns>
          <see langword="true" /> if multiple selections are allowed, <see langword="false" /> otherwise.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileSelection (GLib.Type gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.Type" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="gtype">GLib type for the type</param>
        <returns>Creates a new instance of FileSelection, using the GLib-provided type</returns>
        <remarks>
          <para>This is a constructor used by derivative types of <see cref="T:Gtk.FileSelection" /> that would have their own GLib type assigned to it.  This is not typically used by C# code.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>