<?xml version="1.0"?>
<assemblies>
  <assembly name="glib-sharp" version="1.0.0.0">
    <attributes>
      <attribute name="System.Reflection.AssemblyKeyFileAttribute">
        <properties>
          <property name="KeyFile" value="gtk-sharp.snk" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDelaySignAttribute">
        <properties>
          <property name="DelaySign" value="False" />
        </properties>
      </attribute>
    </attributes>
    <namespaces>
      <namespace name="GLib">
        <classes>
          <class name="Boxed" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.ObsoleteAttribute">
                <properties>
                  <property name="Message" null="true" />
                  <property name="IsError" value="False" />
                </properties>
              </attribute>
            </attributes>
            <constructors>
              <constructor name=".ctor(System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Object)" attrib="6278">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Handle" attrib="1536" ptype="System.IntPtr" params="">
                <methods>
                  <method name="get_Handle()" returntype="System.IntPtr">
                    <parameters />
                  </method>
                  <method name="set_Handle(System.IntPtr)" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.IntPtr" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Obj" attrib="1536" ptype="System.Object" params="">
                <methods>
                  <method name="get_Obj()" returntype="System.Object">
                    <parameters />
                  </method>
                  <method name="set_Obj(System.Object)" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="ConnectBeforeAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
          </class>
          <class name="DefaultSignalHandlerAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="ConnectionMethod" attrib="1536" ptype="System.String" params="">
                <methods>
                  <method name="get_ConnectionMethod()" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_ConnectionMethod(System.String)" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Type" attrib="1536" ptype="System.Type" params="">
                <methods>
                  <method name="get_Type()" returntype="System.Type">
                    <parameters />
                  </method>
                  <method name="set_Type(System.Type)" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Type" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="DelegateWrapper" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object)" attrib="6276">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="EnumWrapper" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <fields>
              <field name="flags" attrib="6" fieldtype="System.Boolean" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.Int32, System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="System.Int32" />
                  <parameter name="flags" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="FileUtils" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <methods>
              <method name="GetFileContents(System.String)" attrib="150" returntype="System.String">
                <parameters>
                  <parameter name="filename" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="GException" type="class" base="System.Exception" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="errptr" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Message" attrib="1536" ptype="System.String" params="">
                <methods>
                  <method name="get_Message()" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Finalize()" attrib="196" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="GString" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="GLib.IWrapper" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="text" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Handle" attrib="1536" ptype="System.IntPtr" params="">
                <methods>
                  <method name="get_Handle()" returntype="System.IntPtr">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Finalize()" attrib="196" returntype="System.Void">
                <parameters />
              </method>
              <method name="PtrToString(System.IntPtr)" attrib="150" returntype="System.String">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="GType" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="Boolean" attrib="54" fieldtype="GLib.GType" />
              <field name="Boxed" attrib="54" fieldtype="GLib.GType" />
              <field name="Char" attrib="54" fieldtype="GLib.GType" />
              <field name="Double" attrib="54" fieldtype="GLib.GType" />
              <field name="Float" attrib="54" fieldtype="GLib.GType" />
              <field name="Int" attrib="54" fieldtype="GLib.GType" />
              <field name="Int64" attrib="54" fieldtype="GLib.GType" />
              <field name="Invalid" attrib="54" fieldtype="GLib.GType" />
              <field name="None" attrib="54" fieldtype="GLib.GType" />
              <field name="Object" attrib="54" fieldtype="GLib.GType" />
              <field name="Pointer" attrib="54" fieldtype="GLib.GType" />
              <field name="String" attrib="54" fieldtype="GLib.GType" />
              <field name="UInt" attrib="54" fieldtype="GLib.GType" />
              <field name="UInt64" attrib="54" fieldtype="GLib.GType" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Val" attrib="1536" ptype="System.IntPtr" params="">
                <methods>
                  <method name="get_Val()" returntype="System.IntPtr">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" returntype="System.Int32">
                <parameters />
              </method>
              <method name="ToString()" attrib="198" returntype="System.String">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="IWrapper" type="interface" abstract="true" charset="Ansi" layout="Auto">
            <properties>
              <property name="Handle" attrib="0" ptype="System.IntPtr" params="">
                <methods>
                  <method name="get_Handle()" returntype="System.IntPtr">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="Idle" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <methods>
              <method name="Add(GLib.IdleHandler)" attrib="150" returntype="System.UInt32">
                <parameters>
                  <parameter name="hndlr" position="0" attrib="0" type="GLib.IdleHandler" />
                </parameters>
              </method>
              <method name="Remove(GLib.IdleHandler)" attrib="150" returntype="System.Boolean">
                <parameters>
                  <parameter name="hndlr" position="0" attrib="0" type="GLib.IdleHandler" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IdleHandler" type="delegate" base="System.MulticastDelegate" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.AsyncCallback, System.Object)" attrib="454" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" returntype="System.Boolean">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke()" attrib="198" returntype="System.Boolean">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="List" type="class" base="GLib.ListBase" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
              <interface name="GLib.IWrapper" />
              <interface name="System.ICloneable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.IntPtr, System.Type)" attrib="6278">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="element_type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Type)" attrib="6278">
                <parameters>
                  <parameter name="element_type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="Clone()" attrib="198" returntype="System.Object">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="ListBase" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
              <interface name="GLib.IWrapper" />
              <interface name="System.ICloneable" />
            </interfaces>
            <fields>
              <field name="element_type" attrib="4" fieldtype="System.Type" />
            </fields>
            <properties>
              <property name="Count" attrib="1536" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Count()" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Handle" attrib="1536" ptype="System.IntPtr" params="">
                <methods>
                  <method name="get_Handle()" returntype="System.IntPtr">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSynchronized" attrib="1536" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsSynchronized()" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="1536" ptype="System.Object" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" returntype="System.Object">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="Managed" attrib="1536" ptype="System.Boolean" params="System.Boolean">
                <methods>
                  <method name="set_Managed(System.Boolean)" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Boolean" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SyncRoot" attrib="1536" ptype="System.Object" params="">
                <methods>
                  <method name="get_SyncRoot()" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Append(System.String)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="item" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="Append(System.IntPtr)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="Clone()" attrib="1478" returntype="System.Object">
                <parameters />
              </method>
              <method name="CopyTo(System.Array, System.Int32)" attrib="486" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Dispose()" attrib="486" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Finalize()" attrib="196" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetEnumerator()" attrib="486" returntype="System.Collections.IEnumerator">
                <parameters />
              </method>
              <method name="Prepend(System.IntPtr)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Log" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="DefaultHandler(System.String, GLib.LogLevelFlags, System.String)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="logDomain" position="0" attrib="0" type="System.String" />
                  <parameter name="logLevel" position="1" attrib="0" type="GLib.LogLevelFlags" />
                  <parameter name="message" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="PrintLogFunction(System.String, GLib.LogLevelFlags, System.String)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="domain" position="0" attrib="0" type="System.String" />
                  <parameter name="level" position="1" attrib="0" type="GLib.LogLevelFlags" />
                  <parameter name="message" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="PrintTraceLogFunction(System.String, GLib.LogLevelFlags, System.String)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="domain" position="0" attrib="0" type="System.String" />
                  <parameter name="level" position="1" attrib="0" type="GLib.LogLevelFlags" />
                  <parameter name="message" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="RemoveLogHandler(System.String, System.UInt32)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="logDomain" position="0" attrib="0" type="System.String" />
                  <parameter name="handlerID" position="1" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="SetAlwaysFatal(GLib.LogLevelFlags)" attrib="150" returntype="GLib.LogLevelFlags">
                <parameters>
                  <parameter name="fatalMask" position="0" attrib="0" type="GLib.LogLevelFlags" />
                </parameters>
              </method>
              <method name="SetAlwaysFatal(System.String, GLib.LogLevelFlags)" attrib="150" returntype="GLib.LogLevelFlags">
                <parameters>
                  <parameter name="logDomain" position="0" attrib="0" type="System.String" />
                  <parameter name="fatalMask" position="1" attrib="0" type="GLib.LogLevelFlags" />
                </parameters>
              </method>
              <method name="SetLogHandler(System.String, GLib.LogLevelFlags, GLib.LogFunc)" attrib="150" returntype="System.UInt32">
                <parameters>
                  <parameter name="logDomain" position="0" attrib="0" type="System.String" />
                  <parameter name="flags" position="1" attrib="0" type="GLib.LogLevelFlags" />
                  <parameter name="logFunc" position="2" attrib="0" type="GLib.LogFunc" />
                </parameters>
              </method>
              <method name="SetPrintErrorHandler(GLib.PrintFunc)" attrib="150" returntype="GLib.PrintFunc">
                <parameters>
                  <parameter name="handler" position="0" attrib="0" type="GLib.PrintFunc" />
                </parameters>
              </method>
              <method name="SetPrintHandler(GLib.PrintFunc)" attrib="150" returntype="GLib.PrintFunc">
                <parameters>
                  <parameter name="handler" position="0" attrib="0" type="GLib.PrintFunc" />
                </parameters>
              </method>
              <method name="WriteLog(System.String, GLib.LogLevelFlags, System.String, System.Object[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="logDomain" position="0" attrib="0" type="System.String" />
                  <parameter name="flags" position="1" attrib="0" type="GLib.LogLevelFlags" />
                  <parameter name="format" position="2" attrib="0" type="System.String" />
                  <parameter name="args" position="3" attrib="0" type="System.Object[]">
                    <attributes>
                      <attribute name="System.ParamArrayAttribute" />
                    </attributes>
                  </parameter>
                </parameters>
              </method>
            </methods>
          </class>
          <class name="LogFunc" type="delegate" base="System.MulticastDelegate" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.String, GLib.LogLevelFlags, System.String, System.AsyncCallback, System.Object)" attrib="454" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="log_domain" position="0" attrib="0" type="System.String" />
                  <parameter name="log_level" position="1" attrib="0" type="GLib.LogLevelFlags" />
                  <parameter name="message" position="2" attrib="0" type="System.String" />
                  <parameter name="callback" position="3" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="4" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.String, GLib.LogLevelFlags, System.String)" attrib="198" returntype="System.Void">
                <parameters>
                  <parameter name="log_domain" position="0" attrib="0" type="System.String" />
                  <parameter name="log_level" position="1" attrib="0" type="GLib.LogLevelFlags" />
                  <parameter name="message" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="LogLevelFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Reflection.MonoField">
            <attributes>
              <attribute name="System.FlagsAttribute" />
            </attributes>
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="All" attrib="32854" fieldtype="GLib.LogLevelFlags" value="255" />
              <field name="AllButFatal" attrib="32854" fieldtype="GLib.LogLevelFlags" value="253" />
              <field name="AllButRecursion" attrib="32854" fieldtype="GLib.LogLevelFlags" value="254" />
              <field name="Critical" attrib="32854" fieldtype="GLib.LogLevelFlags" value="8" />
              <field name="Debug" attrib="32854" fieldtype="GLib.LogLevelFlags" value="128" />
              <field name="Error" attrib="32854" fieldtype="GLib.LogLevelFlags" value="4" />
              <field name="FlagFatal" attrib="32854" fieldtype="GLib.LogLevelFlags" value="2" />
              <field name="FlagMask" attrib="32854" fieldtype="GLib.LogLevelFlags" value="3" />
              <field name="FlagRecursion" attrib="32854" fieldtype="GLib.LogLevelFlags" value="1" />
              <field name="Info" attrib="32854" fieldtype="GLib.LogLevelFlags" value="64" />
              <field name="LevelMask" attrib="32854" fieldtype="GLib.LogLevelFlags" value="-4" />
              <field name="Message" attrib="32854" fieldtype="GLib.LogLevelFlags" value="32" />
              <field name="Warning" attrib="32854" fieldtype="GLib.LogLevelFlags" value="16" />
            </fields>
          </class>
          <class name="MainContext" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Iteration(System.Boolean)" attrib="150" returntype="System.Boolean">
                <parameters>
                  <parameter name="MayBlock" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Iteration()" attrib="150" returntype="System.Boolean">
                <parameters />
              </method>
              <method name="Pending()" attrib="150" returntype="System.Boolean">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="MainLoop" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="IsRunning" attrib="1536" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsRunning()" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Finalize()" attrib="196" returntype="System.Void">
                <parameters />
              </method>
              <method name="Quit()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Run()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Markup" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <methods>
              <method name="EscapeText(System.String)" attrib="150" returntype="System.String">
                <parameters>
                  <parameter name="s" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Marshaller" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <methods>
              <method name="ArgvToArrayPtr(System.String[])" attrib="150" returntype="System.IntPtr">
                <parameters>
                  <parameter name="args" position="0" attrib="0" type="System.String[]" />
                </parameters>
              </method>
              <method name="ArrayPtrToArgv(System.IntPtr, System.Int32)" attrib="150" returntype="System.String[]">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="argc" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="CharToGUnichar(System.Char)" attrib="150" returntype="System.UInt32">
                <parameters>
                  <parameter name="c" position="0" attrib="0" type="System.Char" />
                </parameters>
              </method>
              <method name="DateTimeTotime_t(System.DateTime)" attrib="150" returntype="System.IntPtr">
                <parameters>
                  <parameter name="time" position="0" attrib="0" type="System.DateTime" />
                </parameters>
              </method>
              <method name="GUnicharToChar(System.UInt32)" attrib="150" returntype="System.Char">
                <parameters>
                  <parameter name="ucs4_char" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="PtrToStringGFree(System.IntPtr[])" attrib="150" returntype="System.String[]">
                <parameters>
                  <parameter name="ptrs" position="0" attrib="0" type="System.IntPtr[]" />
                </parameters>
              </method>
              <method name="PtrToStringGFree(System.IntPtr)" attrib="150" returntype="System.String">
                <parameters>
                  <parameter name="ptr" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="StringToPtrGStrdup(System.String)" attrib="150" returntype="System.IntPtr">
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="time_tToDateTime(System.IntPtr)" attrib="150" returntype="System.DateTime">
                <parameters>
                  <parameter name="time_t" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="MissingIntPtrCtorException" type="class" base="System.Exception" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="msg" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="Object" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="GLib.IWrapper" />
              <interface name="System.IDisposable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(GLib.GType)" attrib="6276">
                <parameters>
                  <parameter name="gtype" position="0" attrib="0" type="GLib.GType" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IntPtr)" attrib="6276">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="AfterHandlers" attrib="1536" ptype="System.ComponentModel.EventHandlerList" params="">
                <methods>
                  <method name="get_AfterHandlers()" returntype="System.ComponentModel.EventHandlerList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="AfterSignals" attrib="1536" ptype="System.Collections.Hashtable" params="">
                <methods>
                  <method name="get_AfterSignals()" returntype="System.Collections.Hashtable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BeforeHandlers" attrib="1536" ptype="System.ComponentModel.EventHandlerList" params="">
                <methods>
                  <method name="get_BeforeHandlers()" returntype="System.ComponentModel.EventHandlerList">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="BeforeSignals" attrib="1536" ptype="System.Collections.Hashtable" params="">
                <methods>
                  <method name="get_BeforeSignals()" returntype="System.Collections.Hashtable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Data" attrib="1536" ptype="System.Collections.Hashtable" params="">
                <methods>
                  <method name="get_Data()" returntype="System.Collections.Hashtable">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="GType" attrib="1536" ptype="GLib.GType" params="">
                <methods>
                  <method name="get_GType()" returntype="GLib.GType">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Handle" attrib="1536" ptype="System.IntPtr" params="">
                <methods>
                  <method name="get_Handle()" returntype="System.IntPtr">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Raw" attrib="1536" ptype="System.IntPtr" params="">
                <methods>
                  <method name="get_Raw()" returntype="System.IntPtr">
                    <parameters />
                  </method>
                  <method name="set_Raw(System.IntPtr)" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.IntPtr" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RefCount" attrib="1536" ptype="System.Int32" params="">
                <methods>
                  <method name="get_RefCount()" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="TypeName" attrib="1536" ptype="System.String" params="">
                <methods>
                  <method name="get_TypeName()" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="CreateNativeObject(System.String[], GLib.Value[])" attrib="452" returntype="System.Void">
                <parameters>
                  <parameter name="names" position="0" attrib="0" type="System.String[]" />
                  <parameter name="vals" position="1" attrib="0" type="GLib.Value[]" />
                </parameters>
              </method>
              <method name="Dispose()" attrib="486" returntype="System.Void">
                <parameters />
              </method>
              <method name="Finalize()" attrib="196" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetHashCode()" attrib="198" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetObject(System.IntPtr, System.Boolean)" attrib="150" returntype="GLib.Object">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="owned_ref" position="1" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="GetObject(System.IntPtr)" attrib="150" returntype="GLib.Object">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="GetProperty(System.String)" attrib="132" returntype="GLib.Value">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="LookupGType()" attrib="132" returntype="GLib.GType">
                <parameters />
              </method>
              <method name="LookupGType(System.Type)" attrib="148" returntype="GLib.GType">
                <parameters>
                  <parameter name="t" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="OverrideVirtualMethod(GLib.GType, System.String, System.Delegate)" attrib="148" returntype="System.Void">
                <parameters>
                  <parameter name="gtype" position="0" attrib="0" type="GLib.GType" />
                  <parameter name="name" position="1" attrib="0" type="System.String" />
                  <parameter name="cb" position="2" attrib="0" type="System.Delegate" />
                </parameters>
              </method>
              <method name="RegisterGType(System.Type)" attrib="148" returntype="GLib.GType">
                <parameters>
                  <parameter name="t" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
              <method name="SetProperty(System.String, GLib.Value)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="val" position="1" attrib="0" type="GLib.Value" />
                </parameters>
              </method>
              <method name="g_signal_chain_from_overridden(System.IntPtr, GLib.Value&amp;)" attrib="8340" returntype="System.Void">
                <parameters>
                  <parameter name="args" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="retval" position="1" attrib="0" type="GLib.Value&amp;" direction="ref" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ObjectManager" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="CreateObject(System.IntPtr)" attrib="150" returntype="GLib.Object">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="RegisterType(System.String, System.String)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="native_name" position="0" attrib="0" type="System.String" />
                  <parameter name="mangled" position="1" attrib="0" type="System.String" />
                </parameters>
              </method>
              <method name="RegisterType(System.String, System.String, System.String)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="native_name" position="0" attrib="0" type="System.String" />
                  <parameter name="managed_name" position="1" attrib="0" type="System.String" />
                  <parameter name="assembly" position="2" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Opaque" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="GLib.IWrapper" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Handle" attrib="1536" ptype="System.IntPtr" params="">
                <methods>
                  <method name="get_Handle()" returntype="System.IntPtr">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Raw" attrib="1536" ptype="System.IntPtr" params="">
                <methods>
                  <method name="get_Raw()" returntype="System.IntPtr">
                    <parameters />
                  </method>
                  <method name="set_Raw(System.IntPtr)" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.IntPtr" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Equals(System.Object)" attrib="198" returntype="System.Boolean">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="GetHashCode()" attrib="198" returntype="System.Int32">
                <parameters />
              </method>
              <method name="GetOpaque(System.IntPtr)" attrib="150" returntype="GLib.Opaque">
                <parameters>
                  <parameter name="o" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PrintFunc" type="delegate" base="System.MulticastDelegate" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.String, System.AsyncCallback, System.Object)" attrib="454" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.String)" attrib="198" returntype="System.Void">
                <parameters>
                  <parameter name="message" position="0" attrib="0" type="System.String" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PropertyAttribute" type="class" base="System.Attribute" sealed="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Name" attrib="1536" ptype="System.String" params="">
                <methods>
                  <method name="get_Name()" returntype="System.String">
                    <parameters />
                  </method>
                  <method name="set_Name(System.String)" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.String" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SList" type="class" base="GLib.ListBase" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
              <interface name="GLib.IWrapper" />
              <interface name="System.ICloneable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.IntPtr, System.Type)" attrib="6278">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="element_type" position="1" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Type)" attrib="6278">
                <parameters>
                  <parameter name="element_type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="Clone()" attrib="198" returntype="System.Object">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="SignalArgs" type="class" base="System.EventArgs" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.Object, System.Object[])" attrib="6278">
                <parameters>
                  <parameter name="retval" position="0" attrib="0" type="System.Object" />
                  <parameter name="args" position="1" attrib="0" type="System.Object[]" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Object)" attrib="6278">
                <parameters>
                  <parameter name="retval" position="0" attrib="0" type="System.Object" />
                </parameters>
              </constructor>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <properties>
              <property name="Args" attrib="1536" ptype="System.Object[]" params="">
                <methods>
                  <method name="get_Args()" returntype="System.Object[]">
                    <parameters />
                  </method>
                  <method name="set_Args(System.Object[])" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Object[]" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="RetVal" attrib="1536" ptype="System.Object" params="">
                <methods>
                  <method name="get_RetVal()" returntype="System.Object">
                    <parameters />
                  </method>
                  <method name="set_RetVal(System.Object)" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SignalAttribute" type="class" base="System.Attribute" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="cname" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="CName" attrib="1536" ptype="System.String" params="">
                <methods>
                  <method name="get_CName()" returntype="System.String">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
          </class>
          <class name="SignalCallback" type="class" base="System.Object" abstract="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <fields>
              <field name="_HandlerID" attrib="4" fieldtype="System.UInt32" />
              <field name="_Instances" attrib="20" fieldtype="System.Collections.Hashtable" />
              <field name="_NextKey" attrib="20" fieldtype="System.Int32" />
              <field name="_argstype" attrib="4" fieldtype="System.Type" />
              <field name="_handler" attrib="4" fieldtype="System.Delegate" />
              <field name="_key" attrib="4" fieldtype="System.Int32" />
              <field name="_obj" attrib="4" fieldtype="GLib.Object" />
            </fields>
            <constructors>
              <constructor name=".ctor(GLib.Object, System.Delegate, System.Type)" attrib="6276">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="GLib.Object" />
                  <parameter name="eh" position="1" attrib="0" type="System.Delegate" />
                  <parameter name="argstype" position="2" attrib="0" type="System.Type" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="AddDelegate(System.Delegate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Delegate" />
                </parameters>
              </method>
              <method name="Connect(System.String, System.Delegate, System.Int32)" attrib="132" returntype="System.Void">
                <parameters>
                  <parameter name="name" position="0" attrib="0" type="System.String" />
                  <parameter name="cb" position="1" attrib="0" type="System.Delegate" />
                  <parameter name="flags" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Disconnect()" attrib="132" returntype="System.Void">
                <parameters />
              </method>
              <method name="Dispose(System.Boolean)" attrib="452" returntype="System.Void">
                <parameters>
                  <parameter name="disposing" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </method>
              <method name="Dispose()" attrib="486" returntype="System.Void">
                <parameters />
              </method>
              <method name="Finalize()" attrib="196" returntype="System.Void">
                <parameters />
              </method>
              <method name="RemoveDelegate(System.Delegate)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="d" position="0" attrib="0" type="System.Delegate" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Source" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <methods>
              <method name="Remove(System.UInt32)" attrib="150" returntype="System.Boolean">
                <parameters>
                  <parameter name="tag" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Thread" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <methods>
              <method name="Init()" attrib="150" returntype="System.Void">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Timeout" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <methods>
              <method name="Add(System.UInt32, GLib.TimeoutHandler)" attrib="150" returntype="System.UInt32">
                <parameters>
                  <parameter name="interval" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="hndlr" position="1" attrib="0" type="GLib.TimeoutHandler" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="TimeoutHandler" type="delegate" base="System.MulticastDelegate" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.AsyncCallback, System.Object)" attrib="454" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="callback" position="0" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="1" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" returntype="System.Boolean">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke()" attrib="198" returntype="System.Boolean">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="TypeConverter" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <methods>
              <method name="LookupType(System.Type)" attrib="150" returntype="GLib.GType">
                <parameters>
                  <parameter name="type" position="0" attrib="0" type="System.Type" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="TypeFundamentals" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Reflection.MonoField">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="TypeBoolean" attrib="32854" fieldtype="GLib.TypeFundamentals" value="20" />
              <field name="TypeBoxed" attrib="32854" fieldtype="GLib.TypeFundamentals" value="72" />
              <field name="TypeChar" attrib="32854" fieldtype="GLib.TypeFundamentals" value="12" />
              <field name="TypeDouble" attrib="32854" fieldtype="GLib.TypeFundamentals" value="60" />
              <field name="TypeEnum" attrib="32854" fieldtype="GLib.TypeFundamentals" value="48" />
              <field name="TypeFlags" attrib="32854" fieldtype="GLib.TypeFundamentals" value="52" />
              <field name="TypeFloat" attrib="32854" fieldtype="GLib.TypeFundamentals" value="56" />
              <field name="TypeInt" attrib="32854" fieldtype="GLib.TypeFundamentals" value="24" />
              <field name="TypeInt64" attrib="32854" fieldtype="GLib.TypeFundamentals" value="40" />
              <field name="TypeInterface" attrib="32854" fieldtype="GLib.TypeFundamentals" value="8" />
              <field name="TypeInvalid" attrib="32854" fieldtype="GLib.TypeFundamentals" value="0" />
              <field name="TypeLong" attrib="32854" fieldtype="GLib.TypeFundamentals" value="32" />
              <field name="TypeNone" attrib="32854" fieldtype="GLib.TypeFundamentals" value="4" />
              <field name="TypeObject" attrib="32854" fieldtype="GLib.TypeFundamentals" value="80" />
              <field name="TypeParam" attrib="32854" fieldtype="GLib.TypeFundamentals" value="76" />
              <field name="TypePointer" attrib="32854" fieldtype="GLib.TypeFundamentals" value="68" />
              <field name="TypeString" attrib="32854" fieldtype="GLib.TypeFundamentals" value="64" />
              <field name="TypeUChar" attrib="32854" fieldtype="GLib.TypeFundamentals" value="16" />
              <field name="TypeUInt" attrib="32854" fieldtype="GLib.TypeFundamentals" value="28" />
              <field name="TypeUInt64" attrib="32854" fieldtype="GLib.TypeFundamentals" value="44" />
              <field name="TypeULong" attrib="32854" fieldtype="GLib.TypeFundamentals" value="36" />
            </fields>
          </class>
          <class name="UnwrappedObject" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor(System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="Value" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <interfaces>
              <interface name="System.IDisposable" />
            </interfaces>
            <fields>
              <field name="Empty" attrib="22" fieldtype="GLib.Value" />
            </fields>
            <constructors>
              <constructor name=".ctor(System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.String)" attrib="6278">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt64)" attrib="6278">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="System.UInt64" />
                </parameters>
              </constructor>
              <constructor name=".ctor(GLib.Object)" attrib="6278">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="GLib.Object" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt32)" attrib="6278">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(GLib.Object, System.String, GLib.EnumWrapper)" attrib="6278">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" null="true" />
                      <property name="IsError" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="GLib.Object" />
                  <parameter name="prop_name" position="1" attrib="0" type="System.String" />
                  <parameter name="wrap" position="2" attrib="0" type="GLib.EnumWrapper" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Object)" attrib="6278">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.Object" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.UInt16)" attrib="6278">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="System.UInt16" />
                </parameters>
              </constructor>
              <constructor name=".ctor(GLib.EnumWrapper, System.String)" attrib="6278">
                <parameters>
                  <parameter name="wrap" position="0" attrib="0" type="GLib.EnumWrapper" />
                  <parameter name="type_name" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Boolean)" attrib="6278">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="System.Boolean" />
                </parameters>
              </constructor>
              <constructor name=".ctor(GLib.Opaque, System.String)" attrib="6278">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="GLib.Opaque" />
                  <parameter name="type_name" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(GLib.GType)" attrib="6278">
                <parameters>
                  <parameter name="gtype" position="0" attrib="0" type="GLib.GType" />
                </parameters>
              </constructor>
              <constructor name=".ctor(GLib.Object, System.String)" attrib="6278">
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="GLib.Object" />
                  <parameter name="prop_name" position="1" attrib="0" type="System.String" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.IntPtr, System.String, GLib.Opaque)" attrib="6278">
                <attributes>
                  <attribute name="System.ObsoleteAttribute">
                    <properties>
                      <property name="Message" null="true" />
                      <property name="IsError" value="False" />
                    </properties>
                  </attribute>
                </attributes>
                <parameters>
                  <parameter name="obj" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="prop_name" position="1" attrib="0" type="System.String" />
                  <parameter name="val" position="2" attrib="0" type="GLib.Opaque" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int32)" attrib="6278">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Int64)" attrib="6278">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="System.Int64" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Double)" attrib="6278">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="System.Double" />
                </parameters>
              </constructor>
              <constructor name=".ctor(System.Single)" attrib="6278">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="System.Single" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="Val" attrib="1536" ptype="System.Object" params="">
                <methods>
                  <method name="get_Val()" returntype="System.Object">
                    <parameters />
                  </method>
                  <method name="set_Val(System.Object)" returntype="System.Void">
                    <parameters>
                      <parameter name="value" position="0" attrib="0" type="System.Object" />
                    </parameters>
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Dispose()" attrib="486" returntype="System.Void">
                <parameters />
              </method>
              <method name="Init(GLib.GType)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="gtype" position="0" attrib="0" type="GLib.GType" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ValueArray" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <attributes>
              <attribute name="System.Reflection.DefaultMemberAttribute">
                <properties>
                  <property name="MemberName" value="Item" />
                </properties>
              </attribute>
            </attributes>
            <interfaces>
              <interface name="System.IDisposable" />
              <interface name="System.Collections.ICollection" />
              <interface name="System.Collections.IEnumerable" />
              <interface name="System.ICloneable" />
              <interface name="GLib.IWrapper" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.UInt32)" attrib="6278">
                <parameters>
                  <parameter name="n_preallocs" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </constructor>
            </constructors>
            <properties>
              <property name="ArrayPtr" attrib="1536" ptype="System.IntPtr" params="">
                <methods>
                  <method name="get_ArrayPtr()" returntype="System.IntPtr">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Count" attrib="1536" ptype="System.Int32" params="">
                <methods>
                  <method name="get_Count()" returntype="System.Int32">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Handle" attrib="1536" ptype="System.IntPtr" params="">
                <methods>
                  <method name="get_Handle()" returntype="System.IntPtr">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="IsSynchronized" attrib="1536" ptype="System.Boolean" params="">
                <methods>
                  <method name="get_IsSynchronized()" returntype="System.Boolean">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="Item" attrib="1536" ptype="System.Object" params="System.Int32">
                <methods>
                  <method name="get_Item(System.Int32)" returntype="System.Object">
                    <parameters>
                      <parameter name="index" position="0" attrib="0" type="System.Int32" />
                    </parameters>
                  </method>
                </methods>
              </property>
              <property name="SyncRoot" attrib="1536" ptype="System.Object" params="">
                <methods>
                  <method name="get_SyncRoot()" returntype="System.Object">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Append(GLib.Value)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="GLib.Value" />
                </parameters>
              </method>
              <method name="Clone()" attrib="486" returntype="System.Object">
                <parameters />
              </method>
              <method name="CopyTo(System.Array, System.Int32)" attrib="486" returntype="System.Void">
                <parameters>
                  <parameter name="array" position="0" attrib="0" type="System.Array" />
                  <parameter name="index" position="1" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Dispose()" attrib="486" returntype="System.Void">
                <parameters />
              </method>
              <method name="Finalize()" attrib="196" returntype="System.Void">
                <parameters />
              </method>
              <method name="GetEnumerator()" attrib="486" returntype="System.Collections.IEnumerator">
                <parameters />
              </method>
              <method name="Insert(System.UInt32, GLib.Value)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="idx" position="0" attrib="0" type="System.UInt32" />
                  <parameter name="val" position="1" attrib="0" type="GLib.Value" />
                </parameters>
              </method>
              <method name="Prepend(GLib.Value)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="val" position="0" attrib="0" type="GLib.Value" />
                </parameters>
              </method>
              <method name="Remove(System.UInt32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="idx" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
            </methods>
          </class>
        </classes>
      </namespace>
    </namespaces>
  </assembly>
</assemblies>