<Type Name="Box" FullName="Gtk.Box">
  <TypeSignature Language="C#" Value="public class Box : Gtk.Container, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="Lee Mallabone" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>A Box is a Gtk container that holds an arbitrary number of widgets. This means its sole purpose is to provide layout, size and spacing for other widgets.</summary>
    <remarks>
      <para>A Box is a rectangular area organized into either a single row or a single column of child widgets, depending upon whether the box is horizontally or vertically oriented, respectively.</para>
      <para>A Box is abstract - specific layout containers are provided in its sub classes, including a horizontal box, (<see cref="T:Gtk.HBox" />), a vertical box (<see cref="T:Gtk.VBox" />), and button boxes, (<see cref="T:Gtk.ButtonBox" />).</para>
      <para>
    Widgets that are 'packed' into a box are considered to be the children of the box, and the box controls their layout. Properties such as <see cref="P:Homogeneous" /> control the layout of all the children in the box, whereas specific packing settings can be applied to each child individually, such as <see cref="M:SetChildPacking(Gtk.Widget,bool,bool,uint,Gtk.PackType)" />.
    </para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Container</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="SetChildPacking">
      <MemberSignature Language="C#" Value="public void SetChildPacking (Gtk.Widget child, bool expand, bool fill, uint padding, Gtk.PackType pack_type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="expand" Type="System.Boolean" />
        <Parameter Name="fill" Type="System.Boolean" />
        <Parameter Name="padding" Type="System.UInt32" />
        <Parameter Name="pack_type" Type="Gtk.PackType" />
      </Parameters>
      <Docs>
        <summary>Change the packing properties of a child that is currently in this box.</summary>
        <param name="child">The child widget whose layout should be adjusted</param>
        <param name="expand">If <see langword="true" />, the child widget will expand to use as much space as it is given.</param>
        <param name="fill">If <see langword="true" />, the child widget will request as much space as is available.</param>
        <param name="padding">The size (in pixels) of a border to place around the specified child widget.</param>
        <param name="pack_type">Whether this child widget should be packed from the beginning of the box, (eg. the left, or the top), or from the end, (eg. the right or the bottom)</param>
        <remarks>
          <para>It is more common to set any specific packing requirements on child widgets when they are initially added to the box. This can be done using <see cref="M:PackStart(Gtk.Widget,bool,bool,uint)" /> and <see cref="M:PackEnd(Gtk.Widget,bool,bool,uint)" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PackEnd">
      <MemberSignature Language="C#" Value="public void PackEnd (Gtk.Widget widget);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>Add a widget to the 'end' of a box with default packing settings.</summary>
        <param name="widget">The child widget to add to the box.</param>
        <remarks>
          <para>The 'end' of a box is the right hand side in a <see cref="T:Gtk.HBox" /> and the bottom in a <see cref="T:Gtk.VBox" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PackStart">
      <MemberSignature Language="C#" Value="public void PackStart (Gtk.Widget widget);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>Add a widget to the 'start' of a box with default packing settings.</summary>
        <param name="widget">The child widget to add to the box.</param>
        <remarks>
          <para>The 'start' of a box is the left hand side in a <see cref="T:Gtk.HBox" /> and the top in a <see cref="T:Gtk.VBox" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PackStart">
      <MemberSignature Language="C#" Value="public void PackStart (Gtk.Widget child, bool expand, bool fill, uint padding);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="expand" Type="System.Boolean" />
        <Parameter Name="fill" Type="System.Boolean" />
        <Parameter Name="padding" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>Add a widget to the 'start' of a box with the specified packing properties.</summary>
        <param name="child">A widget to pack into the box.</param>
        <param name="expand">If <see langword="true" />, the child widget will expand to use as much space as it is given.</param>
        <param name="fill">If <see langword="true" />, the child widget will request as much space as is available.</param>
        <param name="padding">The size (in pixels) of a border to place around the specified child widget.</param>
        <remarks>
          <para>To add a widget to the start of a box with default packing, use <see cref="M:PackStart()" /></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PackEnd">
      <MemberSignature Language="C#" Value="public void PackEnd (Gtk.Widget child, bool expand, bool fill, uint padding);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="expand" Type="System.Boolean" />
        <Parameter Name="fill" Type="System.Boolean" />
        <Parameter Name="padding" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>Add a widget to the 'end' of a box with the specified packing properties.</summary>
        <param name="child">A widget to pack into the box.</param>
        <param name="expand">If <see langword="true" />, the child widget will expand to use as much space as it is given.</param>
        <param name="fill">If <see langword="true" />, the child widget will request as much space as is available.</param>
        <param name="padding">The size (in pixels) of a border to place around the specified child widget.</param>
        <remarks>
          <para>To add a widget to the end of a box with default packing, use <see cref="M:PackEnd()" /></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReorderChild">
      <MemberSignature Language="C#" Value="public void ReorderChild (Gtk.Widget child, int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Alters the position of a child widget that has already been packed into a Box.</summary>
        <param name="child">A widget that has already been packed into this box.</param>
        <param name="position">
          <para>The new position for this widget, indexed from zero. If negative, the <paramref name="child" /> will be placed at the end of the box.</para>
        </param>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected override void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Box (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of Box, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Spacing">
      <MemberSignature Language="C#" Value="public int Spacing { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Adjust the spacing between child widgets.</summary>
        <param name="value">The number of pixels of space to put between child widgets.</param>
        <returns>The current pixel spacing between child widgets</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Homogeneous">
      <MemberSignature Language="C#" Value="public bool Homogeneous { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Set the size of all child widgets to be the same</summary>
        <param name="value">If <see langword="true" />, all child widgets are forced to have the same size, otherwise they appear at their preferred size.</param>
        <returns>
          <see langword="true" /> if child widgets size themselves equally, false otherwise.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="QueryChildPacking">
      <MemberSignature Language="C#" Value="public void QueryChildPacking (Gtk.Widget child, out bool expand, out bool fill, out uint padding, out Gtk.PackType pack_type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="expand" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="fill" Type="System.Boolean&amp;" RefType="out" />
        <Parameter Name="padding" Type="System.UInt32&amp;" RefType="out" />
        <Parameter Name="pack_type" Type="Gtk.PackType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>Returns information about how <paramref name="child" /> is packed into <paramref name="box" />.</summary>
        <param name="child">the <see cref="T:Gtk.Widget" /> of the child to query.</param>
        <param name="expand">a <see cref="T:System.Boolean&amp;" />, the returned value of the expand field in the BoxChild object.</param>
        <param name="fill">a <see cref="T:System.Boolean&amp;" />, the returned value of the fill field in the BoxChild object.</param>
        <param name="padding">a <see cref="T:System.UInt32&amp;" />, the retuned value of the padding field in the BoxChild object.</param>
        <param name="pack_type">a <see cref="T:Gtk.PackType&amp;" />, the returned value of the pack field in the BoxChild object.</param>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <returns>a <see cref="T:GLib.GType" /></returns>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.Box" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Box (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <returns>a <see cref="T:Gtk.Box" /></returns>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Box ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Protected constructor.</summary>
        <returns>a <see cref="T:Gtk.Box" /></returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildPadding">
      <MemberSignature Language="C#" Value="public uint GetChildPadding (Gtk.Widget child);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>Get the padding for <paramref name="child" />.</summary>
        <param name="child">a child of this <see cref="T:Gtk.Box" /></param>
        <returns>
          <paramref name="child" />'s padding</returns>
        <remarks>See <see cref="M:Gtk.Box.QueryChildPacking" /> for more details about <see cref="T:Gtk.Box" /> child properties.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildPadding">
      <MemberSignature Language="C#" Value="public void SetChildPadding (Gtk.Widget child, uint value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>Set the padding for <paramref name="child" />.</summary>
        <param name="child">a child of this <see cref="T:Gtk.Box" /></param>
        <param name="value">the new padding value for <paramref name="child" /></param>
        <remarks>See <see cref="M:Gtk.Box.SetChildPacking" /> for more details about <see cref="T:Gtk.Box" /> child properties.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildFill">
      <MemberSignature Language="C#" Value="public bool GetChildFill (Gtk.Widget child);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>Get the "fill" property for <paramref name="child" />.</summary>
        <param name="child">a child of this <see cref="T:Gtk.Box" /></param>
        <returns>
          <paramref name="child" />'s "fill" property</returns>
        <remarks>See <see cref="M:Gtk.Box.QueryChildPacking" /> for more details about <see cref="T:Gtk.Box" /> child properties.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildFill">
      <MemberSignature Language="C#" Value="public void SetChildFill (Gtk.Widget child, bool value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Set the "fill" property for <paramref name="child" />.</summary>
        <param name="child">a child of this <see cref="T:Gtk.Box" /></param>
        <param name="value">the new "fill" property for <paramref name="child" />.</param>
        <remarks>See <see cref="M:Gtk.Box.SetChildPacking" /> for more details about <see cref="T:Gtk.Box" /> child properties.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildExpand">
      <MemberSignature Language="C#" Value="public bool GetChildExpand (Gtk.Widget child);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>Get the "expand" property for <paramref name="child" />.</summary>
        <param name="child">a child of this <see cref="T:Gtk.Box" /></param>
        <returns>
          <paramref name="child" />'s "expand" property</returns>
        <remarks>See <see cref="M:Gtk.Box.QueryChildPacking" /> for more details about <see cref="T:Gtk.Box" /> child properties.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildExpand">
      <MemberSignature Language="C#" Value="public void SetChildExpand (Gtk.Widget child, bool value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Set the "expand" property for <paramref name="child" />.</summary>
        <param name="child">a child of this <see cref="T:Gtk.Box" /></param>
        <param name="value">the new "expand" property for <paramref name="child" /></param>
        <remarks>See <see cref="M:Gtk.Box.SetChildPacking" /> for more details about <see cref="T:Gtk.Box" /> child properties.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildPackType">
      <MemberSignature Language="C#" Value="public Gtk.PackType GetChildPackType (Gtk.Widget child);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.PackType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>Get the pack type (start or end) for <paramref name="child" />.</summary>
        <param name="child">a child of this <see cref="T:Gtk.Box" /></param>
        <returns>
          <paramref name="child" />'s <see cref="T:Gtk.PackType" /></returns>
        <remarks>See <see cref="M:Gtk.Box.QueryChildPacking" /> for more details about <see cref="T:Gtk.Box" /> child properties.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildPackType">
      <MemberSignature Language="C#" Value="public void SetChildPackType (Gtk.Widget child, Gtk.PackType value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="value" Type="Gtk.PackType" />
      </Parameters>
      <Docs>
        <summary>Set the pack type (start or end) for <paramref name="child" />.</summary>
        <param name="child">a child of this <see cref="T:Gtk.Box" /></param>
        <param name="value">the new <see cref="T:Gtk.PackType" /> for <paramref name="child" /></param>
        <remarks>See <see cref="M:Gtk.Box.SetChildPacking" /> for more details about <see cref="T:Gtk.Box" /> child properties.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildPosition">
      <MemberSignature Language="C#" Value="public int GetChildPosition (Gtk.Widget child);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>Get the position of <paramref name="child" />.</summary>
        <param name="child">a child of this <see cref="T:Gtk.Box" /></param>
        <returns>
          <paramref name="child" />'s position</returns>
        <remarks>The child's position in the parent <see cref="T:Gtk.Box" /> reflects the order it was added in. Children with lower position values appear closer to the end they were packed onto. Children with higher position values appear closer to the center, or the opposite end.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildPosition">
      <MemberSignature Language="C#" Value="public void SetChildPosition (Gtk.Widget child, int value);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Set the position of <paramref name="child" />.</summary>
        <param name="child">a child of this <see cref="T:Gtk.Box" /></param>
        <param name="value">the new position for <paramref name="child" /></param>
        <remarks>The child's position in the parent <see cref="T:Gtk.Box" /> reflects the order it was added in. Children with lower position values appear closer to the end they were packed onto. Children with higher position values appear closer to the center, or the opposite end.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>