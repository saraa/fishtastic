<Type Name="Druid" FullName="Gnome.Druid">
  <TypeSignature Language="C#" Maintainer="John Luke" Value="public class Druid : Gtk.Container" />
  <AssemblyInfo>
    <AssemblyName>gnome-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.20.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Widget for sequentially stepping through some pages.</summary>
    <remarks>
      <para>
The druid is a multi-page widget, which lets the developer guide the user through a complex operation by breaking it up into simple steps, showing some helpful text in the process. It is composed of several <see cref="T:Gnome.DruidPage" />s.
</para>
      <para>
The widget which ultimately holds all of the druid's pages and information. This is the widget which the application developer then places inside an outer widget, such as a dialog box for ultimate display.
</para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Container</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    <Member MemberName="PrependPage">
      <MemberSignature Language="C#" Value="public void PrependPage (Gnome.DruidPage page);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="Gnome.DruidPage" />
      </Parameters>
      <Docs>
        <summary>
          <para>This will prepend a <see cref="T:Gnome.DruidPage" /> into the internal list of pages that the druid has.</para>
        </summary>
        <param name="page"> The page to be inserted.</param>
        <remarks>Since <see cref="T:Gnome.Druid" /> is just a container, you will need to also call Show() on the page, otherwise the page will not be shown.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertPage">
      <MemberSignature Language="C#" Value="public void InsertPage (Gnome.DruidPage back_page, Gnome.DruidPage page);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="back_page" Type="Gnome.DruidPage" />
        <Parameter Name="page" Type="Gnome.DruidPage" />
      </Parameters>
      <Docs>
        <summary>This will insert a page after back_page into the list of internal pages that the druid has.</summary>
        <param name="back_page"> The <see cref="T:Gnome.DruidPage" /> prior to the page to be inserted.</param>
        <param name="page">The <see cref="T:Gnome.DruidPage" /> to insert.</param>
        <remarks>
          <para>If back_page is not present in the list or null, page will be prepended to the list.</para>
          <para>Since <see cref="T:Gnome.Druid" /> is just a container, you will need to also call Show() on the page, otherwise the page will not be shown.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetButtonsSensitive">
      <MemberSignature Language="C#" Value="public void SetButtonsSensitive (bool back_sensitive, bool next_sensitive, bool cancel_sensitive, bool help_sensitive);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="back_sensitive" Type="System.Boolean" />
        <Parameter Name="next_sensitive" Type="System.Boolean" />
        <Parameter Name="cancel_sensitive" Type="System.Boolean" />
        <Parameter Name="help_sensitive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Sets the sensitivity of druid's control-buttons.</summary>
        <param name="back_sensitive">true if the back button is sensitive.</param>
        <param name="next_sensitive">true if the next button is sensitive.</param>
        <param name="cancel_sensitive">true if the cancel button is sensitive.</param>
        <param name="help_sensitive">true if the help button is sensitive.</param>
        <remarks>If the variables are true, then the buttons will be clickable. This function is used primarily by the actual GnomeDruidPage widgets.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPage">
      <MemberSignature Language="C#" Value="public void AppendPage (Gnome.DruidPage page);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="Gnome.DruidPage" />
      </Parameters>
      <Docs>
        <summary>This will append a <see cref="T:Gnome.DruidPage" /> onto the end of the internal list.</summary>
        <param name="page"> The <see cref="T:Gnome.DruidPage" /> to be appended.</param>
        <remarks>
          <para>Since <see cref="T:Gnome.Druid" /> is just a container, you will need to also call Show() on the page, otherwise the page will not be shown.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Druid (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Druid ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Creates a new GnomeDruid widget.</summary>
        <remarks>You need to add this druid to a dialog yourself, it is not a dialog.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="public Gnome.DruidPage Page { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gnome.DruidPage</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>This will make <paramref name="page" /> the currently showing page in the druid.</summary>
        <value>an object of type <see cref="T:Gnome.DruidPage" /></value>
        <remarks>
          <paramref name="page" /> must already be in the druid.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFinish">
      <MemberSignature Language="C#" Value="public bool ShowFinish { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>
          <para>This will make the given <see cref="T:Gnome.DruidPage" /> the currently showing page in the druid.</para>
        </summary>
        <value>an object of type <see cref="T:System.Boolean" /></value>
        <remarks>
          <para>The page must already be in the druid.</para>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("show_finish")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="ShowHelp">
      <MemberSignature Language="C#" Value="public bool ShowHelp { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Used to specify if the druid is currently showing the last page of the sequence.</summary>
        <value>an object of type <see cref="T:System.Boolean" /></value>
        <remarks>If set to true, the druid will display "Finish", rather than "Next".</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("show_help")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public event EventHandler Help;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Used to specify if the "Help" button on the druid is visible.</summary>
        <remarks>If set to true, the "Help" button is shown in the lower left corner of the widget.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("help")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public event EventHandler Cancel;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when the "Cancel" button of the druid is clicked.</summary>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("cancel")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gnome.Druid" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCancel">
      <MemberSignature Language="C#" Value="protected virtual void OnCancel ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Run when the druid is canceled.</summary>
        <remarks>Override this method if you want to add non-standard behaviour to occur when the druid is canceled</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHelp">
      <MemberSignature Language="C#" Value="protected virtual void OnHelp ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Run when the user requests help from the druid's interface.</summary>
        <remarks>Override this method to offer some help to the user when requested.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Druid (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="ConstructWithWindow">
      <MemberSignature Language="C#" Value="public Gtk.Widget ConstructWithWindow (string title, Gtk.Window parent, bool close_on_cancel);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="parent" Type="Gtk.Window" />
        <Parameter Name="close_on_cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Creates a new toplevel window with the title of <paramref name="title" /> (which can be <see langword="null" />) and a parent of <paramref name="parent" /> (which also can be <see langword="null" />).</summary>
        <param name="title">a <see cref="T:System.String" /></param>
        <param name="parent">a <see cref="T:Gtk.Window" /></param>
        <param name="close_on_cancel">a <see cref="T:System.Boolean" /></param>
        <returns>a <see cref="T:Gtk.Widget" /></returns>
        <remarks>The druid will be placed inside this window. The window and the druid will both be shown. When the druid gets destroyed, so will the window that is created here.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Druid (string title, bool close_on_cancel, out Gtk.Widget window);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="close_on_cancel" Type="System.Boolean" />
        <Parameter Name="window" Type="Gtk.Widget&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="title">a <see cref="T:System.String" /></param>
        <param name="close_on_cancel">a <see cref="T:System.Boolean" /></param>
        <param name="window">a <see cref="T:Gtk.Widget" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Druid (string title, bool close_on_cancel);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="close_on_cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="title">a <see cref="T:System.String" /></param>
        <param name="close_on_cancel">a <see cref="T:System.Boolean" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Druid (string title, Gtk.Window parent, bool close_on_cancel);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="parent" Type="Gtk.Window" />
        <Parameter Name="close_on_cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="title">a <see cref="T:System.String" /></param>
        <param name="parent">a <see cref="T:Gtk.Window" /></param>
        <param name="close_on_cancel">a <see cref="T:System.Boolean" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Druid (string title, Gtk.Window parent, bool close_on_cancel, out Gtk.Widget window);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="parent" Type="Gtk.Window" />
        <Parameter Name="close_on_cancel" Type="System.Boolean" />
        <Parameter Name="window" Type="Gtk.Widget&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="title">a <see cref="T:System.String" /></param>
        <param name="parent">a <see cref="T:Gtk.Window" /></param>
        <param name="close_on_cancel">a <see cref="T:System.Boolean" /></param>
        <param name="window">a <see cref="T:Gtk.Widget" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishButton">
      <MemberSignature Language="C#" Value="public Gtk.Button FinishButton { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Button</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The druid's "Finish" button.</summary>
        <value>a <see cref="T:Gtk.Button" /></value>
        <remarks>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="NextButton">
      <MemberSignature Language="C#" Value="public Gtk.Button NextButton { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Button</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The druid's "Next" button.</summary>
        <value>a <see cref="T:Gtk.Button" /></value>
        <remarks>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="HelpButton">
      <MemberSignature Language="C#" Value="public Gtk.Button HelpButton { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Button</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The druid's "Help" button.</summary>
        <value>a <see cref="T:Gtk.Button" /></value>
        <remarks>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="BackButton">
      <MemberSignature Language="C#" Value="public Gtk.Button BackButton { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Button</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The druid's "Back" button.</summary>
        <value>a <see cref="T:Gtk.Button" /></value>
        <remarks>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="CancelButton">
      <MemberSignature Language="C#" Value="public Gtk.Button CancelButton { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Button</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The druid's "Cancel" button.</summary>
        <value>a <see cref="T:Gtk.Button" /></value>
        <remarks>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
  </Members>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
  </Attributes>
</Type>
