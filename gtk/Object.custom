// Gtk.Object.custom - Gtk Object class customizations
//
// Author: Mike Kestner <mkestner@speakeasy.net>
//
// Copyright (c) 2002-2003 Mike Kestner
//
// This code is inserted after the automatically generated code.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.


		[DllImport("gtksharpglue-2.0")]
		private static extern bool gtksharp_object_is_floating (IntPtr raw);

		[DllImport("gtksharpglue-2.0")]
		private static extern bool gtksharp_object_set_floating (IntPtr raw, bool val);

		[DllImport("libgobject-2.0-0.dll")]
		private static extern void g_object_ref (IntPtr raw);

		protected override IntPtr Raw {
			get {
				return base.Raw;
			}
			set {
				base.Raw = value;
				if (value == IntPtr.Zero)
					return;

				if (gtksharp_object_is_floating (value)) {
					g_object_ref (value);
					Sink ();
				}
//				System.Diagnostics.Debug.WriteLine ("Gtk.Object:set_Raw: object type is: " + (this as GLib.Object).GType.Name + " refcount now: " + RefCount + " needs_ref: " + needs_ref);
			}
		}

		public bool IsFloating {
			get {
				return gtksharp_object_is_floating (Handle);
			}
			set {
				gtksharp_object_set_floating (Handle, value);
			}
		}

