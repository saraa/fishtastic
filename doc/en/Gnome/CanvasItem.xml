<Type Name="CanvasItem" FullName="Gnome.CanvasItem">
  <TypeSignature Language="C#" Value="public class CanvasItem : Gtk.Object, IWrapper, IDisposable" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>gnome-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="AffineRelative">
      <MemberSignature Language="C#" Value="public void AffineRelative (double [] affine);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="affine" Type="System.Double []" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="affine">To be added: an object of type 'double []'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lower">
      <MemberSignature Language="C#" Value="public void Lower (int positions);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="positions" Type="System.Int32" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="positions">To be added: an object of type 'int'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestRedrawSvp">
      <MemberSignature Language="C#" Value="public void RequestRedrawSvp (Art.SVP svp);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="svp" Type="Art.SVP" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="svp">To be added: an object of type 'Art.SVP'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GrabFocus">
      <MemberSignature Language="C#" Value="public void GrabFocus ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="LowerToBottom">
      <MemberSignature Language="C#" Value="public void LowerToBottom ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public void Hide ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseToTop">
      <MemberSignature Language="C#" Value="public void RaiseToTop ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="W2i">
      <MemberSignature Language="C#" Value="public void W2i (double x, double y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="x" Type="System.Double" />
		<Parameter Name="y" Type="System.Double" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="x">To be added: an object of type 'double'</param>
        <param name="y">To be added: an object of type 'double'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSvp">
      <MemberSignature Language="C#" Value="public void UpdateSvp (Art.SVP p_svp, Art.SVP new_svp);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="p_svp" Type="Art.SVP" />
		<Parameter Name="new_svp" Type="Art.SVP" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="p_svp">To be added: an object of type 'Art.SVP'</param>
        <param name="new_svp">To be added: an object of type 'Art.SVP'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValist">
      <MemberSignature Language="C#" Value="public void SetValist (string first_arg_name, IntPtr args);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="first_arg_name" Type="System.String" />
		<Parameter Name="args" Type="System.IntPtr" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="first_arg_name">To be added: an object of type 'string'</param>
        <param name="args">To be added: an object of type 'IntPtr'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Construct">
      <MemberSignature Language="C#" Value="public void Construct (Gnome.CanvasGroup parent, string first_arg_name, IntPtr args);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="parent" Type="Gnome.CanvasGroup" />
		<Parameter Name="first_arg_name" Type="System.String" />
		<Parameter Name="args" Type="System.IntPtr" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="parent">To be added: an object of type 'Gnome.CanvasGroup'</param>
        <param name="first_arg_name">To be added: an object of type 'string'</param>
        <param name="args">To be added: an object of type 'IntPtr'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSvpClip">
      <MemberSignature Language="C#" Value="public void UpdateSvpClip (Art.SVP p_svp, Art.SVP new_svp, Art.SVP clip_svp);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="p_svp" Type="Art.SVP" />
		<Parameter Name="new_svp" Type="Art.SVP" />
		<Parameter Name="clip_svp" Type="Art.SVP" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="p_svp">To be added: an object of type 'Art.SVP'</param>
        <param name="new_svp">To be added: an object of type 'Art.SVP'</param>
        <param name="clip_svp">To be added: an object of type 'Art.SVP'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public void GetBounds (out double x1, out double y1, out double x2, out double y2);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="x1" Type="System.Double&amp;" RefType="out" />
		<Parameter Name="y1" Type="System.Double&amp;" RefType="out" />
		<Parameter Name="x2" Type="System.Double&amp;" RefType="out" />
		<Parameter Name="y2" Type="System.Double&amp;" RefType="out" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="x1">To be added: an object of type 'double&amp;'</param>
        <param name="y1">To be added: an object of type 'double&amp;'</param>
        <param name="x2">To be added: an object of type 'double&amp;'</param>
        <param name="y2">To be added: an object of type 'double&amp;'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="AffineAbsolute">
      <MemberSignature Language="C#" Value="public void AffineAbsolute (double [] affine);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="affine" Type="System.Double []" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="affine">To be added: an object of type 'double []'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reparent">
      <MemberSignature Language="C#" Value="public void Reparent (Gnome.CanvasGroup new_group);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="new_group" Type="Gnome.CanvasGroup" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="new_group">To be added: an object of type 'Gnome.CanvasGroup'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="I2wAffine">
      <MemberSignature Language="C#" Value="public void I2wAffine (double [] affine);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="affine" Type="System.Double []" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="affine">To be added: an object of type 'double []'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ungrab">
      <MemberSignature Language="C#" Value="public void Ungrab (uint etime);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="etime" Type="System.UInt32" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="etime">To be added: an object of type 'uint'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="I2cAffine">
      <MemberSignature Language="C#" Value="public void I2cAffine (double [] affine);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="affine" Type="System.Double []" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="affine">To be added: an object of type 'double []'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int positions);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="positions" Type="System.Int32" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="positions">To be added: an object of type 'int'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="I2w">
      <MemberSignature Language="C#" Value="public void I2w (double x, double y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="x" Type="System.Double" />
		<Parameter Name="y" Type="System.Double" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="x">To be added: an object of type 'double'</param>
        <param name="y">To be added: an object of type 'double'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (double dx, double dy);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
		<Parameter Name="dx" Type="System.Double" />
		<Parameter Name="dy" Type="System.Double" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="dx">To be added: an object of type 'double'</param>
        <param name="dy">To be added: an object of type 'double'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestUpdate">
      <MemberSignature Language="C#" Value="public void RequestUpdate ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBounds">
      <MemberSignature Language="C#" Value="public void ResetBounds ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected virtual void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanvasItem (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
		<Parameter Name="raw" Type="System.IntPtr" />
	</Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of CanvasItem, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CanvasItem ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gnome.CanvasItem'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanvasItem (Gnome.CanvasGroup group, uint type);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
		<Parameter Name="group" Type="Gnome.CanvasGroup" />
		<Parameter Name="type" Type="System.UInt32" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="group">To be added: an object of type 'Gnome.CanvasGroup'</param>
        <param name="type">To be added: an object of type 'uint'</param>
        <returns>To be added: an object of type 'Gnome.CanvasItem'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The GLib Type for Gnome.CanvasItem</summary>
        <returns>The GLib Type for the Gnome.CanvasItem class.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Canvas">
      <MemberSignature Language="C#" Value="public Gnome.Canvas Canvas { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gnome.Canvas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gnome.Canvas'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public Gnome.CanvasItem Parent { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gnome.CanvasItem</ReturnType>
      </ReturnValue>
      <Parameters>
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'Gnome.CanvasItem'</param>
        <returns>To be added: an object of type 'Gnome.CanvasItem'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanvasEvent">
      <MemberSignature Language="C#" Value="public event GnomeSharp.CanvasEventHandler CanvasEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue><ReturnType>GnomeSharp.CanvasEventHandler</ReturnType></ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CanvasItem (GLib.Type gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
		<Parameter Name="gtype" Type="GLib.Type" />
	</Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="gtype">GLib type for the type</param>
        <returns>Creates a new instance of CanvasItem, using the GLib-provided type</returns>
        <remarks>
          <para>This is a constructor used by derivative types of <see cref="T:Gnome.CanvasItem" /> that would have their own GLib type assigned to it.  This is not typically used by C# code.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
