<Type Name="InitiallyUnowned" FullName="GLib.InitiallyUnowned">
  <TypeSignature Language="C#" Value="public class InitiallyUnowned : GLib.Object" />
  <AssemblyInfo>
    <AssemblyName>glib-sharp</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>GLib.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Floating reference base class.</summary>
    <remarks>Subclasses of this type instantiate with an unowned native GObject reference.</remarks>
    <since version="Gtk# 2.10" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InitiallyUnowned (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <param name="gtype">Native type.</param>
        <summary>Do not use.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InitiallyUnowned (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">To be added.</param>
        <summary>Internal constructor.</summary>
        <remarks>Do not use in application code.  Exposed for language binding use.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Native type identifier.</summary>
        <value>the GInitiallyUnowned native GType.</value>
        <remarks>For internal use.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
