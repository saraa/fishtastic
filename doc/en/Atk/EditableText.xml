<Type Name="EditableText" FullName="Atk.EditableText">
  <TypeSignature Language="C#" Maintainer="auto" Value="public interface EditableText : GLib.IWrapper" />
  <AssemblyInfo>
    <AssemblyName>atk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>The ATK interface implemented by components containing user-editable text content</summary>
    <remarks>
      <para>
        <see cref="T:Atk.EditableText" /> should be implemented by UI components which
        contain text which the user can edit, via the <see cref="T:Atk.Object" /> corresponding to that component (see <see cref="T:Atk.Object" />).
      </para>
      <para>
        <see cref="T:Atk.EditableText" /> is a subclass of <see cref="T:Atk.Text" />, and as such, an
        object which implements AtkEditableText is by definition an
        <see cref="T:Atk.Text" /> implementor as well.
      </para>
    </remarks>
  </Docs>
  <Interfaces>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName="DeleteText">
      <MemberSignature Language="C#" Value="public void DeleteText (int start_pos, int end_pos);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start_pos" Type="System.Int32" />
        <Parameter Name="end_pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Delete text</summary>
        <param name="start_pos">start position</param>
        <param name="end_pos">end position</param>
        <remarks>
          <para>
            This only deletes text up to, but not including <paramref name="end_pos" />. </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteText">
      <MemberSignature Language="C#" Value="public void PasteText (int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Paste text from clipboard to specified position.</summary>
        <param name="position">position to paste</param>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="CutText">
      <MemberSignature Language="C#" Value="public void CutText (int start_pos, int end_pos);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start_pos" Type="System.Int32" />
        <Parameter Name="end_pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Cut text</summary>
        <param name="start_pos">start position</param>
        <param name="end_pos">end position</param>
        <remarks>
          <para>
            This method only cuts the text up to <paramref name="end_pos" />, it does not include the text at that position.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyText">
      <MemberSignature Language="C#" Value="public void CopyText (int start_pos, int end_pos);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start_pos" Type="System.Int32" />
        <Parameter Name="end_pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Copy text</summary>
        <param name="start_pos">start position</param>
        <param name="end_pos">end position</param>
        <remarks>
          <para>
            This method only copies the text up to <paramref name="end_pos" />, it does not include the text at that position.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRunAttributes">
      <MemberSignature Language="C#" Value="public bool SetRunAttributes (GLib.SList attrib_set, int start_offset, int end_offset);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrib_set" Type="GLib.SList" />
        <Parameter Name="start_offset" Type="System.Int32" />
        <Parameter Name="end_offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Sets the attributes for a specified range.</summary>
        <param name="attrib_set">an <see cref="T:Atk.AttributeSet" /></param>
        <param name="start_offset">start of range in which to set attributes</param>
        <param name="end_offset">end of range in which to set attributes</param>
        <returns>
          <see langword="true" /> if attributes successfully set for
          the specified range, otherwise <see langword="false" /></returns>
        <remarks>
          <para>
            Sets the attributes for a specified range. See the
            ATK_ATTRIBUTE macros (such as ATK_ATTRIBUTE_LEFT_MARGIN)
            for examples of attributes that can be set. Note that
            other attributes that do not have corresponding
            ATK_ATTRIBUTE macros may also be set for certain text
            widgets.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextContents">
      <MemberSignature Language="C#" Value="public string TextContents { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Set text contents of text.</summary>
        <value>contents of text</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InsertText">
      <MemberSignature Language="C#" Value="public void InsertText (string str1ng, ref int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str1ng" Type="System.String" />
        <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="str1ng">To be added.</param>
        <param name="position">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
