<Type Name="IdleHandler" FullName="GLib.IdleHandler">
  <TypeSignature Language="C#" Value="public sealed delegate bool IdleHandler ();" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>glib-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Delegate to invoke during idle time</summary>
    <remarks>
      <para>
	The handler specified by the delegate will be invoked during
	the GLib main loop execution.  If the handler returns <see langword="true" /> the handler is kept for another round of
	Idle execution, if <see langword="false" /> is returned, the
	handler is removed.
      </para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members />
  <Parameters></Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
</Type>