<Type Name="EventMotion" FullName="Gdk.EventMotion">
  <TypeSignature Language="C#" Value="public sealed struct EventMotion;" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>gdk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Generated when the pointer moves.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes />
  <Members>
    <Member MemberName="Time">
      <MemberSignature Language="C#" Value="public uint Time { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The time of the event in milliseconds.</summary>
        <returns>The time of the event in milliseconds.</returns>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public Gdk.ModifierType State { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.ModifierType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>An enum representing the state of the modifier keys (e.g. Control, Shift and Alt) and the pointer buttons.</summary>
        <returns>An enum representing the state of the modifier keys (e.g. Control, Shift, Alt) and the pointer buttons.</returns>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The x coordinate of the pointer relative to window.</summary>
        <returns>The x coordinate of the pointer relative to the window.</returns>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The y coordinate of the pointer relative to the window.</summary>
        <returns>The y coordinate of the pointer relative to the window.</returns>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XRoot">
      <MemberSignature Language="C#" Value="public double XRoot { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The x coordinate of the pointer relative to the root of the screen.</summary>
        <returns>The x coordinate of the pointer relative to the root of the screen.</returns>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="YRoot">
      <MemberSignature Language="C#" Value="public double YRoot { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The y coordinate of the pointer relative to the root of the screen.</summary>
        <returns>The y coordinate of the pointer relative to the root of the screen.</returns>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHint">
      <MemberSignature Language="C#" Value="public bool IsHint { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>True if this event is just a hint.</summary>
        <returns>True if the event is just a hint.</returns>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Device">
      <MemberSignature Language="C#" Value="public Gdk.Device Device { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Device</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The device where the event originated.</summary>
        <returns>The device where the event originated.</returns>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Axes">
      <MemberSignature Language="C#" Value="public double [] Axes { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:Gdk.EventMotion.X" />,<see cref="P:Gdk.EventMotion.Y" /> translated to the axes of <see cref="P:Gdk.EventMotion.Device" />, or null if <see cref="P:Gdk.EventMotion.Device" /> is the mouse.</summary>
        <returns>
          <see cref="Gdk.EventMotion.X" />,<see cref="Gdk.EventMotion.Y" /> translated to the axes of <see cref="Gdk.EventMotion.Device" />, or null if <see cref="Gdk.EventMotion.Device" /> is the mouse.</returns>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventMotion (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor.</summary>
        <param name="raw">raw unmanaged pointer.</param>
        <returns>A new <see cref="T:Gdk.EventMotion" /></returns>
        <remarks>None.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>