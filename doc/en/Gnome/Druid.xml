<Type Name="Druid" FullName="Gnome.Druid">
  <TypeSignature Language="C#" Value="public class Druid : Gtk.Container, Implementor, IWrapper, IDisposable" Maintainer="John Luke" />
  <AssemblyInfo>
    <AssemblyName>gnome-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Widget for sequentially stepping through some pages.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Container</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="PrependPage">
      <MemberSignature Language="C#" Value="public void PrependPage (Gnome.DruidPage page);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="Gnome.DruidPage" />
      </Parameters>
      <Docs>
        <summary>This will prepend a <see cref="T:Gnome.DruidPage" /> into the internal list of pages of the druid.</summary>
        <param name="page">an object of type <see cref="T:Gnome.DruidPage" /></param>
        <remarks>Since GnomeDruid is just a container, you will need to also call <see cref="M:Gtk.Widget.Show()" /> on the page, otherwise the page will not be shown.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertPage">
      <MemberSignature Language="C#" Value="public void InsertPage (Gnome.DruidPage back_page, Gnome.DruidPage page);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="back_page" Type="Gnome.DruidPage" />
        <Parameter Name="page" Type="Gnome.DruidPage" />
      </Parameters>
      <Docs>
        <summary>This will insert <paramref name="page" /> after <paramref name="back_page" /> into the list of internal pages of the druid.</summary>
        <param name="back_page">an object of type <see cref="T:Gnome.DruidPage" /></param>
        <param name="page">an object of type <see cref="T:Gnome.DruidPage" /></param>
        <remarks>If <paramref name="back_page" /> is not present in the list or <see langword="null" />, <paramref name="page" /> will be prepended to the list. Since <see cref="T:Gnome.Druid" /> is just a container, you will need to also call <see cref="M:Gtk.Widget.Show()" /> on the page, otherwise the page will not be shown.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetButtonsSensitive">
      <MemberSignature Language="C#" Value="public void SetButtonsSensitive (bool back_sensitive, bool next_sensitive, bool cancel_sensitive, bool help_sensitive);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="back_sensitive" Type="System.Boolean" />
        <Parameter Name="next_sensitive" Type="System.Boolean" />
        <Parameter Name="cancel_sensitive" Type="System.Boolean" />
        <Parameter Name="help_sensitive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Sets the sensitivity of of the control-buttons for the <see cref="T:Gnome.Druid" />.</summary>
        <param name="back_sensitive">an object of type <see cref="T:System.Boolean" /></param>
        <param name="next_sensitive">an object of type <see cref="T:System.Boolean" /></param>
        <param name="cancel_sensitive">an object of type <see cref="T:System.Boolean" /></param>
        <param name="help_sensitive">an object of type <see cref="T:System.Boolean" /></param>
        <remarks>If the variables are <see langword="true" />, then they will be clickable. This function is used primarily by the actual <see cref="T:Gnome.DruidPage" /> widgets.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPage">
      <MemberSignature Language="C#" Value="public void AppendPage (Gnome.DruidPage page);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="Gnome.DruidPage" />
      </Parameters>
      <Docs>
        <summary>This will append <paramref name="page" /> onto the end of the internal list of the druid.</summary>
        <param name="page">an object of type <see cref="T:Gnome.DruidPage" /></param>
        <remarks>Since GnomeDruid is just a container, you will need to also call <see cref="M:Gtk.Widget.Show()" /> on the page, otherwise the page will not be shown.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructWithWindow">
      <MemberSignature Language="C#" Value="public void ConstructWithWindow (string title, Gtk.Window parent, bool close_on_cancel, Gtk.Widget window);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="parent" Type="Gtk.Window" />
        <Parameter Name="close_on_cancel" Type="System.Boolean" />
        <Parameter Name="window" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>Creates a new toplevel window with the title of <paramref name="title" /> (which can be <see langword="null" />) and a parent of <paramref name="parent" /> (which also can be <see langword="null" />).</summary>
        <param name="title">an object of type <see cref="T:System.String" /></param>
        <param name="parent">an object of type <see cref="T:Gtk.Window" /></param>
        <param name="close_on_cancel">an object of type <see cref="T:System.Boolean" /></param>
        <param name="window">an object of type <see cref="T:Gtk.Widget" /></param>
        <remarks>The druid will be placed inside this window. The window and the druid will both be shown. If you need the window widget pointer you can optionally get it through the last argument. When the druid gets destroyed, so will the window that is created here.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected override void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Druid (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of Druid, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Druid ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Default constructor</summary>
        <returns>an object of type <see cref="T:Gnome.Druid" /></returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Druid (string title, Gtk.Window parent, bool close_on_cancel, Gtk.Widget window);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="parent" Type="Gtk.Window" />
        <Parameter Name="close_on_cancel" Type="System.Boolean" />
        <Parameter Name="window" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>Creates a new <see cref="T:Gnome.Druid" /> instance.</summary>
        <param name="title">an object of type <see cref="T:System.String" /></param>
        <param name="parent">an object of type <see cref="T:Gtk.Window" /></param>
        <param name="close_on_cancel">an object of type <see cref="T:System.Boolean" /></param>
        <param name="window">an object of type <see cref="T:Gtk.Widget" /></param>
        <returns>an object of type <see cref="T:Gnome.Druid" /></returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="public Gnome.DruidPage Page { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gnome.DruidPage</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>This will make <paramref name="page" /> the currently showing page in the druid.</summary>
        <param name="value">an object of type <see cref="T:Gnome.DruidPage" /></param>
        <returns>an object of type <see cref="T:Gnome.DruidPage" /></returns>
        <remarks>
          <paramref name="page" /> must already be in the druid.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFinish">
      <MemberSignature Language="C#" Value="public bool ShowFinish { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Used to specify if the druid is currently showing the last page of the sequence (and hence should display "Finish", rather than "Next").</summary>
        <param name="value">an object of type <see cref="T:System.Boolean" /></param>
        <returns>an object of type <see cref="T:System.Boolean" /></returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowHelp">
      <MemberSignature Language="C#" Value="public bool ShowHelp { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Sets the "Help" button on the druid to be visible in the lower left corner of the widget, if <see langword="true" />.</summary>
        <param name="value">an object of type <see cref="T:System.Boolean" /></param>
        <returns>an object of type <see cref="T:System.Boolean" /></returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public event EventHandler Help;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when the "Help" button of the druid is clicked.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public event EventHandler Cancel;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when the "Cancel" button of the druid is clicked.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:GLib.GType" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideCancel">
      <MemberSignature Language="C#" Value="protected static void OverrideCancel (GLib.GType gtype);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideHelp">
      <MemberSignature Language="C#" Value="protected static void OverrideHelp (GLib.GType gtype);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCancel">
      <MemberSignature Language="C#" Value="protected virtual void OnCancel ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHelp">
      <MemberSignature Language="C#" Value="protected virtual void OnHelp ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Druid (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <returns>a <see cref="T:Gnome.Druid" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>