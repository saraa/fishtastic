<Type Name="Attribute" FullName="Pango.Attribute">
  <TypeSignature Language="C#" Value="public sealed struct Attribute;" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>pango-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>This is the base class for all Pango text attributes</summary>
    <remarks />
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes />
  <Members>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public bool Equal (Pango.Attribute attr2);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attr2" Type="Pango.Attribute" />
      </Parameters>
      <Docs>
        <summary>Compare two attributes for equality.</summary>
        <param name="attr2">a <see cref="T:Pango.Attribute" /> to be tested for equality.</param>
        <returns>
          <see langword="true" /> if the two attributes have the same value.</returns>
        <remarks>This compares only the actual value of the two attributes and not the ranges that the attributes apply to.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public Pango.Attribute Copy ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Attribute</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Make a copy of an attribute.</summary>
        <returns>a new <see cref="T:Pango.Attribute" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType property</summary>
        <returns>a <see cref="T:GLib.GType" /></returns>
        <remarks>Returns the <see cref="T:GLib.GType" /> value for <see cref="T:Pango.Attribute" /></remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public virtual IntPtr Handle { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pointer to the raw PangoAttribute structure associated with this object.</summary>
        <returns>a <see cref="T:System.IntPtr" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Pango.AttrType Type { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Pango.AttrType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The attribute type</summary>
        <returns>a <see cref="T:Pango.AttrType" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="StartIndex">
      <MemberSignature Language="C#" Value="public uint StartIndex { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>the start index of the range (in bytes).</summary>
        <returns>a <see cref="T:System.UInt32" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="EndIndex">
      <MemberSignature Language="C#" Value="public uint EndIndex { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>end index of the range.</summary>
        <returns>a <see cref="T:System.UInt32" /></returns>
        <remarks>The character containing this byte index is not included in the range.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public static Pango.Attribute GetAttribute (IntPtr raw);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Gets an Attribute or Attribute subclass for a native PangoAttribute pointer</summary>
        <param name="raw">a <see cref="T:System.IntPtr" /></param>
        <returns>a <see cref="T:Pango.Attribute" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected override void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalizer</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dispose method</summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>