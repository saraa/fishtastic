<Type Name="DelegateWrapper" FullName="GLib.DelegateWrapper">
  <TypeSignature Language="C#" Value="public class DelegateWrapper" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>glib-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wrapper class for delegates.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DelegateWrapper (object o);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">a <see cref="T:System.Object" /></param>
        <summary>The <paramref name="o" /> is the object that creates the instance of the DelegateWrapper derived class or null if created from a static method.</summary>
        <remarks>Note that the instances will never be disposed if they are created in a static method.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Callback wrappers should be manually managed for persistence.")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
  </Members>
</Type>
