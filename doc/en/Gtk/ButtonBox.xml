<Type Name="ButtonBox" FullName="Gtk.ButtonBox">
  <TypeSignature Language="C#" Value="public class ButtonBox : Gtk.Box, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>ButtonBox is not a thread-safe object</ThreadSafetyStatement>
  <Docs>
    <summary>ButtonBox is a container for laying out <see cref="T:Gtk.Button"/> widgets.</summary>
    <remarks><para>A button box should be used to provide a consistent layout of buttons throughout your application. Specific button boxes are <see cref="T:Gtk.HButtonBox"/> for horizontal groups of buttons, and <see cref="T:Gtk.VButtonBox"/> for vertical button groups.</para></remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Box</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="StyleGetType">
      <MemberSignature Language="C#" Value="public static uint StyleGetType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The <see cref="T:Glib.Object"/> type ID for the <see cref="T:Gtk.ButtonBoxStyle"/> enumerated type.</summary>
        <returns></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildSecondary">
      <MemberSignature Language="C#" Value="public void SetChildSecondary (Gtk.Widget child, bool is_secondary);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="is_secondary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Sets whether <paramref name="child"/> should appear in a secondary group of children. A typical use of a secondary child is the help button in a dialog.</summary>
        <param name="child">A widget that is already packed into this button box</param>
        <param name="is_secondary"><see langword="true"/> if <paramref name="child"/> should be placed in a secondary group, <see langword="false"/> otherwise.</param>
        <remarks><para>A secondary group appears after the other children if the style is <see cref="P:Gtk.ButtonBoxStyle.Start"/>, <see cref="P:Gtk.ButtonBoxStyle.Spread"/> or <see cref="P:Gtk.ButtonBoxStyle.Edge"/>, and before the the other children if the style is <see cref="P:Gtk.ButtonBoxStyle.End"/>. For horizontal button boxes, the definition of before/after depends on direction of the widget (see <see cref="P:Gtk.Widget.Direction"/>). If the style is <see cref="P:Gtk.ButtonBoxStyle.Start"/> or <see cref="P:Gtk.ButtonBoxStyle.End"/>, then the secondary children are aligned at the other end of the button box from the main children. For the other styles, they appear immediately next to the main children.</para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected virtual void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Destroy and free all resources used by this widget</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonBox (uint gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="gtype"></param>
        <returns></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonBox (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Used for language bindings only.</summary>
        <param name="raw">A pointer to a GtkButtonBox, as returned by the Gtk+ C API.</param>
        <returns>A C# Gtk.ButtonBox that wraps the <paramref name="raw"/> parameter.</returns>
        <remarks><para>If you don't already know that you need this constructor, it should not be used.</para></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonBox ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Internal constructor</summary>
        <returns></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the type of this object, as registered with the GLib object system.</summary>
        <returns>A number that uniquely identifies this type in the GLib object system.</returns>
        <remarks><para>Mostly for internal use.</para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public Gtk.ButtonBoxStyle Layout { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ButtonBoxStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Gtk.ButtonBoxStyle" />
      </Parameters>
      <Docs>
        <summary>Alter the way the buttons in this box are arranged.</summary>
        <param name="value">the new style to arrange the buttons in.</param>
        <returns>The style that the child widgets are currently arranged in.</returns>
        <remarks>See <see cref="T:Gtk.ButtonBoxStyle"/> for more information about the styles of button boxes.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutStyle">
      <MemberSignature Language="C#" Value="public Gtk.ButtonBoxStyle LayoutStyle { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ButtonBoxStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Gtk.ButtonBoxStyle" />
      </Parameters>
      <Docs>
        <summary>See <see cref="P:Gtk.ButtonBox.Layout"/></summary>
        <param name="value"></param>
        <returns></returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>