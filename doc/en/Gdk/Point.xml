<Type Name="Point" FullName="Gdk.Point">
  <TypeSignature Language="C#" Value="public sealed struct Point;" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>gdk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Represents an ordered pair of integer x- and y-coordinates that defines a point in a two-dimensional, Cartesian plane.</summary>
    <remarks />
  </Docs>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes />
  <Members>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static Gdk.Point Zero;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The point (0, 0).</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static Gdk.Point New (IntPtr raw);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">a <see cref="M:IntPtr" />, pointer to internal data</param>
        <returns />
        <remarks>This is an internal constructor, and should not be used by user code.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point (int x, int y);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Creates a Point object from integer x- and y-coordinates.</summary>
        <param name="x">The x-coordinate.</param>
        <param name="y">The y-coordinate.</param>
        <returns />
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The point as a <see cref="T:System.String" />.</summary>
        <returns>The point as a <see cref="T:System.String" />.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public int X;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The x-coordinate of the Point.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public int Y;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The y-coordinate of the Point.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Checks if the point is (0,0)</summary>
        <returns>true if this == (0,0</returns>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <summary>Equality for points</summary>
        <param name="o">a <see cref="T:System.Object" /></param>
        <returns>true if <paramref name="o"/> == this</returns>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hashing for points</summary>
        <returns>a hash code</returns>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (int dx, int dy);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Moves this point by quanities dx and dy</summary>
        <param name="dx">Quanity by which to change X</param>
        <param name="dy">Quanity by which to change Y</param>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Point (Gdk.Size sz);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="sz" Type="Gdk.Size" />
      </Parameters>
      <Docs>
        <summary>Constructs a point from a <see cref="T:Gdk.Size" /></summary>
        <param name="sz">a <see cref="T:Gdk.Size" /></param>
        <returns><paramref name="sz"/> as a <see cref="T:Gdk.Point" /></returns>
        <remarks>The point will have an X of <paramref name="sz"/>.Width and a Y of <paramref name="sz"/>.Height</remarks>
      </Docs>
    </Member>
  </Members>
</Type>