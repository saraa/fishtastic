<Type Name="Frame" FullName="Gtk.Frame">
  <TypeSignature Language="C#" Value="public class Frame : Gtk.Bin, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="Lee Mallabone" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>A <see cref="T:Gtk.Bin" /> with a decorative frame and optional <see cref="T:Gtk.Label" />.</summary>
    <remarks>
      <para>This widget draws a frame around whatever it contains, so is often used to visually group a set of widgets together.</para>
      <para>If present, a label is drawn in a gap in the top side of the frame. The position of the label can be controlled with <see cref="M:Gtk.Frame.SetLabelAlign(System.Single,System.Single)" />.</para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Bin</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected virtual void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Frame (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of Frame, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Frame (string label);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Create a new frame with a label in the top left corner.</summary>
        <param name="label">The text to appear as this frame's label</param>
        <returns>A new Frame.</returns>
        <remarks>
          <para>This creates a new frame with a <see cref="T:Gtk.Label" /> widget in the top left corner, displaying the text passed in as <paramref name="label" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Frame ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Create a new frame with no label</summary>
        <returns>A new Frame with a null <see cref="P:Gtk.Frame.LabelWidget" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:GLib.Type" /> for <see cref="T:Gtk.Frame" /></summary>
        <returns>The <see cref="T:GLib.Type" /> for the <see cref="T:Gtk.Frame" /> class.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LabelWidget">
      <MemberSignature Language="C#" Value="public Gtk.Widget LabelWidget { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Manage the widget that acts as a frame's <see cref="T:Gtk.Label" />.</summary>
        <param name="value">A widget to replace the existing label.</param>
        <returns>The current <see cref="T:Gtk.Widget" /> in use as this Frame's label.</returns>
        <remarks>
          <para>Despite its name, this property does not have to set a <see cref="T:Gtk.Label" /> widget as its label. Because of the way that Gtk containers work, you may add an arbitrary widget as the label for this frame. However, a genuine <see cref="T:Gtk.Label" /> is recommended for consistency with other applications.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelYalign">
      <MemberSignature Language="C#" Value="public float LabelYalign { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Set the vertical alignment of the <see cref="P:Gtk.Frame.LabelWidget" />.</summary>
        <param name="value">A new vertical alignment between 0 and 1.0</param>
        <returns>The existing vertical alignment of this Frame's label</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LabelXalign">
      <MemberSignature Language="C#" Value="public float LabelXalign { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Set the horizontal alignment of the <see cref="P:Gtk.Frame.LabelWidget" />.</summary>
        <param name="value">A new horizontal alignment between 0 and 1.0</param>
        <returns>The existing horizontal alignment of this Frame's label</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ShadowType">
      <MemberSignature Language="C#" Value="public Gtk.ShadowType ShadowType { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ShadowType</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Manage the appearance of this frame's border.</summary>
        <param name="value">A new shadow type.</param>
        <returns>The current shadow style that this Frame is rendered with.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>The string that is visible as the Frame's label</summary>
        <param name="value">Sets the text of the label, if this Frame has one.</param>
        <returns>The text of a label if <see cref="P:Gtk.Frame.LabelWidget" /> is a <see cref="T:Gtk.Label" />, null otherwise.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Shadow">
      <MemberSignature Language="C#" Value="public Gtk.ShadowType Shadow { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ShadowType</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Manage the appearance of this frame's border.</summary>
        <param name="value">A new shadow type.</param>
        <returns>The current shadow style that this Frame is rendered with.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Frame (GLib.Type gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.Type" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="gtype">GLib type for the type</param>
        <returns>Creates a new instance of Frame, using the GLib-provided type</returns>
        <remarks>
          <para>This is a constructor used by derivative types of <see cref="T:Gtk.Frame" /> that would have their own GLib type assigned to it.  This is not typically used by C# code.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>