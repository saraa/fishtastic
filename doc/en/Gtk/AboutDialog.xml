<Type Name="AboutDialog" FullName="Gtk.AboutDialog">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class AboutDialog : Gtk.Dialog" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 71 EB 6C 55 75 52 9C BF 72 44 F7 A6 EA 05 62 84 F9 EA E0 3B CF F2 CC 13 2C 9C 49 0A B3 09 EA B0 B5 6B CE 44 9D F5 03 D9 C0 A8 1E 52 05 85 CD BE 70 E2 FB 90 43 4B AC 04 FA 62 22 A8 00 98 B7 A1 A7 B3 AF 99 1A 41 23 24 BB 43 25 F6 B8 65 BB 64 EB F6 D1 C2 06 D5 73 2D DF BC 70 A7 38 9E E5 3E 0C 24 6E 32 79 74 1A D0 05 03 E4 98 42 E1 9B F3 7B 19 8B 40 21 26 CB 36 89 C2 EA 64 96 A4 7C B4]</AssemblyPublicKey>
    <AssemblyVersion>2.10.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Display information about an application</summary>
    <remarks>
      <para>
The <see cref="T:Gtk.AboutDialog" /> offers a simple way to display information about a program like its logo, name, copyright, website and license. It is also possible to give credits to the authors, documenters, translators and artists who have worked on the program. An about dialog is typically opened when the user selects the About option from the Help menu. All parts of the dialog are optional.
</para>
      <para>
About dialogs often contain links and email addresses. <see cref="T:Gtk.AboutDialog" /> supports this by offering global hooks, which are called when the user clicks on a link or email address, see <see cref="M:Gtk.AboutDialog.SetEmailHook()" /> and <see cref="M:Gtk.AboutDialog.SetUrlHook()" />. Email addresses in the authors, documenters and artists properties are recognized by looking for &lt;user@host&gt;, URLs are recognized by looking for http://url, with url extending to the next space, tab or line break.
</para>
      <!--
<para>
To make constructing a <see cref="T:Gtk.AboutDialog" /> as convenient as possible, you can use the function <see cref="M:Gtk.ShowAboutDialog()" /> which constructs and shows a dialog and keeps it around so that it can be shown again.
</para>-->
    </remarks>
    <since version="Gtk# 2.6" />
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Dialog</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AboutDialog (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AboutDialog (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">a <see cref="T:System.IntPtr" /></param>
        <remarks>This is not typically used by C# code.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AboutDialog ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Default constructor</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.AboutDialog" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="License">
      <MemberSignature Language="C#" Value="public string License { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The license of the program.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>This string is displayed in a text view in a secondary dialog, therefore it is fine to use a long multi-paragraph text. Note that the text is not wrapped in the text view, thus it must contain the intended linebreaks.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("license")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The name of the program.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>
          <!--If this is not set, it defaults to g_get_application_name().-->
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("name")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Copyright">
      <MemberSignature Language="C#" Value="public string Copyright { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Copyright information for the program.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("copyright")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="TranslatorCredits">
      <MemberSignature Language="C#" Value="public string TranslatorCredits { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Credits to the translators.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>This string should be marked as translatable. The string may contain email addresses and URLs, which will be displayed as links, see the introduction for more details.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("translator-credits")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="LogoIconName">
      <MemberSignature Language="C#" Value="public string LogoIconName { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>A named icon to use as the logo for the about box.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>This property overrides the <see cref="P:Gtk.AboutDialog.Logo" /> property.

</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("logo-icon-name")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="WebsiteLabel">
      <MemberSignature Language="C#" Value="public string WebsiteLabel { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The label for the link to the website of the program.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>If this is not set, it defaults to the URL specified in the <see cref="P:Gtk.AboutDialog.Website" /> property.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("website-label")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Logo">
      <MemberSignature Language="C#" Value="public Gdk.Pixbuf Logo { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Pixbuf</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>A logo for the about box.</summary>
        <value>a <see cref="T:Gdk.Pixbuf" /></value>
        <remarks>If this is not set, it defaults to <see cref="P:Gtk.Window.DefaultIconList()" />.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("logo")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Website">
      <MemberSignature Language="C#" Value="public string Website { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The URL for the link to the website of the program.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>This should be a string starting with "http://".</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("website")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Comments">
      <MemberSignature Language="C#" Value="public string Comments { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Comments about the program.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>This string is displayed in a label in the main dialog, thus it should be a short explanation of the main purpose of the program, not a detailed list of features.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("comments")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The version of the program.</summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("version")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="SetEmailHook">
      <MemberSignature Language="C#" Value="public static Gtk.AboutDialogActivateLinkFunc SetEmailHook (Gtk.AboutDialogActivateLinkFunc func);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.AboutDialogActivateLinkFunc</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="func" Type="Gtk.AboutDialogActivateLinkFunc" />
      </Parameters>
      <Docs>
        <summary>Installs a global function to be called whenever the user activates an email link in an about dialog.</summary>
        <param name="func">a <see cref="T:Gtk.AboutDialogActivateLinkFunc" />  to call when an email link is activated.</param>
        <returns>a <see cref="T:Gtk.AboutDialogActivateLinkFunc" />,  the previous email hook.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetUrlHook">
      <MemberSignature Language="C#" Value="public static Gtk.AboutDialogActivateLinkFunc SetUrlHook (Gtk.AboutDialogActivateLinkFunc func);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.AboutDialogActivateLinkFunc</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="func" Type="Gtk.AboutDialogActivateLinkFunc" />
      </Parameters>
      <Docs>
        <summary>Installs a global function to be called whenever the user activates a URL link in an about dialog.</summary>
        <param name="func">a <see cref="T:Gtk.AboutDialogActivateLinkFunc" /> to call when a URL link is activated.</param>
        <returns>a <see cref="T:Gtk.AboutDialogActivateLinkFunc" />  that is the previous URL hook.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Documenters">
      <MemberSignature Language="C#" Value="public string[] Documenters { set; get; };" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("documenters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The people documenting the program.</summary>
        <value>a <see cref="T:System.String[]" />.</value>
        <remarks>Each string may contain email addresses and URLs, which will be displayed as links, see the introduction for more details.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authors">
      <MemberSignature Language="C#" Value="public string[] Authors { set; get; };" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("authors")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The authors of the program.</summary>
        <value>a <see cref="T:System.String[]" />.</value>
        <remarks>Each string may contain email addresses and URLs, which will be displayed as links, see the introduction for more details.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Artists">
      <MemberSignature Language="C#" Value="public string[] Artists { set; get; };" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("artists")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The people who contributed artwork to the program.</summary>
        <value>a <see cref="T:System.String[]" />.</value>
        <remarks>Each string may contain email addresses and URLs, which will be displayed as links, see the introduction for more details.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrapLicense">
      <MemberSignature Language="C#" Value="public bool WrapLicense { set; get; };" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("wrap-license")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the License text is automatically wrapped.</summary>
        <value>
          <see langword="true" /> if the text is auto-wrapped.</value>
        <remarks />
        <since version="Gtk# 2.8" />
      </Docs>
    </Member>
  </Members>
</Type>
