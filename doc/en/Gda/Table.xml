<Type Name="Table" FullName="Gda.Table">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class Table : Gda.DataModelArray" />
  <AssemblyInfo>
    <AssemblyName>gda-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>
      <para>
An in-memory representation of a database table.
</para>
    </summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gda.DataModelArray</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    
    <Member MemberName="AddDataFromModel">
      <MemberSignature Language="C#" Value="public void AddDataFromModel (Gda.DataModel model);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Gda.DataModel" />
      </Parameters>
      <Docs>
        <summary>
          <para>
Adds data in the table from the given model.
</para>
        </summary>
        <param name="model">a <see cref="T:Gda.DataModel" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddField">
      <MemberSignature Language="C#" Value="public void AddField (Gda.FieldAttributes fa);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fa" Type="Gda.FieldAttributes" />
      </Parameters>
      <Docs>
        <summary>
          <para>
Adds a field to the Table.
</para>
        </summary>
        <param name="fa">a <see cref="T:Gda.FieldAttributes" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Table (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="raw">a <see cref="T:System.IntPtr" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Table (string name);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="name">a <see cref="T:System.String" /> Name for your new table.</param>
        <remarks>
          <para>
It is mainly used by the GdaXmlDatabase class, but you can also use it in your applications for whatever you may need it.
</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Table (string name, Gda.DataModel model, bool add_data);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="model" Type="Gda.DataModel" />
        <Parameter Name="add_data" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="name">a <see cref="T:System.String" /></param>
        <param name="model">a <see cref="T:Gda.DataModel" /></param>
        <param name="add_data">a <see cref="T:System.Boolean" /></param>
        <remarks>
          <para>
This is very useful to maintain an in-memory copy of a given recordset obtained from a database. 
</para>
          <para>
This is also used when exporting data to a GdaXmlDatabase object.
</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
Gets / Sets the name of the given Table.
</para>
        </summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gda.Table" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Table (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
    <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete(Message=null, IsError=False)</AttributeName>
        </Attribute>
      </Attributes></Member>
  </Members>
</Type>
