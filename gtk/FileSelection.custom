//
// Gtk.FileSelection.custom - Gtk FileSelection class customizations
//
// Author: Duncan Mak  (duncan@ximian.com)
//
// Copyright (C) 2002 Ximian, Inc. 
//
// This code is inserted after the automatically generated code.
//
		
[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_dir_list (IntPtr i);
public Gtk.TreeView DirList {
	get { return new Gtk.TreeView (gtksharp_file_selection_get_dir_list (this.Handle)); }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_file_list (IntPtr i);
public Gtk.TreeView FileList {
	get { return new Gtk.TreeView (gtksharp_file_selection_get_file_list (this.Handle)); }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_selection_entry (IntPtr i);
public Gtk.Entry SelectionEntry {
	get { return new Gtk.Entry (gtksharp_file_selection_get_file_list (this.Handle)); }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_selection_text (IntPtr i);
public Gtk.Label SelectionText {
	get { return new Gtk.Label (gtksharp_file_selection_get_selection_text (this.Handle)); }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_ok_button (IntPtr i);
public Gtk.Button OkButton {
	get { return new Gtk.Button (gtksharp_file_selection_get_ok_button (this.Handle)); }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_cancel_button (IntPtr i);
public Gtk.Button CancelButton {
	get { return new Gtk.Button (gtksharp_file_selection_get_cancel_button (this.Handle)); }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_help_button (IntPtr i);
public Gtk.Button HelpButton {
	get { return new Gtk.Button (gtksharp_file_selection_get_help_button (this.Handle)); }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_history_pulldown (IntPtr i);
public Gtk.OptionMenu HistoryPulldown {
	get { return new Gtk.OptionMenu (gtksharp_file_selection_get_history_pulldown (this.Handle)); }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_history_menu (IntPtr i);
public Gtk.Menu HistoryMenu {
	get { return new Gtk.Menu (gtksharp_file_selection_get_history_menu (this.Handle)); }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_fileop_dialog (IntPtr i);
public Gtk.MessageDialog FileopDialog {
	get { return new Gtk.MessageDialog (gtksharp_file_selection_get_fileop_dialog (this.Handle)); }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_fileop_entry (IntPtr i);
public Gtk.Entry FileopEntry {
	get { return new Gtk.Entry (gtksharp_file_selection_get_fileop_entry (this.Handle)); }
}

[DllImport("gtksharpglue", CallingConvention=CallingConvention.Cdecl)]
static extern string gtksharp_file_selection_get_fileop_file (IntPtr i);
public string FileopFile {
	get {
		return gtksharp_file_selection_get_fileop_file (this.Handle);
	}
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_fileop_c_dir (IntPtr i);
public Gtk.Button FileopCDir {
	get { return new Gtk.Button (gtksharp_file_selection_get_fileop_c_dir(this.Handle)); }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_fileop_del_file (IntPtr i);
public Gtk.Button FileopDelFile {
	get { return new Gtk.Button (gtksharp_file_selection_get_fileop_del_file (this.Handle)); }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_fileop_ren_file (IntPtr i);
public Gtk.Button FileopRenFile {
	get { return new Gtk.Button (gtksharp_file_selection_get_fileop_ren_file (this.Handle)); }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_button_area (IntPtr i);
public Gtk.HButtonBox ButtonArea {
	get { return new Gtk.HButtonBox (gtksharp_file_selection_get_button_area (this.Handle)); }
}

[DllImport("gtksharpglue")]
static extern IntPtr gtksharp_file_selection_get_action_area (IntPtr i);
public new Gtk.HButtonBox ActionArea {
	get { return new Gtk.HButtonBox (gtksharp_file_selection_get_action_area (this.Handle)); }
}



