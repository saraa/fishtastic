<Type Name="CanvasClipgroup" FullName="Gnome.CanvasClipgroup">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class CanvasClipgroup : Gnome.CanvasGroup" />
  <AssemblyInfo>
    <AssemblyName>gnome-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.20.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Canvas group that implements clipping</summary>
    <remarks>
      A canvas group object that clips the view of its children to a
      shape defined by a <see cref="T:Gnome.CanvasPathDef" />.
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gnome.CanvasGroup</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanvasClipgroup (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanvasClipgroup (Gnome.CanvasGroup group);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="group" Type="Gnome.CanvasGroup" />
      </Parameters>
      <Docs>
        <summary>Create new <see cref="T:Gnome.CanvasClipgroup" /></summary>
        <param name="group">
          The <see cref="T:Gnome.CanvasGroup" /> that this <see cref="T:Gnome.CanvasClipgroup" />
          belongs to.
        </param>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public IntPtr Path { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Pointer to a GnomeCanvasPathDef structure.</summary>
        <value>Pointer to a GnomeCanvasPathDef structure.</value>
        <remarks>
          <para>
            Pointer to a <see cref="T:Gnome.CanvasPathDef" /> structure. This can be
            created by a call to the <see cref="C:Gnome.CanvasPathDef" /> constructor.
          </para>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("path")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Wind">
      <MemberSignature Language="C#" Value="public Art.WindRule Wind { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Art.WindRule</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Winding rule for defining the clipping intersection rule</summary>
        <value>Winding rule for defining the clipping intersection rule</value>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("wind")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gnome.CanvasClipgroup" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CanvasClipgroup (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CanvasClipgroup ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
