<Type Name="Window" FullName="Gtk.Window">
  <TypeSignature Language="C#" Value="public class Window : Gtk.Bin, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>To be added</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Bin</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="ListToplevels">
      <MemberSignature Language="C#" Value="public static GLib.List ListToplevels ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>GLib.List</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'GLib.List'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionGetType">
      <MemberSignature Language="C#" Value="public static uint PositionGetType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'uint'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeGetType">
      <MemberSignature Language="C#" Value="public static uint TypeGetType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'uint'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginMoveDrag">
      <MemberSignature Language="C#" Value="public void BeginMoveDrag (int button, int root_x, int root_y, uint timestamp);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Int32" />
        <Parameter Name="root_x" Type="System.Int32" />
        <Parameter Name="root_y" Type="System.Int32" />
        <Parameter Name="timestamp" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="button">To be added: an object of type 'int'</param>
        <param name="root_x">To be added: an object of type 'int'</param>
        <param name="root_y">To be added: an object of type 'int'</param>
        <param name="timestamp">To be added: an object of type 'uint'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFrameDimensions">
      <MemberSignature Language="C#" Value="public void GetFrameDimensions (out int left, out int top, out int right, out int bottom);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32&amp;" />
        <Parameter Name="top" Type="System.Int32&amp;" />
        <Parameter Name="right" Type="System.Int32&amp;" />
        <Parameter Name="bottom" Type="System.Int32&amp;" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="left">To be added: an object of type 'int&amp;'</param>
        <param name="top">To be added: an object of type 'int&amp;'</param>
        <param name="right">To be added: an object of type 'int&amp;'</param>
        <param name="bottom">To be added: an object of type 'int&amp;'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Iconify">
      <MemberSignature Language="C#" Value="public void Iconify ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unstick">
      <MemberSignature Language="C#" Value="public void Unstick ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unmaximize">
      <MemberSignature Language="C#" Value="public void Unmaximize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSize">
      <MemberSignature Language="C#" Value="public void GetSize (out int width, out int height);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32&amp;" />
        <Parameter Name="height" Type="System.Int32&amp;" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="width">To be added: an object of type 'int&amp;'</param>
        <param name="height">To be added: an object of type 'int&amp;'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSize">
      <MemberSignature Language="C#" Value="public void GetDefaultSize (out int width, out int height);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32&amp;" />
        <Parameter Name="height" Type="System.Int32&amp;" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="width">To be added: an object of type 'int&amp;'</param>
        <param name="height">To be added: an object of type 'int&amp;'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public void Resize (int width, int height);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="width">To be added: an object of type 'int'</param>
        <param name="height">To be added: an object of type 'int'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateFocus">
      <MemberSignature Language="C#" Value="public bool ActivateFocus ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseGeometry">
      <MemberSignature Language="C#" Value="public bool ParseGeometry (string geometry);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometry" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="geometry">To be added: an object of type 'string'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccelGroup">
      <MemberSignature Language="C#" Value="public void RemoveAccelGroup (Gtk.AccelGroup accel_group);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accel_group" Type="Gtk.AccelGroup" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="accel_group">To be added: an object of type 'Gtk.AccelGroup'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stick">
      <MemberSignature Language="C#" Value="public void Stick ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFrameDimensions">
      <MemberSignature Language="C#" Value="public void SetFrameDimensions (int left, int top, int right, int bottom);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="left">To be added: an object of type 'int'</param>
        <param name="top">To be added: an object of type 'int'</param>
        <param name="right">To be added: an object of type 'int'</param>
        <param name="bottom">To be added: an object of type 'int'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMnemonic">
      <MemberSignature Language="C#" Value="public void AddMnemonic (uint keyval, Gtk.Widget target);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyval" Type="System.UInt32" />
        <Parameter Name="target" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="keyval">To be added: an object of type 'uint'</param>
        <param name="target">To be added: an object of type 'Gtk.Widget'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginResizeDrag">
      <MemberSignature Language="C#" Value="public void BeginResizeDrag (Gdk.WindowEdge edge, int button, int root_x, int root_y, uint timestamp);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edge" Type="Gdk.WindowEdge" />
        <Parameter Name="button" Type="System.Int32" />
        <Parameter Name="root_x" Type="System.Int32" />
        <Parameter Name="root_y" Type="System.Int32" />
        <Parameter Name="timestamp" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="edge">To be added: an object of type 'Gdk.WindowEdge'</param>
        <param name="button">To be added: an object of type 'int'</param>
        <param name="root_x">To be added: an object of type 'int'</param>
        <param name="root_y">To be added: an object of type 'int'</param>
        <param name="timestamp">To be added: an object of type 'uint'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public void GetPosition (out int root_x, out int root_y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root_x" Type="System.Int32&amp;" />
        <Parameter Name="root_y" Type="System.Int32&amp;" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="root_x">To be added: an object of type 'int&amp;'</param>
        <param name="root_y">To be added: an object of type 'int&amp;'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deiconify">
      <MemberSignature Language="C#" Value="public void Deiconify ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="MnemonicActivate">
      <MemberSignature Language="C#" Value="public bool MnemonicActivate (uint keyval, Gdk.ModifierType modifier);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyval" Type="System.UInt32" />
        <Parameter Name="modifier" Type="Gdk.ModifierType" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="keyval">To be added: an object of type 'uint'</param>
        <param name="modifier">To be added: an object of type 'Gdk.ModifierType'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivateDefault">
      <MemberSignature Language="C#" Value="public bool ActivateDefault ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Maximize">
      <MemberSignature Language="C#" Value="public void Maximize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMnemonic">
      <MemberSignature Language="C#" Value="public void RemoveMnemonic (uint keyval, Gtk.Widget target);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyval" Type="System.UInt32" />
        <Parameter Name="target" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="keyval">To be added: an object of type 'uint'</param>
        <param name="target">To be added: an object of type 'Gtk.Widget'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEmbeddedXid">
      <MemberSignature Language="C#" Value="public void AddEmbeddedXid (uint xid);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xid" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="xid">To be added: an object of type 'uint'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWmclass">
      <MemberSignature Language="C#" Value="public void SetWmclass (string wmclass_name, string wmclass_class);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wmclass_name" Type="System.String" />
        <Parameter Name="wmclass_class" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="wmclass_name">To be added: an object of type 'string'</param>
        <param name="wmclass_class">To be added: an object of type 'string'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEmbeddedXid">
      <MemberSignature Language="C#" Value="public void RemoveEmbeddedXid (uint xid);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xid" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="xid">To be added: an object of type 'uint'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultSize">
      <MemberSignature Language="C#" Value="public void SetDefaultSize (int width, int height);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Sets the default size of an object, with the specified width and height arguments.</summary>
        <param name="width">To be added: an object of type 'int'</param>
        <param name="height">To be added: an object of type 'int'</param>
        <remarks>
          <para>
            It is used for setting the default size an object will have. The first argument, 
            int width, defines the default width of the object ( in pixels ). A similar situation
            happens with the second argument, int height.
          </para>
          <para>
            It only affects the initial size of the Window, so the user can resizes it. If the
            Window is hidden and re-shown, it will remmeber the size it had before get hidding.
          </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="Present">
      <MemberSignature Language="C#" Value="public void Present ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReshowWithInitialSize">
      <MemberSignature Language="C#" Value="public void ReshowWithInitialSize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (int x, int y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="x">To be added: an object of type 'int'</param>
        <param name="y">To be added: an object of type 'int'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPosition">
      <MemberSignature Language="C#" Value="public void SetPosition (Gtk.WindowPosition position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="Gtk.WindowPosition" />
      </Parameters>
      <Docs>
        <summary>Sets the position for a Window, based on the Gtk.WindowPosition position argument.</summary>
        <param name="position">To be added: an object of type 'Gtk.WindowPosition'</param>
        <remarks>
          <para>
            Is is used for placing the Window in some area, depending on the Gtk.WindowPosition position argument.
          </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccelGroup">
      <MemberSignature Language="C#" Value="public void AddAccelGroup (Gtk.AccelGroup accel_group);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accel_group" Type="Gtk.AccelGroup" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="accel_group">To be added: an object of type 'Gtk.AccelGroup'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGeometryHints">
      <MemberSignature Language="C#" Value="public void SetGeometryHints (Gtk.Widget geometry_widget, Gdk.Geometry geometry, Gdk.WindowHints geom_mask);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometry_widget" Type="Gtk.Widget" />
        <Parameter Name="geometry" Type="Gdk.Geometry" />
        <Parameter Name="geom_mask" Type="Gdk.WindowHints" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="geometry_widget">To be added: an object of type 'Gtk.Widget'</param>
        <param name="geometry">To be added: an object of type 'Gdk.Geometry'</param>
        <param name="geom_mask">To be added: an object of type 'Gdk.WindowHints'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected virtual void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Window (uint gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="gtype">To be added: an object of type 'uint'</param>
        <returns>To be added: an object of type 'Gtk.Window'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Window (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="raw">To be added: an object of type 'IntPtr'</param>
        <returns>To be added: an object of type 'Gtk.Window'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Window (Gtk.WindowType type);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="type" Type="Gtk.WindowType" />
      </Parameters>
      <Docs>
        <summary>Creates a new Window object, based on the Gtk.WindowType type argument.</summary>
        <param name="type">To be added: an object of type 'Gtk.WindowType'</param>
        <returns>To be added: an object of type 'Gtk.Window'</returns>
        <remarks>
          <para>
            Creates a new Window object, wich can be of type TopLevel ( most of the cases )
            or PopUp. Take care with the use of PopUp type, since it is not controlled by the window
            manager.
          </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Window ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gtk.Window'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Window (string title);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Creates a new TopLevel Window object, with the specified string argument as the title.</summary>
        <param name="title">To be added: an object of type 'string'</param>
        <returns>To be added: an object of type 'Gtk.Window'</returns>
        <remarks>
          <para>
            Creates a new TopLevel Window object, using the string title argument to specify the Window title.
            You get the same if you use the public Window ( Gtk.WindowType type ) constructor and later
            set the string Title property.
          </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIconList">
      <MemberSignature Language="C#" Value="public static GLib.List DefaultIconList { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.List</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="GLib.List" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'GLib.List'</param>
        <returns>To be added: an object of type 'GLib.List'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'uint'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public  Size { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type ''</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public  Position { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type ''</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="public  DefaultSize { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type ''</param>
        <returns>To be added: an object of type ''</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public Gtk.Widget Default { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'Gtk.Widget'</param>
        <returns>To be added: an object of type 'Gtk.Widget'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFrame">
      <MemberSignature Language="C#" Value="public bool HasFrame { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'bool'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gravity">
      <MemberSignature Language="C#" Value="public Gdk.Gravity Gravity { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Gravity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Gdk.Gravity" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'Gdk.Gravity'</param>
        <returns>To be added: an object of type 'Gdk.Gravity'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="MnemonicModifier">
      <MemberSignature Language="C#" Value="public Gdk.ModifierType MnemonicModifier { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.ModifierType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Gdk.ModifierType" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'Gdk.ModifierType'</param>
        <returns>To be added: an object of type 'Gdk.ModifierType'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeHint">
      <MemberSignature Language="C#" Value="public Gdk.WindowTypeHint TypeHint { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.WindowTypeHint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Gdk.WindowTypeHint" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'Gdk.WindowTypeHint'</param>
        <returns>To be added: an object of type 'Gdk.WindowTypeHint'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransientFor">
      <MemberSignature Language="C#" Value="public Gtk.Window TransientFor { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Gtk.Window" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'Gtk.Window'</param>
        <returns>To be added: an object of type 'Gtk.Window'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public Gtk.Widget Focus { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'Gtk.Widget'</param>
        <returns>To be added: an object of type 'Gtk.Widget'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconList">
      <MemberSignature Language="C#" Value="public GLib.List IconList { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.List</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="GLib.List" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'GLib.List'</param>
        <returns>To be added: an object of type 'GLib.List'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Role">
      <MemberSignature Language="C#" Value="public string Role { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'string'</param>
        <returns>To be added: an object of type 'string'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Decorated">
      <MemberSignature Language="C#" Value="public bool Decorated { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Sets if a Window will be decorated or not ( borderless ).</summary>
        <param name="value">To be added: an object of type 'bool'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>
          <para>With this property you control if a window will be decorated or not.</para>
          <para>
            By default, windows are decorated with a title bar and resize controls. Some window managers
            allow to disable these decorations, creating a borderless Window. If you set this property as false,
            Gtk# will try to convince the window manager not to decorate the Window. 
          </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resizable">
      <MemberSignature Language="C#" Value="public bool Resizable { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Sets if a Window will be resizable by the user or not.</summary>
        <param name="value">To be added: an object of type 'bool'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>
          <para>
            By default, windows are resizable, so you can change the size of them. But if you set this property
            to false, the user won't be able to change the size of them.
          </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowPosition">
      <MemberSignature Language="C#" Value="public Gtk.WindowPosition WindowPosition { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.WindowPosition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Gtk.WindowPosition" />
      </Parameters>
      <Docs>
        <summary>Property used for setting/getting the window position.</summary>
        <param name="value">To be added: an object of type 'Gtk.WindowPosition'</param>
        <returns>To be added: an object of type 'Gtk.WindowPosition'</returns>
        <remarks>
          <para>
            This property will alow you to define where a Window must be displayed on the screen.
            It work with the Gtk.WindowPosition enum, soy maybe you should check it before use it.
          </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultHeight">
      <MemberSignature Language="C#" Value="public int DefaultHeight { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Property used for defining the default height of a window.</summary>
        <param name="value">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>
          <para>
            This property will allow you to define the default height for your Window.
            It only define the default one, so if the Window is resized, it won't be able to do
            anything.
          </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="DestroyWithParent">
      <MemberSignature Language="C#" Value="public bool DestroyWithParent { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'bool'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modal">
      <MemberSignature Language="C#" Value="public bool Modal { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'bool'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowGrow">
      <MemberSignature Language="C#" Value="public bool AllowGrow { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'bool'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Property used for setting the Window Title.</summary>
        <param name="value">To be added: an object of type 'string'</param>
        <returns>To be added: an object of type 'string'</returns>
        <remarks>
          <para>
            This property will allow you to set the Window Title. The Title of a window
            will be displayed in its title bar. Since the title bar is rendered by the window managers on
            X Window System, the way it appears will depend on the user preferences. This title should help
            the users to distinguish a window from others opened. A good title will have the application name
            an the actual document, for example.
          </para>
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Gtk.WindowType Type { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.WindowType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gtk.WindowType'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultWidth">
      <MemberSignature Language="C#" Value="public int DefaultWidth { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public Gdk.Pixbuf Icon { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Pixbuf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Gdk.Pixbuf" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'Gdk.Pixbuf'</param>
        <returns>To be added: an object of type 'Gdk.Pixbuf'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowShrink">
      <MemberSignature Language="C#" Value="public bool AllowShrink { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'bool'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeysChanged">
      <MemberSignature Language="C#" Value="public event EventHandler KeysChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public event GtkSharp.MoveFocusHandler MoveFocus;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public event GtkSharp.SetFocusHandler SetFocus;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultActivated">
      <MemberSignature Language="C#" Value="public event EventHandler DefaultActivated;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusActivated">
      <MemberSignature Language="C#" Value="public event EventHandler FocusActivated;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FrameEvent">
      <MemberSignature Language="C#" Value="public event GtkSharp.FrameEventHandler FrameEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
