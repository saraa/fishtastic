<Type Name="ButtonBox" FullName="Gtk.ButtonBox">
  <TypeSignature Language="C#" Value="public class ButtonBox : Gtk.Box, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="Lee Mallabone" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>ButtonBox is a container for laying out <see cref="T:Gtk.Button" /> widgets.</summary>
    <remarks>
      <para>A button box should be used to provide a consistent layout of buttons throughout your application. Specific button boxes are <see cref="T:Gtk.HButtonBox" /> for horizontal groups of buttons, and <see cref="T:Gtk.VButtonBox" /> for vertical button groups.</para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Box</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected override void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonBox (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of ButtonBox, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public Gtk.ButtonBoxStyle Layout { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ButtonBoxStyle</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Alter the way the buttons in this box are arranged.</summary>
        <param name="value">the new style to arrange the buttons in.</param>
        <returns>The style that the child widgets are currently arranged in.</returns>
        <remarks>See <see cref="T:Gtk.ButtonBoxStyle" /> for more information about the styles of button boxes.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutStyle">
      <MemberSignature Language="C#" Value="public Gtk.ButtonBoxStyle LayoutStyle { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ButtonBoxStyle</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>See <see cref="P:Gtk.ButtonBox.Layout" /></summary>
        <param name="value" />
        <returns />
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <returns>a <see cref="T:GLib.GType" /></returns>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.ButtonBox" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonBox (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <returns>a <see cref="T:Gtk.ButtonBox" /></returns>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonBox ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Default parameterless constructor.</summary>
        <returns>a <see cref="T:Gtk.ButtonBox" /></returns>
        <remarks>This is the default constructor for the <see cref="T:Gtk.ButtonBox" /> class.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildIpadding">
      <MemberSignature Language="C#" Value="public void GetChildIpadding (out int ipad_x, out int ipad_y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipad_x" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="ipad_y" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="ipad_x">a <see cref="T:System.Int32" /></param>
        <param name="ipad_y">a <see cref="T:System.Int32" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildSize">
      <MemberSignature Language="C#" Value="public void SetChildSize (int min_width, int min_height);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min_width" Type="System.Int32" />
        <Parameter Name="min_height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="min_width">a <see cref="T:System.Int32" /></param>
        <param name="min_height">a <see cref="T:System.Int32" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildIpadding">
      <MemberSignature Language="C#" Value="public void SetChildIpadding (int ipad_x, int ipad_y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipad_x" Type="System.Int32" />
        <Parameter Name="ipad_y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="ipad_x">a <see cref="T:System.Int32" /></param>
        <param name="ipad_y">a <see cref="T:System.Int32" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildSize">
      <MemberSignature Language="C#" Value="public void GetChildSize (out int min_width, out int min_height);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="min_width" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="min_height" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="min_width">a <see cref="T:System.Int32" /></param>
        <param name="min_height">a <see cref="T:System.Int32" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override Gtk.Container+ContainerChild Item { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Container+ContainerChild</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>Accessor for child property items</summary>
        <param name="child">a child of this <see cref="T:Gtk.ButtonBox" /></param>
        <returns>a <see cref="T:Gtk.Container+ContainerChild" /></returns>
        <remarks>You can cast the returned object to <see cref="T:Gtk.ButtonBox+ButtonBoxChild" /> to access its child properties.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildSecondary">
      <MemberSignature Language="C#" Value="public bool GetChildSecondary (Gtk.Widget child);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="child">a <see cref="T:Gtk.Widget" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildSecondary">
      <MemberSignature Language="C#" Value="public void SetChildSecondary (Gtk.Widget child, bool is_secondary);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="Gtk.Widget" />
        <Parameter Name="is_secondary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="child">a <see cref="T:Gtk.Widget" /></param>
        <param name="is_secondary">a <see cref="T:System.Boolean" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>