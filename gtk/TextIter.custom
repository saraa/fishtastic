// TextIter.custom - customizations to Gtk.TextIter
//
// Authors: Mike Kestner  <mkestner@ximian.com>
//
// Copyright (c) 2004 Novell, Inc.

		[DllImport("libgtk-win32-2.0-0.dll")]
		static extern IntPtr gtk_text_iter_get_marks (ref TextIter iter);

		public TextMark[] Marks {
			get {
				IntPtr raw_ret = gtk_text_iter_get_marks (ref this);
				if (raw_ret == IntPtr.Zero)
					return new TextMark [0];
				GLib.SList list = new GLib.SList(raw_ret);
				TextMark[] result = new TextMark [list.Count];
				for (int i = 0; i < list.Count; i++)
					result [i] = list [i] as TextMark;
				return result;
			}
		}

		[DllImport("libgtk-win32-2.0-0.dll")]
		static extern IntPtr gtk_text_iter_get_tags (ref TextIter iter);

		public TextTag[] Tags {
			get {
				IntPtr raw_ret = gtk_text_iter_get_tags (ref this);
				if (raw_ret == IntPtr.Zero)
					return new TextTag [0];
				GLib.SList list = new GLib.SList(raw_ret);
				TextTag[] result = new TextTag [list.Count];
				for (int i = 0; i < list.Count; i++)
					result [i] = list [i] as TextTag;
				return result;
			}
		}

		[DllImport("libgtk-win32-2.0-0.dll")]
		static extern IntPtr gtk_text_iter_get_toggled_tags (ref TextIter iter, bool toggled_on);

		public TextTag[] GetToggledTags (bool toggled_on)
		{
			IntPtr raw_ret = gtk_text_iter_get_toggled_tags (ref this, toggled_on);
			if (raw_ret == IntPtr.Zero)
				return new TextTag [0];
			GLib.SList list = new GLib.SList(raw_ret);
			TextTag[] result = new TextTag [list.Count];
			for (int i = 0; i < list.Count; i++)
				result [i] = list [i] as TextTag;
			return result;
		}
