<Type Name="Button" FullName="Gtk.Button">
  <TypeSignature Language="C#" Value="public class Button : Gtk.Bin, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="Duncan Mak" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>A widget that creates a signal when clicked on.</summary>
    <remarks>
      <para>
        The GtkButton widget is generally used to attach a function to that is called when the button is pressed. The various signals and how to use them are outlined below.
      </para>
      <para>
        The GtkButton widget can hold any valid child widget. That is it can hold most any other standard <see cref="T:Gtk.Widget" />. The most commonly used child is the <see cref="T:Gtk.Label" />.
      </para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Bin</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The GLib type for Gtk.Button.</summary>
        <returns>The GLib type for the Gtk.Button <see langword="class" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="UseStock">
      <MemberSignature Language="C#" Value="public bool UseStock { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Gets or sets if wether the Button should use a <see cref="T:Gtk.Stock" /> or not.</summary>
        <param name="value">Boolean value to select if the
  Button uses a <see cref="T:Gtk.Stock" /> or not.</param>
        <returns>Gets a value indicating if the Button uses a <see cref="T:Gtk.Stock" />.</returns>
        <remarks>It's possible to create a Button from <see cref="T:Gtk.Stock" />, which is recommended for consistency in Gnome
  apps. They also provide a <see cref="T:Gtk.Label" /> and a key shortcut. 
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseUnderline">
      <MemberSignature Language="C#" Value="public bool UseUnderline { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Gets or sets if the Button uses or not an embedded
  underline in the Button <see cref="T:Gtk.Label" /> indicating if a
  mnemonic is associated to the Button.</summary>
        <param name="value">Boolean value to select if the Button uses
	underline or not.</param>
        <returns>Gets a value indicating if the Button uses underline
  or not.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Relief">
      <MemberSignature Language="C#" Value="public Gtk.ReliefStyle Relief { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ReliefStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Gtk.ReliefStyle" />
      </Parameters>
      <Docs>
        <summary>Gets or sets the <see cref="T:Gtk.ReliefStyle" /> for the Button.</summary>
        <param name="value">The <see cref="T:Gtk.ReliefStyle" /> for
  the Button.</param>
        <returns>An instance of <see cref="T:Gtk.ReliefStyle" /> that
  represents the relief style of the Button.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Gets or sets the <see langword="string" /> used to be
	represented with a <see cref="T:Gtk.Label" /> contained by the
	Button.</summary>
        <param name="value">A <see langword="string" /> to be used for
  the Button's <see cref="T:Gtk.Label" /></param>
        <returns>The <see langword="string" /> contained by the Button.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>
          <see langword="event" /> launched when the button is activated.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Clicked">
      <MemberSignature Language="C#" Value="public event EventHandler Clicked;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>
          <see langword="event" /> launched when the button is clicked.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public event EventHandler Left;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>
          <see langword="event" /> launched when the cursor
  leaves the button area.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Pressed">
      <MemberSignature Language="C#" Value="public event EventHandler Pressed;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>
          <see langword="event" /> launched when the button is pressed.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Released">
      <MemberSignature Language="C#" Value="public event EventHandler Released;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>
          <see langword="event" /> launched when the button is released.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Entered">
      <MemberSignature Language="C#" Value="public event EventHandler Entered;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>
          <see langword="event" /> launched when the cursor
  enters the button area.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ActionGetType">
      <MemberSignature Language="C#" Value="public static uint ActionGetType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'uint'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWithLabel">
      <MemberSignature Language="C#" Value="public static Gtk.Button NewWithLabel (string label);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Button</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="label">To be added: an object of type 'string'</param>
        <returns>To be added: an object of type 'Gtk.Button'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewFromStock">
      <MemberSignature Language="C#" Value="public static Gtk.Button NewFromStock (string stock_id);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Button</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stock_id" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="stock_id">To be added: an object of type 'string'</param>
        <returns>To be added: an object of type 'Gtk.Button'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public void Leave ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Press">
      <MemberSignature Language="C#" Value="public void Press ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public void Release ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public void Click ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public void Enter ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected virtual void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with this object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Button (GLib.Type gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.Type" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="gtype">GLib type for the type.</param>
        <returns>Creates a new instance of Button, using the GLib
  provided type.</returns>
        <remarks>This is a constructor used by derivative types of
  <see cref="T:Gtk.Button" /> that would have their own GLib type
  assigned to it. This is not typically used by C# code.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Default parameterless constructor.</summary>
        <returns>An instance of type Gtk.Button.</returns>
        <remarks>This is the default constructor for the Gtk.Button
  <see langword="class" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button (string label);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Constructor that creates a labeled Button. The label
  shows the string passed as parameter.</summary>
        <param name="label">A <see langword="string" /> that will be
  used to create a <see cref="T:Gtk.Label" /> for the Gtk.Button</param>
        <returns>A Gtk.Button containing a <see cref="T:Gtk.Label" />
  with the <see langword="string">string</see> passed.</returns>
        <remarks>Constructor that creates a labeled button. The label
  shows the string passed as parameter.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="raw">To be added: an object of type 'IntPtr'</param>
        <returns>To be added: an object of type 'Gtk.Button'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>