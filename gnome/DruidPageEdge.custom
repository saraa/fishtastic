// DruidPage.custom - Gnome.DruidPage customizations
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.

		[DllImport("gnomeui-2")]
		static extern IntPtr gnome_druid_page_edge_new_with_vals(int position, bool antialiased, IntPtr title, IntPtr text, IntPtr logo, IntPtr watermark, IntPtr top_watermark);

		public DruidPageEdge (Gnome.EdgePosition position) : this (position, false, String.Empty, String.Empty, null, null, null)
		{
		}

		public DruidPageEdge (Gnome.EdgePosition position, bool antialiased, string title, string text, Gdk.Pixbuf logo, Gdk.Pixbuf watermark, Gdk.Pixbuf top_watermark) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (DruidPageEdge)) {
				CreateNativeObject (new string[0], new GLib.Value[0]);
				Construct (position, antialiased, title, text, logo, watermark, top_watermark);
				return;
			}
			IntPtr ntitle = GLib.Marshaller.StringToPtrGStrdup (title);
			IntPtr ntext = GLib.Marshaller.StringToPtrGStrdup (text);
			Raw = gnome_druid_page_edge_new_with_vals((int) position, antialiased, ntitle, ntext, (logo != null) ? logo.Handle : IntPtr.Zero, (watermark != null) ? watermark.Handle : IntPtr.Zero, (top_watermark != null) ? top_watermark.Handle : IntPtr.Zero);
			GLib.Marshaller.Free (ntitle);
			GLib.Marshaller.Free (ntext);
		}
