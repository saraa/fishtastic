<Type Name="AppBar" FullName="Gnome.AppBar">
  <TypeSignature Language="C#" Maintainer="John Luke" Value="public class AppBar : Gtk.HBox" />
  <AssemblyInfo>
    <AssemblyName>gnome-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.20.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>An application status and progress widget.</summary>
    <remarks>An <see cref="T:Gnome.AppBar" /> widget sits (usually) at the bottom of an application window and contains a <see cref="T:Gtk.ProgressBar" /> (for indicating time consuming tasks and their completion status) and/or a <see cref="T:Gtk.Statusbar" /> for sending short one-line message to the user. It is also possible (in theory) for the user to edit the contents of the status bar, should the application developer choose to allow that. However, note that this is not really working in the present implementation, so developers are recommended to avoid using interactive <see cref="T:Gtk.Statusbar" />s and use proper editable widgets instead.</remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.HBox</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    <Member MemberName="ClearStack">
      <MemberSignature Language="C#" Value="public void ClearStack ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove all status messages from <see cref="T:Gtk.AppBar" />, and display default status message (if present).</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public void Pop ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove current status message, and display previous status message, if any.</summary>
        <remarks>It is fine to call this with an empty stack.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPrompt">
      <MemberSignature Language="C#" Value="public void ClearPrompt ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Remove any prompt from the <see cref="T:Gtk.Statusbar" />.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (string status);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Push a new status message onto the <see cref="T:Gtk.Statusbar" /> stack and display it.</summary>
        <param name="status">an object of type <see cref="T:System.String" /></param>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Refresh the <see cref="T:Gtk.Statusbar" /> by redrawing the item on the top of the stack, or the default value if the stack is empty.</summary>
        <remarks>Useful to force the message from a previous call to <see cref="M:Gnome.AppBar.SetStatus(System.String)" /> to disappear.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrompt">
      <MemberSignature Language="C#" Value="public void SetPrompt (string prompt, bool modal);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prompt" Type="System.String" />
        <Parameter Name="modal" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Put a prompt in the appbar and wait for a response.</summary>
        <param name="prompt">an object of type <see cref="T:System.String" /></param>
        <param name="modal">an object of type <see cref="T:System.Boolean" /></param>
        <remarks>When the user responds or cancels, a <see cref="E:Gnome.AppBar.UserResponse" /> signal is emitted.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStatus">
      <MemberSignature Language="C#" Value="public void SetStatus (string status);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="status" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="status">an object of type <see cref="T:System.String" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppBar (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppBar (bool has_progress, bool has_status, Gnome.PreferencesType interactivity);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="has_progress" Type="System.Boolean" />
        <Parameter Name="has_status" Type="System.Boolean" />
        <Parameter Name="interactivity" Type="Gnome.PreferencesType" />
      </Parameters>
      <Docs>
        <summary>Creates a new <see cref="T:Gnome.AppBar" /> instance.</summary>
        <param name="has_progress">an object of type <see cref="T:System.Boolean" /></param>
        <param name="has_status">an object of type <see cref="T:System.Boolean" /></param>
        <param name="interactivity">an object of type <see cref="T:Gnome.PreferencesType" /></param>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public string Response { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the response to the prompt, if any.</summary>
        <value>an object of type <see cref="T:System.String" /></value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public Gtk.Widget Status { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the <see cref="T:Gtk.Statusbar" /> widget.</summary>
        <value>an object of type <see cref="T:Gtk.Widget" /></value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Progress">
      <MemberSignature Language="C#" Value="public Gtk.ProgressBar Progress { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ProgressBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the <see cref="T:Gtk.ProgressBar" /> widget for further manipulation.</summary>
        <value>an object of type <see cref="T:Gtk.ProgressBar" /></value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public string Default { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>What to show when showing nothing else is on the stack; defaults to the empty string.</summary>
        <value>an object of type <see cref="T:System.String" /></value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressPercentage">
      <MemberSignature Language="C#" Value="public float ProgressPercentage { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Sets progress bar to <paramref name="percentage" />.</summary>
        <value>an object of type <see cref="T:System.Single" /></value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interactivity">
      <MemberSignature Language="C#" Value="public Gnome.PreferencesType Interactivity { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gnome.PreferencesType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether or not the user can edit the text in the <see cref="T:Gtk.Statusbar" /> portion of a <see cref="T:Gnome.AppBar" /> instance.</summary>
        <value>an object of type <see cref="T:Gnome.PreferencesType" /></value>
        <remarks>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("interactivity")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="HasProgress">
      <MemberSignature Language="C#" Value="public bool HasProgress { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether or not the <see cref="T:Gnome.AppBar" /> contains a <see cref="T:Gnome.ProgressBar" />.</summary>
        <value>an object of type <see cref="T:System.Boolean" /></value>
        <remarks>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("has_progress")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="HasStatus">
      <MemberSignature Language="C#" Value="public bool HasStatus { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether or not the <see cref="T:Gnome.AppBar" /> contains a <see cref="T:Gnome.Statusbar" />.</summary>
        <value>an object of type <see cref="T:System.Boolean" /></value>
        <remarks>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("has_status")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="PromptCleared">
      <MemberSignature Language="C#" Value="public event EventHandler PromptCleared;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when the prompt is cleared.</summary>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("clear_prompt")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="UserResponse">
      <MemberSignature Language="C#" Value="public event EventHandler UserResponse;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when the user responds to an <see cref="T:Gnome.AppBar" /> that is interactive.</summary>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("user_response")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gnome.AppBar" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUserResponse">
      <MemberSignature Language="C#" Value="protected virtual void OnUserResponse ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default handler for the <see cref="M:Gnome.AppBar.UserResponse" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gnome.AppBar.UserResponse" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPromptCleared">
      <MemberSignature Language="C#" Value="protected virtual void OnPromptCleared ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default handler for the <see cref="M:Gnome.AppBar.PromptCleared" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gnome.AppBar.PromptCleared" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AppBar (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
  </Members>
</Type>
