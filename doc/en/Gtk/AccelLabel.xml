<Type Name="AccelLabel" FullName="Gtk.AccelLabel">
  <TypeSignature Language="C#" Value="public class AccelLabel : Gtk.Label, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="Hector Gomez M" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>A widget that displays an accelerator key</summary>
    <remarks>
      <para>
      The <see cref="T:Gtk.AccelLabel" /> widget is a subclass of <see cref="T:Gtk.Label" /> that also displays an accelerator key on the right of the label text. The <see cref="T:Gtk.AccelLabel" /> widget is commonly used in menus to show the keyboard shortcuts for commands.
     </para>
      <para>
       The accelerator key to display is not set explicitly instead, the <see cref="T:Gtk.AccelLabel" /> displays the accelerators which have been added to a particular widget. This widget is set by calling <see cref="P:Gtk.AccelLabel.AccelWidget" />.
     </para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Label</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="Refetch">
      <MemberSignature Language="C#" Value="public bool Refetch ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recreates the string representing the accelerator keys.</summary>
        <returns>
          <see langword="false" /> Default, since the strings are updated this is not needed</returns>
        <remarks>
          <para>
           Recreates the string representing the accelerator keys. This should not be needed since the string is automatically updated whenever accelerators are added or removed from the associated widget.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected virtual void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccelLabel (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
		<Parameter Name="raw" Type="System.IntPtr" />
	</Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of AccelLabel, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccelLabel (string str1ng);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
		<Parameter Name="str1ng" Type="System.String" />
	</Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="str1ng">To be added: an object of type 'string'</param>
        <returns>To be added: an object of type 'Gtk.AccelLabel'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AccelLabel ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gtk.AccelLabel'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The GLib Type for Gtk.AccelLabel</summary>
        <returns>The GLib Type for the Gtk.AccelLabel class.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AccelWidth">
      <MemberSignature Language="C#" Value="public uint AccelWidth { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
	</Parameters>
      <Docs>
        <summary>Returns the width needed to display the accelerator key(s).</summary>
        <returns>The width needed to display the accelerator key(s)</returns>
        <remarks>
          <para>
          Returns the width needed to display the accelerator key(s). This is used by menus to align all of the <see cref="T:Gtk.MenuItem" /> widgets, and shouldn't be needed by applications.
         </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccelClosure">
      <MemberSignature Language="C#" Value="public IntPtr AccelClosure { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
	</Parameters>
      <Docs>
        <summary>Sets the closure to be monitored by this accelerator label.</summary>
        <param name="value">To be added: an object of type 'IntPtr'</param>
        <returns>To be added: an object of type 'IntPtr'</returns>
        <remarks>
          <para>
           Sets the closure to be monitored by this accelerator label. The closure must be connected to an accelerator group. See <see cref="P:Gtk.AccelLabel.AccelWidget" />.
         </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccelWidget">
      <MemberSignature Language="C#" Value="public Gtk.Widget AccelWidget { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
	</Parameters>
      <Docs>
        <summary>Fetches the widget monitored by this acceleretaor label.</summary>
        <param name="value">The widget to be monitored</param>
        <returns>The object monitored by the accelerator label, or <see langword="null" /></returns>
        <remarks>
          <para>
           Fetches the widget monitored by this acceleretaor label.
         </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AccelLabel (GLib.Type gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
		<Parameter Name="gtype" Type="GLib.Type" />
	</Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="gtype">GLib type for the type</param>
        <returns>Creates a new instance of AccelLabel, using the GLib-provided type</returns>
        <remarks>
          <para>This is a constructor used by derivative types of <see cref="T:Gtk.AccelLabel" /> that would have their own GLib type assigned to it.  This is not typically used by C# code.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
