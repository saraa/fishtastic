// App.custom - Gnome.App customizations
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.


		[DllImport("gnomeui-2")]
		static extern IntPtr gnome_app_new(IntPtr appname, IntPtr title);
                                                                
		public App (string appname, string title) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (App)) {
				CreateNativeObject (new string[0], new GLib.Value[0]);
				Construct (appname, title);
				return;
			}
			IntPtr nappname = GLib.Marshaller.StringToPtrGStrdup (appname);
			IntPtr ntitle = GLib.Marshaller.StringToPtrGStrdup (title);
			Raw = gnome_app_new(nappname, ntitle);
			GLib.Marshaller.Free (nappname);
			GLib.Marshaller.Free (ntitle);
		}

		[Obsolete("Replaced by overload with no IntPtr arg")]
		public void CreateMenusInterp (Gnome.UIInfo uiinfo, Gtk.CallbackMarshal relay_func, IntPtr data, Gtk.DestroyNotify destroy_func)
		{
			CreateMenusInterp (uiinfo, relay_func, destroy_func);
		}

		[Obsolete("Replaced by overload with no IntPtr arg")]
		public void InsertMenusInterp (string path, Gnome.UIInfo menuinfo, Gtk.CallbackMarshal relay_func, IntPtr data, Gtk.DestroyNotify destroy_func)
		{
			InsertMenusInterp (path, menuinfo, relay_func, destroy_func);
		}

		[Obsolete("Replaced by overload with no IntPtr arg")]
		public void CreateToolbarInterp (Gnome.UIInfo uiinfo, Gtk.CallbackMarshal relay_func, IntPtr data, Gtk.DestroyNotify destroy_func)
		{
			CreateToolbarInterp (uiinfo, relay_func, destroy_func);
		}
