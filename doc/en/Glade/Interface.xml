<Type Name="Interface" FullName="Glade.Interface">
  <TypeSignature Language="C#" Maintainer="auto" Value="public struct Interface" />
  <AssemblyInfo>
    <AssemblyName>glade-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The structures described here are the output of libglade's XML parser.</summary>
    <remarks>These structures are really only useful for people who are extending libglade to handle other widget sets, but it could also be useful for other applications that need to read glade XML files.  If you only wish to use libglade, you don't need to worry about these functions and structures. </remarks>
  </Docs>
  <Members>
    <Member MemberName="Destroy">
      <MemberSignature Language="C#" Value="public void Destroy ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Frees the resources of this interface.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Dump">
      <MemberSignature Language="C#" Value="public void Dump (string filename);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">a <see cref="T:System.String" /></param>
        <summary>This function dumps the contents of a <see cref="T:Glade.Interface" /> into a file as XML.</summary>
        <remarks>It is intended mainly as a debugging tool.</remarks>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static Glade.Interface New (IntPtr raw);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Glade.Interface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">an object of type <see cref="T:System.IntPtr" /></param>
        <summary>Internal method</summary>
        <returns>an object of type <see cref="T:Glade.Interface" /></returns>
        <remarks>This is an internal method and should not be used by user code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NRequires">
      <MemberSignature Language="C#" Value="public uint NRequires;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NToplevels">
      <MemberSignature Language="C#" Value="public uint NToplevels;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The number of Top Level Widget Definitions in the Interface.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Requires">
      <MemberSignature Language="C#" Value="public string Requires;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="toplevels">
      <MemberSignature Language="C#" Value="public Glade.WidgetInfo toplevels { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Glade.WidgetInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The top-level widgets.</summary>
        <value>an object of type <see cref="T:Glade.WidgetInfo" /></value>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Replaced by Toplevels property")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Toplevels">
      <MemberSignature Language="C#" Value="public Glade.WidgetInfo[] Toplevels { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Glade.WidgetInfo[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The Top Level Widgets in the interface.</summary>
        <value>an array of <see cref="T:Glade.WidgetInfo" /> structures.</value>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static Glade.Interface Zero;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Glade.Interface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an empty <see cref="T:Glade.Interface" /></summary>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
