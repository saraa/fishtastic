<Type Name="StockManager" FullName="Gtk.StockManager">
  <TypeSignature Language="C#" Value="public class StockManager" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>this class manages the <see cref="T:Gtk.StockItem" />s</summary>
    <remarks />
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes />
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static void Add (Gtk.StockItem[] items);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Gtk.StockItem[]" />
      </Parameters>
      <Docs>
        <summary>Registers each of the stock items in <paramref name="items" />. 
	  If an item already exists with the same stock ID as one of the 
	  <paramref name="items" />, the old item gets replaced. The stock 
	  items are copied, so GTK+ does not hold any pointer into 
	  <paramref name="items" /> and <paramref name="items" /> can be 
	  freed.
	</summary>
        <param name="items">an array of <see cref="T:Gtk.StockItem" /></param>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StockManager ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Do not use.</summary>
        <returns>a <see cref="T:Gtk.StockManager" /></returns>
        <remarks>Do not use</remarks>
      </Docs>
    </Member>
  </Members>
</Type>