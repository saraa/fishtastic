<Type Name="Arrow" FullName="Gtk.Arrow">
  <TypeSignature Language="C#" Maintainer="Kevin Breit" Value="public class Arrow : Gtk.Misc" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Produces an Arrow pointing in one of four cardinal directions.</summary>
    <remarks>
      <para>
	  Arrow should be used to draw simple arrows that need to
          point in one of the four cardinal directions ( <see cref="P:Gtk.ArrowType.Up" />,  <see cref="P:Gtk.ArrowType.Down" />,  <see cref="P:Gtk.ArrowType.Left" />, or  <see cref="P:Gtk.ArrowType.Right" />).
          The style of the arrow can
          be one of the following: <see cref="P:Gtk.ShadowType.None" />,
          <see cref="P:Gtk.ShadowType.In" />, <see cref="P:Gtk.ShadowType.Out" />, <see cref="P:Gtk.ShadowType.EtchedIn" /> and <see cref="P:Gtk.ShadowType.EtchedOut" />. Note that these directions and style types may be ammended in versions of Gtk to come.
	</para>
      <para>
	  Arrow will fill any space alloted to it, but since it is
	  inherited from <see cref="C:Gtk.Misc" />, it can be padded
	  and/or aligned, fill exactly the space the programmer
	  desires.
	</para>
      <para>
          The direction or style of an arrow can be changed after
          creation by using <see cref="P:Gtk.Arrow.ArrowType" />.
	</para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Misc</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Arrow (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Arrow (Gtk.ArrowType arrow_type, Gtk.ShadowType shadow_type);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="arrow_type" Type="Gtk.ArrowType" />
        <Parameter Name="shadow_type" Type="Gtk.ShadowType" />
      </Parameters>
      <Docs>
        <summary>Constructor</summary>
        <param name="arrow_type">A valid ArrowType.</param>
        <param name="shadow_type">A valid ShadowType.</param>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ShadowType">
      <MemberSignature Language="C#" Value="public Gtk.ShadowType ShadowType { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ShadowType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Used to change the appearance of an outline typically provided by a Frame.</summary>
        <value>Returns a new ShadowType.</value>
        <remarks>
          <para>
            Changes the appearance of an outline typically provided by a <see cref="T:Gtk.Frame" />.
        </para>
          <para>
          The shadow types are: <see cref="P:Gtk.ShadowType.None" />,
          <see cref="P:Gtk.ShadowType.In" />, 
          <see cref="P:Gtk.ShadowType.Out" />, <see cref="P:Gtk.ShadowType.EtchedIn" /> and <see cref="P:Gtk.ShadowType.EtchedOut" />.
        </para>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("shadow-type")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="ArrowType">
      <MemberSignature Language="C#" Value="public Gtk.ArrowType ArrowType { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ArrowType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Used to change the direction of an Arrow.</summary>
        <value>A new Arrow.</value>
        <remarks>
          <para>
            Changes the direction of an Arrow.
          </para>
          <para>
            The cardinal directions are: <see cref="P:Gtk.ArrowType.Up" />, <see cref="P:Gtk.ArrowType.Down" />, <see cref="P:Gtk.ArrowType.Left" /> and <see cref="P:Gtk.ArrowType.Right" />.
          </para>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("arrow-type")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.Arrow" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Arrow (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
  </Members>
</Type>
