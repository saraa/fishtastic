<Type Name="Boxed" FullName="GLib.Boxed">
  <TypeSignature Language="C#" Value="public class Boxed" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>glib-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>An abstract base class to derive structures and marshal them.</summary>
    <remarks>This class is not used by the generator as of 1.0 and will be removed in future versions.</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Boxed (object o);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <summary>Constructs a Boxed type from a raw ref.</summary>
        <param name="o">an object of type <see cref="T:System.Object" /></param>
        <returns>an object of type <see cref="T:GLib.Boxed" /></returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Boxed (IntPtr ptr);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="ptr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal Constructor</summary>
        <param name="ptr">an object of type <see cref="T:System.IntPtr" /></param>
        <returns>an object of type <see cref="T:GLib.Boxed" /></returns>
        <remarks>This is not typically called directly.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public virtual IntPtr Handle { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Do not use.</summary>
        <returns>a <see cref="T:System.IntPtr" /></returns>
        <remarks>Do not use.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Obj">
      <MemberSignature Language="C#" Value="public virtual object Obj { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Do not use.</summary>
        <returns>a <see cref="T:System.Object" /></returns>
        <remarks>Do not use.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>