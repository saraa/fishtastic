<Type Name="GType" FullName="GLib.GType">
  <TypeSignature Language="C#" Maintainer="auto" Value="public struct GType" />
  <AssemblyInfo>
    <AssemblyName>glib-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
  </AssemblyInfo>
  <ThreadSafetyStatement />
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The GLib Runtime type identification and management system. The GType API is the foundation of the GObject system. It provides the facilities for registering and managing all fundamental data types, user-defined object and interface types.</summary>
    <remarks />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GType (IntPtr val);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="val" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="val">a <see cref="T:System.IntPtr" /></param>
        <summary>Constructor for GType. Primarily used in generated wrappers for gtk objects.</summary>
        <remarks>Generated code from gnome/generated/About.cs:

<example><code lang="C#">
                [DllImport("gnomeui-2")]
                static extern IntPtr gnome_about_get_type();
                                                                                                                        
                public static new GLib.GType GType {
                        get {
                                IntPtr raw_ret = gnome_about_get_type();
                                GLib.GType ret = new GLib.GType(raw_ret);
                                return ret;
                        }
                }

  </code></example></remarks>
      </Docs>
    </Member>
    <Member MemberName="Boolean">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Boolean;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for <see langword="bool" /> values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Boxed">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Boxed;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for "boxed" struct values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Char">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Char;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for <see langword="sbyte" /> values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Double">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Double;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for <see langword="double" /> values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Enum">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Enum;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for GType-registered enum values.</summary>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Object to test for equality.</param>
        <summary>Tests for equality.</summary>
        <returns>
          <see langword="true" /> if the native type is equivalent.</returns>
        <remarks>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Flags;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for GType-registered flag values.</summary>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="Float">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Float;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for <see langword="float" /> values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public static GLib.GType FromName (string native_name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="native_name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="native_name">Native type name.</param>
        <summary>Looks up a native type value by name.</summary>
        <returns>the requested type, or <see cref="M:GLib.GType.Invalid" /> if lookup fails.</returns>
        <remarks />
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a hashing value.</summary>
        <returns>An integer hash value.</returns>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public static void Init ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initializes the native type system.</summary>
        <remarks>This operation is implicitly performed by <see cref="M:Gtk.Application.Init" />.  The native type system must be initialized before most glib API is used.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="Int">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Int;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for <see langword="int" /> values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Int64">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Int64;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for <see langword="long" /> values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Interface">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Interface;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for unmanaged interface values.</summary>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="Invalid">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Invalid;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>An invalid <see cref="T:GLib.GType" />.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IsInstance">
      <MemberSignature Language="C#" Value="public bool IsInstance (IntPtr raw);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="raw">a pointer to a native object.</param>
        <summary>Checks if a native object is an instance of the native type.</summary>
        <returns>if <see langword="true" />, the instance is of this type.</returns>
        <remarks />
        <since version="Gtk# 2.14" />
      </Docs>
    </Member>
    <Member MemberName="Long">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Long;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Native G_TYPE_LONG.</summary>
        <remarks>Note, it is safer to use <see cref="M:GLib.GType.Int64" /> when using managed long types.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="public static Type LookupType (IntPtr typeid);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeid" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="typeid">a <see cref="T:System.IntPtr" /></param>
        <summary>Looks up the <see cref="T:System.Type" /> corresponding to an unmanaged GType</summary>
        <returns>a <see cref="T:System.Type" /></returns>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType None;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>A <see cref="T:GLib.GType" /> corresponding to <see langword="void" />.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Object">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Object;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for <see cref="T:GLib.Object" /> values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (GLib.GType a, GLib.GType b);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="GLib.GType" />
        <Parameter Name="b" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <param name="a">a type to compare.</param>
        <param name="b">a type to compare.</param>
        <summary>Equality operator.</summary>
        <returns>if <see langword="true" />, a and b are the same native type.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static Type op_Explicit (GLib.GType gtype);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <param name="gtype">a native type.</param>
        <summary>Casts a native type to a managed type.</summary>
        <returns>a managed type corresponding to the given native type, or <see langword="null" />.</returns>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static GLib.GType op_Explicit (Type type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">a managed type.</param>
        <summary>Casts a managed type to a native type.</summary>
        <returns>a native type corresponding to the given native type, or <see cref="M:GLib.GType.Invalid" /> if no corresponding type is found.</returns>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (GLib.GType a, GLib.GType b);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="GLib.GType" />
        <Parameter Name="b" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <param name="a">a type to compare.</param>
        <param name="b">a type to compare.</param>
        <summary>Inequality operator.</summary>
        <returns>if <see langword="true" />, a and b are not the same native type.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Param">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Param;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for paramspec values.</summary>
        <remarks />
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="Pointer">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType Pointer;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for pointer values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (GLib.GType native_type, Type type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="native_type" Type="GLib.GType" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="native_type">a <see cref="T:GLib.GType" /></param>
        <param name="type">a <see cref="T:System.Type" /></param>
        <summary>Registers a <see cref="T:GLib.GType" /> to <see cref="T:System.Type" /> mapping.</summary>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="String">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType String;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for <see langword="string" /> values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The native type name.</summary>
        <returns>a string containing the native type name.</returns>
        <remarks />
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="UChar">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType UChar;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for <see langword="byte" /> values.</summary>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="UInt">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType UInt;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for <see langword="uint" /> values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="UInt64">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType UInt64;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for <see langword="ulong" /> values.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ULong">
      <MemberSignature Language="C#" Value="public static readonly GLib.GType ULong;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <see cref="T:GLib.GType" /> for gulong values.</summary>
        <remarks>Note: it is safer to use <see cref="M:GLib.GType.UInt64" /> for managed ulongs.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="Val">
      <MemberSignature Language="C#" Value="public IntPtr Val { get; }" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Read only property retrieves the <see cref="T:System.IntPtr" /> representing the GType object in question.</summary>
        <value>a <see cref="T:System.IntPtr" /></value>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
