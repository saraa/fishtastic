<Type Name="Display" FullName="Gdk.Display">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class Display : GLib.Object" />
  <AssemblyInfo>
    <AssemblyName>gdk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>
      <para>Controls the keyboard/mouse pointer grabs and a set of GdkScreens.</para>
    </summary>
    <remarks>
      <para>
        <see cref="T:Gdk.Display" /> objects purpose are two fold:</para>
      <list type="bullet">
        <item>
          <term>To grab/ungrab keyboard focus and mouse pointer</term>
        </item>
        <item>
          <term>To manage and provide information about the <see cref="T:Gdk.Screen" />(s) available for this <see cref="T:Gdk.Display" /></term>
        </item>
      </list>
      <para>
        <see cref="T:Gdk.Display" /> objects are the GDK representation of the X Display which can be described as a workstation consisting of a keyboard a pointing device (such as a mouse) and one or more screens. It is used to open and keep track of various <see cref="T:Gdk.Screen" /> objects currently instanciated by the application. It is also used to grab and release the keyboard and the mouse pointer.</para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>GLib.Object</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    <Member MemberName="OpenDefaultLibgtkOnly">
      <MemberSignature Language="C#" Value="public static Gdk.Display OpenDefaultLibgtkOnly ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Display</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Opens the default display specified by the command line arguments or the environment variables, setting it as the default display, it it was already set, then its just returned.</summary>
        <returns>A <see cref="T:Gdk.Display" /> that is the default display just opened.</returns>
        <remarks>Global.ParseArgs should be called first.
<block subset="none" type="note"><para>
	This method is internal and shouldn't be used in any application.
  </para></block></remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static Gdk.Display Open (string display_name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Display</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display_name" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Opens a display.</summary>
        <param name="display_name">a <see cref="T:System.String" /> -  the name of the display to open</param>
        <returns>a <see cref="T:Gdk.Display" />, or null if the display could not be opened.</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PutEvent">
      <MemberSignature Language="C#" Value="public void PutEvent (Gdk.Event evnt);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evnt" Type="Gdk.Event" />
      </Parameters>
      <Docs>
        <summary>Appends the given event onto the front of the event queue for display.</summary>
        <param name="evnt">a <see cref="T:Gdk.Event" /> to be appended onto the front of the event queue.</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClientMessageFilter">
      <MemberSignature Language="C#" Value="public void AddClientMessageFilter (Gdk.Atom message_type, Gdk.FilterFunc func);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message_type" Type="Gdk.Atom" />
        <Parameter Name="func" Type="Gdk.FilterFunc" />
      </Parameters>
      <Docs>
        <summary>Adds a filter to be called when X ClientMessage events are received.</summary>
        <param name="message_type">a <see cref="T:Gdk.Atom" /> representing the type of ClientMessage events to receive.</param>
        <param name="func">a <see cref="T:Gdk.FilterFunc" /> to call to process the event.</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointerIsGrabbed">
      <MemberSignature Language="C#" Value="public bool PointerIsGrabbed ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Test if the pointer is grabbed.</summary>
        <returns>a <see cref="T:System.Boolean" /> that is true if an active X pointer grab is in effect.</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public void Beep ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emits a short beep.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekEvent">
      <MemberSignature Language="C#" Value="public Gdk.Event PeekEvent ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Event</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a copy of the first <see cref="T:Gdk.Event" /> in the display's event queue, without removing the event from the queue. (Note that this function will not get more events from the windowing system. It only checks the events that have already been moved to the GDK event queue.)</summary>
        <returns>a copy of the first <see cref="T:Gdk.Event" /> on the event queue, or null if no events are in the queue.</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the connection windowing system for the given display, and cleans up associated resources.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScreen">
      <MemberSignature Language="C#" Value="public Gdk.Screen GetScreen (int screen_num);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Screen</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screen_num" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Returns a screen object for one of the screens of the display.</summary>
        <param name="screen_num">a <see cref="T:System.Int32" /> representing the screen number</param>
        <returns>a <see cref="T:Gdk.Screen" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPointerHooks">
      <MemberSignature Language="C#" Value="public Gdk.DisplayPointerHooks SetPointerHooks (Gdk.DisplayPointerHooks new_hooks);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.DisplayPointerHooks</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="new_hooks" Type="Gdk.DisplayPointerHooks" />
      </Parameters>
      <Docs>
        <summary>
        </summary>
        <param name="new_hooks">a <see cref="T:Gdk.DisplayPointerHooks" /></param>
        <returns> the previous <see cref="T:Gdk.DisplayPointerHooks" /> table</returns>
        <remarks>
          <para>
	     This function allows for hooking into the operation of
	     getting the current location of the pointer on a
	     particular display. This is only useful for such
	     low-level tools as an event recorder. Applications
	     should never have any reason to use this facility.
	   </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardUngrab">
      <MemberSignature Language="C#" Value="public void KeyboardUngrab (uint time_);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time_" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>Release any keyboard grab.</summary>
        <param name="time_">a <see cref="T:System.UInt32" /> representing a  a timestap.</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PointerUngrab">
      <MemberSignature Language="C#" Value="public void PointerUngrab (uint time_);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time_" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>Release any pointer grab.</summary>
        <param name="time_">a <see cref="T:System.UInt32" /> representing a  a timestap.</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sync">
      <MemberSignature Language="C#" Value="public void Sync ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Display (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">a <see cref="T:System.IntPtr" /></param>
        <remarks>This is not typically used by C# code.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static Gdk.Display Default { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Display</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the default <see cref="T:Gdk.Screen" /> for the display.</summary>
        <value> the default <see cref="T:Gdk.Screen" /> object for display.</value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the display</summary>
        <value>A <see cref="T:System.String" /> representing the
        display name.</value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleClickTime">
      <MemberSignature Language="C#" Value="public uint DoubleClickTime { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Sets the double-click timeout.</summary>
        <value>a <see cref="T:Gdk.Display" />, or null if there is no default display.</value>
        <remarks>
          <para>Sets the double click time (two clicks within this
	      time interval count as a double click). Applications
	      should NOT set this, it is a global user-configured
	      setting.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultScreen">
      <MemberSignature Language="C#" Value="public Gdk.Screen DefaultScreen { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Screen</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The default screen..</summary>
        <value>The screen represending the DefaultScreen.</value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorePointer">
      <MemberSignature Language="C#" Value="public Gdk.Device CorePointer { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Device</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the core pointer device for the given display.</summary>
        <value>The core pointer <see cref="T:Gdk.Device" /> for the display.</value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Event">
      <MemberSignature Language="C#" Value="public Gdk.Event Event { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Event</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
        </value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="NScreens">
      <MemberSignature Language="C#" Value="public int NScreens { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event Gdk.ClosedHandler Closed;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.ClosedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This event is emitted when the connect to the windowing system is closed.</summary>
        <remarks>None.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("closed")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="GetPointer">
      <MemberSignature Language="C#" Value="public void GetPointer (Gdk.Screen screen, out int x, out int y, out Gdk.ModifierType mask);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screen" Type="Gdk.Screen" />
        <Parameter Name="x" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="y" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="mask" Type="Gdk.ModifierType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>Gets the current location of the pointer and the
        current modifier mask for a given display.</summary>
        <param name="screen">a <see cref="T:Gdk.Screen" /></param>
        <param name="x">a <see cref="T:System.Int32&amp;" /></param>
        <param name="y">a <see cref="T:System.Int32&amp;" /></param>
        <param name="mask">a <see cref="T:Gdk.ModifierType&amp;" /></param>
        <remarks>None</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWindowAtPointer">
      <MemberSignature Language="C#" Value="public Gdk.Window GetWindowAtPointer (out int win_x, out int win_y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="win_x" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="win_y" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>Obtains the window underneath the mouse pointer.</summary>
        <param name="win_x">a <see cref="T:System.Int32&amp;" /></param>
        <param name="win_y">a <see cref="T:System.Int32&amp;" /></param>
        <returns>a <see cref="T:Gdk.Window" /></returns>
        <remarks>Obtains the window underneath the mouse pointer,
        returning the location of that window in win_x, win_y for
        screen. Returns NULL if the window under the mouse pointer is
        not known to GDK (for example, belongs to another application).</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the current location of the pointer and the current modifier mask for a given display.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (bool is_error);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is_error" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Default handler for the <see cref="M:Gdk.Display.Closed" /> event.</summary>
        <param name="is_error">a <see cref="T:System.Boolean" /></param>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gdk.Display.Closed" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Display (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="ListDevices">
      <MemberSignature Language="C#" Value="public Gdk.Device[] ListDevices ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Device[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the list of available input devices attached to the display.</summary>
        <returns>a <see cref="T:Gdk.Device[]" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Display ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPointer">
      <MemberSignature Language="C#" Value="public void GetPointer (out Gdk.Screen screen, out int x, out int y, out Gdk.ModifierType mask);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screen" Type="Gdk.Screen&amp;" RefType="out" />
        <Parameter Name="x" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="y" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="mask" Type="Gdk.ModifierType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="screen">a <see cref="T:Gdk.Screen" /></param>
        <param name="x">a <see cref="T:System.Int32" /></param>
        <param name="y">a <see cref="T:System.Int32" /></param>
        <param name="mask">a <see cref="T:Gdk.ModifierType" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPointer">
      <MemberSignature Language="C#" Value="public void GetPointer (out int x, out int y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="y" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="x">a <see cref="T:System.Int32" /></param>
        <param name="y">a <see cref="T:System.Int32" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPointer">
      <MemberSignature Language="C#" Value="public void GetPointer (out int x, out int y, out Gdk.ModifierType mod);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="y" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="mod" Type="Gdk.ModifierType&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="x">a <see cref="T:System.Int32" /></param>
        <param name="y">a <see cref="T:System.Int32" /></param>
        <param name="mod">a <see cref="T:Gdk.ModifierType" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPointer">
      <MemberSignature Language="C#" Value="public void GetPointer (out Gdk.Screen screen, out int x, out int y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screen" Type="Gdk.Screen&amp;" RefType="out" />
        <Parameter Name="x" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="y" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="screen">a <see cref="T:Gdk.Screen" /></param>
        <param name="x">a <see cref="T:System.Int32" /></param>
        <param name="y">a <see cref="T:System.Int32" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultGroup">
      <MemberSignature Language="C#" Value="public Gdk.Window DefaultGroup { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:Gdk.Window" /></value>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="DoubleClickDistance">
      <MemberSignature Language="C#" Value="public uint DoubleClickDistance { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.UInt32" /></value>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursorSize">
      <MemberSignature Language="C#" Value="public uint DefaultCursorSize { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <value>a <see cref="T:System.UInt32" /></value>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="GetMaximalCursorSize">
      <MemberSignature Language="C#" Value="public void GetMaximalCursorSize (out uint width, out uint height);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.UInt32&amp;" RefType="out" />
        <Parameter Name="height" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="width">a <see cref="T:System.UInt32" /></param>
        <param name="height">a <see cref="T:System.UInt32" /></param>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="SupportsCursorColor">
      <MemberSignature Language="C#" Value="public bool SupportsCursorColor ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="SupportsCursorAlpha">
      <MemberSignature Language="C#" Value="public bool SupportsCursorAlpha ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="RequestSelectionNotification">
      <MemberSignature Language="C#" Value="public bool RequestSelectionNotification (Gdk.Atom selection);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selection" Type="Gdk.Atom" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="selection">a <see cref="T:Gdk.Atom" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="StoreClipboard">
      <MemberSignature Language="C#" Value="public void StoreClipboard (Gdk.Window clipboard_window, uint time_, Gdk.Atom targets, int n_targets);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clipboard_window" Type="Gdk.Window" />
        <Parameter Name="time_" Type="System.UInt32" />
        <Parameter Name="targets" Type="Gdk.Atom" />
        <Parameter Name="n_targets" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="clipboard_window">a <see cref="T:Gdk.Window" /></param>
        <param name="time_">a <see cref="T:System.UInt32" /></param>
        <param name="targets">a <see cref="T:Gdk.Atom" /></param>
        <param name="n_targets">a <see cref="T:System.Int32" /></param>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="SupportsSelectionNotification">
      <MemberSignature Language="C#" Value="public bool SupportsSelectionNotification ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="SupportsClipboardPersistence">
      <MemberSignature Language="C#" Value="public bool SupportsClipboardPersistence ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="WarpPointer">
      <MemberSignature Language="C#" Value="public void WarpPointer (Gdk.Screen screen, int x, int y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screen" Type="Gdk.Screen" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="screen">Screen to reposition pointer onto.</param>
        <param name="x">X coordinate of pointer destination.</param>
        <param name="y">Y coordinate of pointer destination.</param>
        <summary>Warps the mouse pointer to a coordinate on a Screen.</summary>
        <remarks>When grabs are in effect, the pointer will only be moved as far as the grab allows. Warping the pointer creates events as if the mouse were instantaneously moved to the destination by the user.</remarks>
        <since version="Gtk# 2.8" />
      </Docs>
    </Member>
    <Member MemberName="SupportsInputShapes">
      <MemberSignature Language="C#" Value="public bool SupportsInputShapes { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if input shapes are supported.</summary>
        <value>If input shapes are supported, <see langword="true" />, otherwise <see langword="false" />.</value>
        <remarks>Use <see cref="M:Gdk.Window.InputShapeCombineMask" /> to alter the input shape if support is indicated.</remarks>
        <since version="Gtk# 2.10" />
      </Docs>
    </Member>
    <Member MemberName="SupportsShapes">
      <MemberSignature Language="C#" Value="public bool SupportsShapes { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if shaped windows are supported.</summary>
        <value>If shaped windows are supported, <see langword="true" />, otherwise <see langword="false" />.</value>
        <remarks>Use <see cref="M:Gdk.Window.ShapeCombineMask" /> to alter the shape if support is indicated.</remarks>
        <since version="Gtk# 2.10" />
      </Docs>
    </Member>
    <Member MemberName="SupportsComposite">
      <MemberSignature Language="C#" Value="public bool SupportsComposite { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if Compositing is supported.</summary>
        <value>If compositing is supported, <see langword="true" />, otherwise <see langword="false" />.</value>
        <remarks />
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
  </Members>
</Type>
