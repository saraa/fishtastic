<?xml version="1.0"?>
<api>
<!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="GnomeDb" library="gnomedb-2">
    <enum name="ComponentType" cname="GnomeDbComponentType" type="enum">
      <member cname="GNOME_DB_COMPONENT_TYPE_INVALID" name="Invalid" value="-1"/>
      <member cname="GNOME_DB_COMPONENT_TYPE_EXE" name="Exe"/>
      <member cname="GNOME_DB_COMPONENT_TYPE_SHLIB" name="Shlib"/>
      <member cname="GNOME_DB_COMPONENT_TYPE_FACTORY" name="Factory"/>
    </enum>
    <enum name="FormType" cname="GnomeDbFormType" type="enum">
      <member cname="GNOME_DB_FORM_TYPE_NAVIGATOR" name="Navigator"/>
      <member cname="GNOME_DB_FORM_TYPE_LIST" name="List"/>
    </enum>
    <callback name="GridForeachFunc" cname="GnomeDbGridForeachFunc">
      <return-type type="void"/>
      <parameters>
        <parameter type="GnomeDbGrid*" name="grid"/>
        <parameter type="gint" name="row"/>
        <parameter type="gpointer" name="user_data"/>
      </parameters>
    </callback>
    <object name="Browser" cname="GnomeDbBrowser" parent="GtkVBox">
      <field cname="priv" type="GnomeDbBrowserPrivate*"/>
      <property name="Connection" cname="connection" type="GdaConnection" readable="true" writeable="true"/>
      <signal name="ProgressMessage" cname="progress_message" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbBrowser*" name="browser"/>
          <parameter type="const-gchar*" name="msg"/>
        </parameters>
      </signal>
      <method name="GetConnection" cname="gnome_db_browser_get_connection">
        <return-type type="GdaConnection*"/>
      </method>
      <method name="GetType" cname="gnome_db_browser_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_browser_new"/>
      <method name="Refresh" cname="gnome_db_browser_refresh">
        <return-type type="void"/>
      </method>
      <method name="SetConnection" cname="gnome_db_browser_set_connection">
        <return-type type="void"/>
        <parameters>
          <parameter type="GdaConnection*" name="cnc"/>
        </parameters>
      </method>
    </object>
    <object name="Combo" cname="GnomeDbCombo" parent="GtkCombo">
      <field cname="priv" type="GnomeDbComboPrivate*"/>
      <property name="Model" cname="model" type="GdaDataModel" readable="true" writeable="true"/>
      <method name="GetType" cname="gnome_db_combo_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_combo_new"/>
      <method name="SetModel" cname="gnome_db_combo_set_model">
        <return-type type="void"/>
        <parameters>
          <parameter type="GdaDataModel*" name="model"/>
          <parameter type="gint" name="pos"/>
        </parameters>
      </method>
    </object>
    <object name="ConnectionProperties" cname="GnomeDbConnectionProperties" parent="GtkVBox">
      <field cname="priv" type="GnomeDbConnectionPropertiesPrivate*"/>
      <method name="GetConnection" cname="gnome_db_connection_properties_get_connection">
        <return-type type="GdaConnection*"/>
      </method>
      <method name="GetType" cname="gnome_db_connection_properties_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_connection_properties_new">
        <parameters>
          <parameter type="GdaConnection*" name="cnc"/>
        </parameters>
      </constructor>
      <method name="SetConnection" cname="gnome_db_connection_properties_set_connection">
        <return-type type="void"/>
        <parameters>
          <parameter type="GdaConnection*" name="cnc"/>
        </parameters>
      </method>
    </object>
    <object name="ConnectionSelector" cname="GnomeDbConnectionSelector" parent="GtkOptionMenu">
      <field cname="priv" type="GnomeDbConnectionSelectorPrivate*"/>
      <method name="GetType" cname="gnome_db_connection_selector_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_connection_selector_new"/>
    </object>
    <object name="Control" cname="GnomeDbControl" parent="BonoboControl" hidden="1">
      <field cname="priv" type="GnomeDbControlPrivate*"/>
      <signal name="Activated" cname="activated" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbControl*" name="control"/>
        </parameters>
      </signal>
      <signal name="GetProperty" cname="get_property" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbControl*" name="control"/>
          <parameter type="GdaValue*" name="value"/>
          <parameter type="guint" name="id"/>
        </parameters>
      </signal>
      <signal name="SetProperty" cname="set_property" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbControl*" name="control"/>
          <parameter type="const-GdaValue*" name="value"/>
          <parameter type="guint" name="id"/>
        </parameters>
      </signal>
      <method name="Activate" cname="gnome_db_control_activate">
        <return-type type="void"/>
      </method>
      <method name="Construct" cname="gnome_db_control_construct">
        <return-type type="GnomeDbControl*"/>
        <parameters>
          <parameter type="GtkWidget*" name="widget"/>
        </parameters>
      </method>
      <method name="Deactivate" cname="gnome_db_control_deactivate">
        <return-type type="void"/>
      </method>
      <method name="GetType" cname="gnome_db_control_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_control_new">
        <parameters>
          <parameter type="GtkWidget*" name="widget"/>
        </parameters>
      </constructor>
      <method name="SetStatus" cname="gnome_db_control_set_status">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="msg"/>
        </parameters>
      </method>
      <method name="SetUi" cname="gnome_db_control_set_ui">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="app_prefix"/>
          <parameter type="const-gchar*" name="ui_xml_file"/>
          <parameter type="BonoboUIVerb*" name="verbs"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
    </object>
    <object name="ControlWidget" cname="GnomeDbControlWidget" parent="GtkVBox">
      <field cname="priv" type="GnomeDbControlWidgetPrivate*"/>
      <method name="Activate" cname="gnome_db_control_widget_activate">
        <return-type type="void"/>
      </method>
      <method name="Construct" cname="gnome_db_control_widget_construct">
        <return-type type="GtkWidget*"/>
        <parameters>
          <parameter type="const-gchar*" name="id"/>
          <parameter type="Bonobo_UIContainer" name="uic"/>
        </parameters>
      </method>
      <method name="Deactivate" cname="gnome_db_control_widget_deactivate">
        <return-type type="void"/>
      </method>
      <method name="GetId" cname="gnome_db_control_widget_get_id">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetObjref" cname="gnome_db_control_widget_get_objref">
        <return-type type="Bonobo_Unknown"/>
      </method>
      <method name="GetType" cname="gnome_db_control_widget_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetUiContainer" cname="gnome_db_control_widget_get_ui_container">
        <return-type type="Bonobo_UIContainer"/>
      </method>
      <method name="IsAlive" cname="gnome_db_control_widget_is_alive">
        <return-type type="gboolean"/>
      </method>
      <constructor cname="gnome_db_control_widget_new">
        <parameters>
          <parameter type="const-gchar*" name="id"/>
          <parameter type="Bonobo_UIContainer" name="uic"/>
        </parameters>
      </constructor>
      <constructor cname="gnome_db_control_widget_new_from_corba">
        <parameters>
          <parameter type="Bonobo_Control" name="control"/>
          <parameter type="Bonobo_UIContainer" name="uic"/>
        </parameters>
      </constructor>
    </object>
    <object name="DataSourceSelector" cname="GnomeDbDataSourceSelector" parent="GtkOptionMenu">
      <field cname="priv" type="GnomeDbDataSourceSelectorPrivate*"/>
      <method name="GetType" cname="gnome_db_data_source_selector_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_data_source_selector_new">
        <parameters>
          <parameter type="const-gchar*" name="provider"/>
        </parameters>
      </constructor>
    </object>
    <object name="DsnConfig" cname="GnomeDbDsnConfig" parent="GtkVBox">
      <field cname="priv" type="GnomeDbDsnConfigPrivate*"/>
      <method name="GetInfo" cname="gnome_db_dsn_config_get_info">
        <return-type type="GdaDataSourceInfo*"/>
      </method>
      <method name="GetType" cname="gnome_db_dsn_config_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_dsn_config_new"/>
      <method name="SetInfo" cname="gnome_db_dsn_config_set_info">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-GdaDataSourceInfo*" name="dsn_info"/>
        </parameters>
      </method>
    </object>
    <object name="DsnConfigDruid" cname="GnomeDbDsnConfigDruid" parent="GnomeDruid">
      <field cname="priv" type="GnomeDbDsnConfigDruidPrivate*"/>
      <signal name="Finished" cname="finished" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbDsnConfigDruid*" name="druid"/>
          <parameter type="gboolean" name="error"/>
        </parameters>
      </signal>
      <method name="GetDsn" cname="gnome_db_dsn_config_druid_get_dsn">
        <return-type type="const-GdaDataSourceInfo*"/>
      </method>
      <method name="GetType" cname="gnome_db_dsn_config_druid_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_dsn_config_druid_new"/>
    </object>
    <object name="Editor" cname="GnomeDbEditor" parent="GtkVBox">
      <field cname="priv" type="GnomeDbEditorPrivate*"/>
      <method name="CopyClipboard" cname="gnome_db_editor_copy_clipboard">
        <return-type type="void"/>
      </method>
      <method name="CutClipboard" cname="gnome_db_editor_cut_clipboard">
        <return-type type="void"/>
      </method>
      <method name="GetAllText" cname="gnome_db_editor_get_all_text">
        <return-type type="gchar*"/>
      </method>
      <method name="GetHighlight" cname="gnome_db_editor_get_highlight">
        <return-type type="gboolean"/>
      </method>
      <method name="GetType" cname="gnome_db_editor_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="LoadFromFile" cname="gnome_db_editor_load_from_file">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="filename"/>
        </parameters>
      </method>
      <constructor cname="gnome_db_editor_new"/>
      <method name="PasteClipboard" cname="gnome_db_editor_paste_clipboard">
        <return-type type="void"/>
      </method>
      <method name="SaveToFile" cname="gnome_db_editor_save_to_file">
        <return-type type="gboolean"/>
        <parameters>
          <parameter type="const-gchar*" name="filename"/>
        </parameters>
      </method>
      <method name="SetEditable" cname="gnome_db_editor_set_editable">
        <return-type type="void"/>
        <parameters>
          <parameter type="gboolean" name="editable"/>
        </parameters>
      </method>
      <method name="SetHighlight" cname="gnome_db_editor_set_highlight">
        <return-type type="void"/>
        <parameters>
          <parameter type="gboolean" name="highlight"/>
        </parameters>
      </method>
      <method name="SetText" cname="gnome_db_editor_set_text">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="text"/>
          <parameter type="gint" name="len"/>
        </parameters>
      </method>
    </object>
    <object name="Error" cname="GnomeDbError" parent="GtkVBox">
      <field cname="priv" type="GnomeDbErrorPrivate*"/>
      <method name="Clear" cname="gnome_db_error_clear">
        <return-type type="void"/>
      </method>
      <method name="GetPosition" cname="gnome_db_error_get_position">
        <return-type type="gint"/>
      </method>
      <method name="GetType" cname="gnome_db_error_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_error_new"/>
      <method name="Next" cname="gnome_db_error_next">
        <return-type type="void"/>
      </method>
      <method name="Prev" cname="gnome_db_error_prev">
        <return-type type="void"/>
      </method>
      <method name="Show" cname="gnome_db_error_show">
        <return-type type="void"/>
        <parameters>
          <parameter type="GList*" name="errors"/>
        </parameters>
      </method>
    </object>
    <object name="ErrorDialog" cname="GnomeDbErrorDialog" parent="GtkDialog">
      <field cname="priv" type="GnomeDbErrorDialogPrivate*"/>
      <property name="Title" cname="title" type="gchar*" readable="true" writeable="true"/>
      <method name="GetTitle" cname="gnome_db_error_dialog_get_title">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetType" cname="gnome_db_error_dialog_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_error_dialog_new">
        <parameters>
          <parameter type="gchar*" name="title"/>
        </parameters>
      </constructor>
      <method name="SetTitle" cname="gnome_db_error_dialog_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="title"/>
        </parameters>
      </method>
      <method name="ShowErrors" cname="gnome_db_error_dialog_show_errors">
        <return-type type="void"/>
        <parameters>
          <parameter type="GList*" name="error_list"/>
        </parameters>
      </method>
    </object>
    <object name="Form" cname="GnomeDbForm" parent="GtkVBox">
      <field cname="priv" type="GnomeDbFormPrivate*"/>
      <signal name="ModelChanged" cname="model_changed" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbForm*" name="form"/>
        </parameters>
      </signal>
      <method name="GetCurrentRow" cname="gnome_db_form_get_current_row">
        <return-type type="gint"/>
      </method>
      <method name="GetFormType" cname="gnome_db_form_get_form_type">
        <return-type type="GnomeDbFormType"/>
      </method>
      <method name="GetModel" cname="gnome_db_form_get_model">
        <return-type type="GdaDataModel*"/>
      </method>
      <method name="GetType" cname="gnome_db_form_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_form_new"/>
      <method name="SetCurrentRow" cname="gnome_db_form_set_current_row">
        <return-type type="void"/>
        <parameters>
          <parameter type="gint" name="row"/>
        </parameters>
      </method>
      <method name="SetFormType" cname="gnome_db_form_set_form_type">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbFormType" name="type"/>
        </parameters>
      </method>
      <method name="SetModel" cname="gnome_db_form_set_model">
        <return-type type="void"/>
        <parameters>
          <parameter type="GdaDataModel*" name="model"/>
        </parameters>
      </method>
    </object>
    <object name="GrayBar" cname="GnomeDbGrayBar" parent="GtkEventBox">
      <field cname="priv" type="GnomeDbGrayBarPrivate*"/>
      <property name="Text" cname="text" type="gchar*" readable="true" writeable="true"/>
      <method name="GetType" cname="gnome_db_gray_bar_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_gray_bar_new">
        <parameters>
          <parameter type="const-gchar*" name="text"/>
        </parameters>
      </constructor>
      <method name="SetText" cname="gnome_db_gray_bar_set_text">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="text"/>
        </parameters>
      </method>
    </object>
    <object name="Grid" cname="GnomeDbGrid" parent="GtkVBox">
      <field cname="priv" type="GnomeDbGridPrivate*"/>
      <property name="Model" cname="model" type="GdaDataModel" readable="true" writeable="true"/>
      <signal name="RowSelected" cname="row_selected" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbGrid*" name="grid"/>
          <parameter type="gint" name="row"/>
        </parameters>
      </signal>
      <signal name="SelectionCleared" cname="selection_cleared" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbGrid*" name="grid"/>
        </parameters>
      </signal>
      <signal name="DoubleClicked" cname="double_clicked" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbGrid*" name="grid"/>
          <parameter type="gint" name="row"/>
        </parameters>
      </signal>
      <signal name="CreatePopupMenu" cname="create_popup_menu" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbGrid*" name="grid"/>
          <parameter type="GtkWidget*" name="menu"/>
        </parameters>
      </signal>
      <method name="FindRowFromData" cname="gnome_db_grid_find_row_from_data">
        <return-type type="gint"/>
        <parameters>
          <parameter type="gpointer" name="data"/>
        </parameters>
      </method>
      <method name="ForeachSelected" cname="gnome_db_grid_foreach_selected">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbGridForeachFunc" name="foreach_func"/>
          <parameter type="gpointer" name="user_data"/>
        </parameters>
      </method>
      <method name="GetModel" cname="gnome_db_grid_get_model">
        <return-type type="GdaDataModel*"/>
      </method>
      <method name="GetRowData" cname="gnome_db_grid_get_row_data">
        <return-type type="gpointer"/>
        <parameters>
          <parameter type="gint" name="row"/>
        </parameters>
      </method>
      <method name="GetSelection" cname="gnome_db_grid_get_selection">
        <return-type type="GList*"/>
      </method>
      <method name="GetSelectionMode" cname="gnome_db_grid_get_selection_mode">
        <return-type type="GtkSelectionMode"/>
      </method>
      <method name="GetShowTitle" cname="gnome_db_grid_get_show_title">
        <return-type type="gboolean"/>
      </method>
      <method name="GetTitle" cname="gnome_db_grid_get_title">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetType" cname="gnome_db_grid_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="HideColumnTitles" cname="gnome_db_grid_hide_column_titles">
        <return-type type="void"/>
      </method>
      <constructor cname="gnome_db_grid_new"/>
      <constructor cname="gnome_db_grid_new_with_model">
        <parameters>
          <parameter type="GdaDataModel*" name="model"/>
        </parameters>
      </constructor>
      <method name="SelectAll" cname="gnome_db_grid_select_all">
        <return-type type="void"/>
      </method>
      <method name="SetModel" cname="gnome_db_grid_set_model">
        <return-type type="void"/>
        <parameters>
          <parameter type="GdaDataModel*" name="model"/>
        </parameters>
      </method>
      <method name="SetRowData" cname="gnome_db_grid_set_row_data">
        <return-type type="void"/>
        <parameters>
          <parameter type="gint" name="row"/>
          <parameter type="gpointer" name="data"/>
        </parameters>
      </method>
      <method name="SetSelectionMode" cname="gnome_db_grid_set_selection_mode">
        <return-type type="void"/>
        <parameters>
          <parameter type="GtkSelectionMode" name="mode"/>
        </parameters>
      </method>
      <method name="SetShowTitle" cname="gnome_db_grid_set_show_title">
        <return-type type="void"/>
        <parameters>
          <parameter type="gboolean" name="show"/>
        </parameters>
      </method>
      <method name="SetTitle" cname="gnome_db_grid_set_title">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="title"/>
        </parameters>
      </method>
      <method name="ShowColumnTitles" cname="gnome_db_grid_show_column_titles">
        <return-type type="void"/>
      </method>
      <method name="UnselectAll" cname="gnome_db_grid_unselect_all">
        <return-type type="void"/>
      </method>
    </object>
    <object name="IconList" cname="GnomeDbIconList" parent="GnomeIconList">
      <field cname="priv" type="GnomeDbIconListPrivate*"/>
      <property name="Model" cname="model" type="GdaDataModel" readable="true" writeable="true"/>
      <method name="GetType" cname="gnome_db_icon_list_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_icon_list_new">
        <parameters>
          <parameter type="guint" name="icon_width"/>
        </parameters>
      </constructor>
      <method name="SetModel" cname="gnome_db_icon_list_set_model">
        <return-type type="void"/>
        <parameters>
          <parameter type="GdaDataModel*" name="model"/>
        </parameters>
      </method>
    </object>
    <object name="List" cname="GnomeDbList" parent="GtkVBox">
      <field cname="priv" type="GnomeDbListPrivate*"/>
      <property name="Model" cname="model" type="GdaDataModel" readable="true" writeable="true"/>
      <signal name="RowSelected" cname="row_selected" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbList*" name="list"/>
          <parameter type="gint" name="row"/>
        </parameters>
      </signal>
      <signal name="SelectionCleared" cname="selection_cleared" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbList*" name="list"/>
          <parameter type="gint" name="row"/>
        </parameters>
      </signal>
      <method name="GetModel" cname="gnome_db_list_get_model">
        <return-type type="GdaDataModel*"/>
      </method>
      <method name="GetType" cname="gnome_db_list_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_list_new"/>
      <constructor cname="gnome_db_list_new_with_model">
        <parameters>
          <parameter type="GdaDataModel*" name="model"/>
          <parameter type="gint" name="col"/>
        </parameters>
      </constructor>
      <method name="SetModel" cname="gnome_db_list_set_model">
        <return-type type="void"/>
        <parameters>
          <parameter type="GdaDataModel*" name="model"/>
          <parameter type="gint" name="col"/>
        </parameters>
      </method>
    </object>
    <object name="Login" cname="GnomeDbLogin" parent="GtkVBox">
      <field cname="priv" type="GnomeDbLoginPrivate*"/>
      <property name="Dsn" cname="dsn" type="gchar*" readable="true"/>
      <property name="Username" cname="username" type="gchar*" readable="true"/>
      <property name="Password" cname="password" type="gchar*" readable="true"/>
      <method name="GetDsn" cname="gnome_db_login_get_dsn">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetPassword" cname="gnome_db_login_get_password">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetType" cname="gnome_db_login_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetUsername" cname="gnome_db_login_get_username">
        <return-type type="const-gchar*"/>
      </method>
      <constructor cname="gnome_db_login_new">
        <parameters>
          <parameter type="const-gchar*" name="dsn"/>
        </parameters>
      </constructor>
      <method name="SetPassword" cname="gnome_db_login_set_password">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="password"/>
        </parameters>
      </method>
      <method name="SetUsername" cname="gnome_db_login_set_username">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="username"/>
        </parameters>
      </method>
    </object>
    <object name="LoginDialog" cname="GnomeDbLoginDialog" parent="GtkDialog">
      <field cname="priv" type="GnomeDbLoginDialogPrivate*"/>
      <property name="Dsn" cname="dsn" type="gchar*" readable="true"/>
      <property name="Username" cname="username" type="gchar*" readable="true"/>
      <property name="Password" cname="password" type="gchar*" readable="true"/>
      <method name="GetDsn" cname="gnome_db_login_dialog_get_dsn">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetLoginWidget" cname="gnome_db_login_dialog_get_login_widget">
        <return-type type="GtkWidget*"/>
      </method>
      <method name="GetPassword" cname="gnome_db_login_dialog_get_password">
        <return-type type="const-gchar*"/>
      </method>
      <method name="GetType" cname="gnome_db_login_dialog_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetUsername" cname="gnome_db_login_dialog_get_username">
        <return-type type="const-gchar*"/>
      </method>
      <constructor cname="gnome_db_login_dialog_new">
        <parameters>
          <parameter type="const-gchar*" name="title"/>
        </parameters>
      </constructor>
      <method name="Run" cname="gnome_db_login_dialog_run">
        <return-type type="gboolean"/>
      </method>
    </object>
    <object name="ProviderSelector" cname="GnomeDbProviderSelector" parent="GtkOptionMenu">
      <field cname="priv" type="GnomeDbProviderSelectorPrivate*"/>
      <method name="GetType" cname="gnome_db_provider_selector_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_provider_selector_new"/>
    </object>
    <object name="ReportEditor" cname="GnomeDbReportEditor" parent="GtkVBox">
      <field cname="priv" type="GnomeDbReportEditorPrivate*"/>
      <method name="GetType" cname="gnome_db_report_editor_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_report_editor_new"/>
    </object>
    <object name="TableEditor" cname="GnomeDbTableEditor" parent="GtkVBox">
      <field cname="priv" type="GnomeDbTableEditorPrivate*"/>
      <method name="GetType" cname="gnome_db_table_editor_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <constructor cname="gnome_db_table_editor_new"/>
    </object>
    <object name="Window" cname="GnomeDbWindow" parent="BonoboWindow" hidden="1">
      <field cname="priv" type="GnomeDbWindowPrivate*"/>
      <property name="Contents" cname="contents" type="GtkWidget" readable="true" writeable="true"/>
      <property name="Status" cname="status" type="gchar*" writeable="true"/>
      <signal name="Close" cname="close" when="LAST">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbWindow*" name="window"/>
        </parameters>
      </signal>
      <method name="Close" cname="gnome_db_window_close">
        <return-type type="void"/>
      </method>
      <method name="GetContents" cname="gnome_db_window_get_contents">
        <return-type type="GtkWidget*"/>
      </method>
      <method name="GetType" cname="gnome_db_window_get_type" shared="true">
        <return-type type="GType"/>
      </method>
      <method name="GetUiComponent" cname="gnome_db_window_get_ui_component">
        <return-type type="BonoboUIComponent*"/>
      </method>
      <method name="GetUiContainer" cname="gnome_db_window_get_ui_container">
        <return-type type="Bonobo_UIContainer"/>
      </method>
      <constructor cname="gnome_db_window_new">
        <parameters>
          <parameter type="const-gchar*" name="name"/>
          <parameter type="const-gchar*" name="app_prefix"/>
          <parameter type="const-gchar*" name="ui_xml_file"/>
          <parameter type="BonoboUIVerb*" name="verbs"/>
          <parameter type="gpointer" name="data"/>
        </parameters>
      </constructor>
      <method name="SetContents" cname="gnome_db_window_set_contents">
        <return-type type="void"/>
        <parameters>
          <parameter type="GtkWidget*" name="contents"/>
        </parameters>
      </method>
      <method name="SetStatus" cname="gnome_db_window_set_status">
        <return-type type="void"/>
        <parameters>
          <parameter type="const-gchar*" name="status"/>
        </parameters>
      </method>
      <method name="Show" cname="gnome_db_window_show">
        <return-type type="void"/>
      </method>
    </object>
    <struct name="ComponentInfo" cname="GnomeDbComponentInfo">
      <field cname="id" type="gchar*"/>
      <field cname="location" type="gchar*"/>
      <field cname="type" type="GnomeDbComponentType"/>
      <field cname="description" type="gchar*"/>
      <field cname="repo_ids" type="GList*"/>
      <field cname="username" type="gchar*"/>
      <field cname="hostname" type="gchar*"/>
      <field cname="domain" type="gchar*"/>
      <field cname="properties" type="GdaParameterList*"/>
    </struct>
    <struct name="EditorClass" cname="GnomeDbEditorClass">
      <field cname="parent_class" type="GtkVBoxClass"/>
      <callback cname="text_changed">
        <return-type type="void"/>
        <parameters>
          <parameter type="GnomeDbEditor" name="editor"/>
        </parameters>
      </callback>
    </struct>
    <object name="Stock" cname="GnomeDbStock">
      <static-string cname="GNOME_DB_STOCK_AGGREGATES" name="Aggregates" value="gnome-db-aggregates"/>
      <static-string cname="GNOME_DB_STOCK_COMMIT" name="Commit" value="gnome-db-commit"/>
      <static-string cname="GNOME_DB_STOCK_CONNECT" name="Connect" value="gnome-db-connect"/>
      <static-string cname="GNOME_DB_STOCK_DATABASE" name="Database" value="gnome-db-database"/>
      <static-string cname="GNOME_DB_STOCK_DESIGNER" name="Designer" value="gnome-db-designer"/>
      <static-string cname="GNOME_DB_STOCK_DISCONNECT" name="Disconnect" value="gnome-db-disconnect"/>
      <static-string cname="GNOME_DB_STOCK_NO_TRANSACTION" name="NoTransaction" value="gnome-db-no-transaction"/>
      <static-string cname="GNOME_DB_STOCK_PROCEDURES" name="Procedures" value="gnome-db-procedures"/>
      <static-string cname="GNOME_DB_STOCK_QUERY" name="Query" value="gnome-db-query"/>
      <static-string cname="GNOME_DB_STOCK_ROLLBACK" name="Rollback" value="gnome-db-rollback"/>
      <static-string cname="GNOME_DB_STOCK_SEQUENCES" name="Sequences" value="gnome-db-sequences"/>
      <static-string cname="GNOME_DB_STOCK_SQL" name="Sql" value="gnome-db-sql"/>
      <static-string cname="GNOME_DB_STOCK_TABLES" name="Tables" value="gnome-db-tables"/>
      <static-string cname="GNOME_DB_STOCK_TYPES" name="Types" value="gnome-db-types"/>
      <static-string cname="GNOME_DB_STOCK_WITHIN_TRANSACTION" name="WithinTransaction" value="gnome-db-within-transaction"/>
    </object>
  </namespace>
</api>
