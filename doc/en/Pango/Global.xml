<Type Name="Global" FullName="Pango.Global">
  <TypeSignature Language="C#" Value="public class Global" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>pango-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Global API elements for <see cref="N:Pango" />. Most of these are utility functions.</summary>
    <remarks />
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName="SplitFileList">
      <MemberSignature Language="C#" Value="public static string SplitFileList (string str);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Splits a list of filename strings and normalizes their paths.</summary>
        <param name="str">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:System.String" /></returns>
        <remarks>In the underlying C implementation, the string returned is intended as an argument to g_strfreev.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimString">
      <MemberSignature Language="C#" Value="public static string TrimString (string str);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Trims leading and trailing whitespace from a string.</summary>
        <param name="str">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:System.String" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetLogAttrs">
      <MemberSignature Language="C#" Value="public static void GetLogAttrs (string text, int level, Pango.Language language, Pango.LogAttr log_attrs, int attrs_len);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="level" Type="System.Int32" />
        <Parameter Name="language" Type="Pango.Language" />
        <Parameter Name="log_attrs" Type="Pango.LogAttr" />
        <Parameter Name="attrs_len" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Computes a <see cref="T:Pango.LogAttr" /> for each character in <paramref name="text" />.</summary>
        <param name="text"> text to process</param>
        <param name="level"> embedding level, or -1 if unknown</param>
        <param name="language"> language tag</param>
        <param name="log_attrs"> array with one PangoLogAttr per character in text, plus one extra, to be filled in</param>
        <param name="attrs_len">a <see cref="T:System.Int32" /></param>
        <remarks>The <paramref name="log_attrs" /> array must have one <see cref="T:Pango.LogAttr" /> for each position in text; if text contains N characters, it has N+1 positions, including the last position at the end of the text. text should be an entire paragraph; logical attributes cannot be computed without context (for example you need to see spaces on either side of a word to know the word is a word).</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Global ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Default constructor</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ParseWeight">
      <MemberSignature Language="C#" Value="public static bool ParseWeight (string str, out Pango.Weight weight, bool warn);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="weight" Type="Pango.Weight&amp;" RefType="out" />
        <Parameter Name="warn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Parses a string into a <see cref="T:Pango.Weight&amp;" /> object.</summary>
        <param name="str">a <see cref="T:System.String" /> to parse</param>
        <param name="weight">a <see cref="T:Pango.Weight&amp;" /> object to set up with the weight parsed out of the string</param>
        <param name="warn">a <see cref="T:System.Boolean" /> for whether to warn on bad input.</param>
        <returns>a <see cref="T:System.Boolean" /> for whether the string was successfully parsed.</returns>
        <remarks>The allowed values are "heavy", "ultrabold", "bold", "normal", "light", "ultralight" and integers. Case variations are ignored.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseStretch">
      <MemberSignature Language="C#" Value="public static bool ParseStretch (string str, out Pango.Stretch stretch, bool warn);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="stretch" Type="Pango.Stretch&amp;" RefType="out" />
        <Parameter Name="warn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Parses a string into a <see cref="T:Pango.Stretch&amp;" /> object.</summary>
        <param name="str">a <see cref="T:System.String" /> to parse</param>
        <param name="stretch">a <see cref="T:Pango.Stretch&amp;" /> to set up with the stretch value parsed out of the string</param>
        <param name="warn">a <see cref="T:System.Boolean" /> for whether to warn on bad input.</param>
        <returns>a <see cref="T:System.Boolean" /> for whether the string was successfully parsed.</returns>
        <remarks>The allowed values are "ultra_condensed", "extra_condensed", "condensed", "semi_condensed", "normal", 
	  "semi_expanded", "expanded", "extra_expanded" and "ultra_expanded". Case variations are ignored and the '_' 
	  characters may be omitted.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseVariant">
      <MemberSignature Language="C#" Value="public static bool ParseVariant (string str, out Pango.Variant variant, bool warn);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="variant" Type="Pango.Variant&amp;" RefType="out" />
        <Parameter Name="warn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Parses a string into a <see cref="T:Pango.Variant&amp;" /> object.</summary>
        <param name="str">a <see cref="T:System.String" /> to parse</param>
        <param name="variant">a <see cref="T:Pango.Variant&amp;" />to set up with the variant value parsed out of the string</param>
        <param name="warn">a <see cref="T:System.Boolean" /> for whether to warn on bad input.</param>
        <returns>a <see cref="T:System.Boolean" /> for whether the string was successfully parsed.</returns>
        <remarks>The allowed values are "normal" and "smallcaps" or "small_caps", case variations being ignored.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseStyle">
      <MemberSignature Language="C#" Value="public static bool ParseStyle (string str, out Pango.Style style, bool warn);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="style" Type="Pango.Style&amp;" RefType="out" />
        <Parameter Name="warn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Parses a string into a <see cref="T:Pango.Style&amp;" /> object.</summary>
        <param name="str">a <see cref="T:System.String" /> to parse</param>
        <param name="style">a <see cref="T:Pango.Style&amp;" /> to set up with the style parsed out of the string.</param>
        <param name="warn">a <see cref="T:System.Boolean" /> for whether to warn on bad input.</param>
        <returns>a <see cref="T:System.Boolean" /> for whether the string was successfully parsed.</returns>
        <remarks>The allowed values are "normal", "italic" and "oblique", case variations being ignored.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindParagraphBoundary">
      <MemberSignature Language="C#" Value="public static void FindParagraphBoundary (string text, out int paragraph_delimiter_index, out int next_paragraph_start);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="paragraph_delimiter_index" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="next_paragraph_start" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>Locates a paragraph boundary in <paramref name="text" />.</summary>
        <param name="text"> UTF-8 text</param>
        <param name="paragraph_delimiter_index"> return location for index of delimiter</param>
        <param name="next_paragraph_start"> return location for start of next paragraph</param>
        <remarks>
          <para>
A boundary is caused by delimiter characters, such as a newline, carriage return, carriage return-newline pair, or Unicode paragraph separator character. The index of the run of delimiters is returned in <paramref name="paragraph_delimiter_index" />. The index of the start of the paragraph (index after all delimiters) is stored in <paramref name="next_paragraph_start" />.
</para>
If no delimiters are found, both <paramref name="paragraph_delimiter_index" /> and <paramref name="next_paragraph_start" /> are filled with the length of text (an index one off the end).</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScanInt">
      <MemberSignature Language="C#" Value="public static bool ScanInt (string pos, out int out_param);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.String" />
        <Parameter Name="out_param" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>Scans a string looking for an integer. An integer consists of up to 31 decimal digits.</summary>
        <param name="pos">a <see cref="T:System.String" />, a string to scan.</param>
        <param name="out_param">a <see cref="T:System.Int32&amp;" />, an integer to put the result into.</param>
        <returns>a <see cref="T:System.Boolean" />, false if a parse error occurred.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipSpace">
      <MemberSignature Language="C#" Value="public static bool SkipSpace (ref string pos);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.String&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <summary>Skips 0 or more characters of whitespace</summary>
        <param name="pos">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:System.Boolean" />, which is true if there are non-whitespace characters before the end of the string.</returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScanInt">
      <MemberSignature Language="C#" Value="public static bool ScanInt (ref string pos, out int out_param);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.String&amp;" RefType="ref" />
        <Parameter Name="out_param" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>Scans a string looking for an integer. An integer consists of up to 31 decimal digits.</summary>
        <param name="pos">a <see cref="T:System.String" /></param>
        <param name="out_param">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseMarkup">
      <MemberSignature Language="C#" Value="public static bool ParseMarkup (string markup, char accel_marker, out Pango.AttrList attrs, out string text, out char accel_char);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="markup" Type="System.String" />
        <Parameter Name="accel_marker" Type="System.Char" />
        <Parameter Name="attrs" Type="Pango.AttrList&amp;" RefType="out" />
        <Parameter Name="text" Type="System.String&amp;" RefType="out" />
        <Parameter Name="accel_char" Type="System.Char&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>Parses a markup text string into text and a list of attributes.</summary>
        <param name="markup">a <see cref="T:System.String" /></param>
        <param name="accel_marker">a <see cref="T:System.Char" /></param>
        <param name="attrs">a <see cref="T:Pango.AttrList" /></param>
        <param name="text">a <see cref="T:System.String" /></param>
        <param name="accel_char">a <see cref="T:System.Char" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindBaseDir">
      <MemberSignature Language="C#" Value="public static Pango.Direction FindBaseDir (string text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Direction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="text">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:Pango.Direction" /></returns>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="ItemizeWithBaseDir">
      <MemberSignature Language="C#" Value="public static GLib.List ItemizeWithBaseDir (Pango.Context context, Pango.Direction base_dir, string text, int start_index, int length, Pango.AttrList attrs, Pango.AttrIterator cached_iter);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>GLib.List</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Pango.Context" />
        <Parameter Name="base_dir" Type="Pango.Direction" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start_index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="attrs" Type="Pango.AttrList" />
        <Parameter Name="cached_iter" Type="Pango.AttrIterator" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="context">a <see cref="T:Pango.Context" /></param>
        <param name="base_dir">a <see cref="T:System.Int32" /></param>
        <param name="text">a <see cref="T:System.String" /></param>
        <param name="start_index">a <see cref="T:System.Int32" /></param>
        <param name="length">a <see cref="T:System.Int32" /></param>
        <param name="attrs">a <see cref="T:Pango.AttrList" /></param>
        <param name="cached_iter">a <see cref="T:Pango.AttrIterator" /></param>
        <returns>a <see cref="T:GLib.List" /></returns>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="ScriptGetSampleLanguage">
      <MemberSignature Language="C#" Value="public static Pango.Language ScriptGetSampleLanguage (Pango.Script script);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Language</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="script" Type="Pango.Script" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="script">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:Pango.Language" /></returns>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="UnicharDirection">
      <MemberSignature Language="C#" Value="public static Pango.Direction UnicharDirection (char ch);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Direction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <summary>Determines the direction of a character</summary>
        <param name="ch">a <see cref="T:System.Char" /></param>
        <returns>the direction of the character according to the Unicode bidi algorithm</returns>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="ScriptForUnichar">
      <MemberSignature Language="C#" Value="public static Pango.Script ScriptForUnichar (char ch);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Script</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <summary>Determines the script for a character</summary>
        <param name="ch">a <see cref="T:System.Char" /></param>
        <returns>the script for the character according to Unicode Technical Report 24</returns>
        <remarks>No check is made that <paramref name="ch" /> is valid. If you pass in an invalid character, you will get back an invalid result.</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="IsZeroWidth">
      <MemberSignature Language="C#" Value="public static bool IsZeroWidth (char ch);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">A character to measure.</param>
        <summary>Measures a char to determine if it is zero width.</summary>
        <returns>
          <see langword="true" /> if <paramref name="ch" /> is zero width.</returns>
        <remarks>Zero width characters are not normally rendered on-screen.</remarks>
        <since version="Gtk# 2.10" />
      </Docs>
    </Member>
    <Member MemberName="ExtentsToPixels">
      <MemberSignature Language="C#" Value="public static void ExtentsToPixels (Pango.Rectangle ink_rect, Pango.Rectangle logical_rect);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ink_rect" Type="Pango.Rectangle" />
        <Parameter Name="logical_rect" Type="Pango.Rectangle" />
      </Parameters>
      <Docs>
        <param name="ink_rect">To be added.</param>
        <param name="logical_rect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="GravityGetForMatrix">
      <MemberSignature Language="C#" Value="public static Pango.Gravity GravityGetForMatrix (Pango.Matrix matrix);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Gravity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="Pango.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="GravityGetForScript">
      <MemberSignature Language="C#" Value="public static Pango.Gravity GravityGetForScript (Pango.Script script, Pango.Gravity base_gravity, Pango.GravityHint hint);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Gravity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="script" Type="Pango.Script" />
        <Parameter Name="base_gravity" Type="Pango.Gravity" />
        <Parameter Name="hint" Type="Pango.GravityHint" />
      </Parameters>
      <Docs>
        <param name="script">To be added.</param>
        <param name="base_gravity">To be added.</param>
        <param name="hint">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="GravityToRotation">
      <MemberSignature Language="C#" Value="public static double GravityToRotation (Pango.Gravity gravity);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gravity" Type="Pango.Gravity" />
      </Parameters>
      <Docs>
        <param name="gravity">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="ParseEnum">
      <MemberSignature Language="C#" Value="public static bool ParseEnum (GLib.GType type, string str, out int value, bool warn, string possible_values);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="GLib.GType" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="value" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="warn" Type="System.Boolean" />
        <Parameter Name="possible_values" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="str">To be added.</param>
        <param name="value">To be added.</param>
        <param name="warn">To be added.</param>
        <param name="possible_values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="QuantizeLineGeometry">
      <MemberSignature Language="C#" Value="public static void QuantizeLineGeometry (out int thickness, out int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thickness" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="position" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="thickness">To be added.</param>
        <param name="position">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="VersionCheck">
      <MemberSignature Language="C#" Value="public static string VersionCheck (int required_major, int required_minor, int required_micro);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="required_major" Type="System.Int32" />
        <Parameter Name="required_minor" Type="System.Int32" />
        <Parameter Name="required_micro" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="required_major">To be added.</param>
        <param name="required_minor">To be added.</param>
        <param name="required_micro">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
    <Member MemberName="VersionString">
      <MemberSignature Language="C#" Value="public static string VersionString ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version="Gtk# 2.12" />
      </Docs>
    </Member>
  </Members>
</Type>
