<Type Name="TextTag" FullName="Gtk.TextTag">
  <TypeSignature Language="C#" Value="public class TextTag : GLib.Object, IWrapper, IDisposable" Maintainer="duncan" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>
      A tag that can be applied to text in a <see cref="T:Gtk.TextBuffer" /></summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>GLib.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public bool ProcessEvent (GLib.Object event_object, Gdk.Event evnt, Gtk.TextIter iter);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event_object" Type="GLib.Object" />
        <Parameter Name="evnt" Type="Gdk.Event" />
        <Parameter Name="iter" Type="Gtk.TextIter" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="event_object">To be added: an object of type 'GLib.Object'</param>
        <param name="evnt">To be added: an object of type 'Gdk.Event'</param>
        <param name="iter">To be added: an object of type 'Gtk.TextIter'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected override void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextTag (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of TextTag, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextTag (string name);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Creates a  new <see cref="T:Gtk.TextTag" /></summary>
        <param name="name">
          the name of the tag, or <see langword="null" /> if it's an
          anonymous tag
        </param>
        <returns>the newly created TextTag</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextTag ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gtk.TextTag'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The tag's priority</summary>
        <param name="value">the new priority</param>
        <returns>The priority of the current tag</returns>
        <remarks>
          <para>
            Sets the priority of a GtkTextTag. Valid priorities are
            start at 0 and go to one less than
            <see cref="P:Gtk.TextTagTable.Size" />.
          </para>
          <para>
            Each tag in a table has a unique priority; setting the
            priority of one tag shifts the priorities of all the other
            tags in the table to maintain a unique priority for each
            tag. Higher priority tags win if two tags both set the
            same text attribute. When adding a tag to a tag table, it
            will be assigned the highest priority in the table by
            default; so normally the precedence of a set of tags is
            the order in which they were added to the table, or
            created with <see cref="M:Gtk.TextBuffer.CreateTag()" />),
            which adds the tag to the buffer's table automatically.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Strikethrough">
      <MemberSignature Language="C#" Value="public bool Strikethrough { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Whether to strike through the text</summary>
        <param name="value">
          <see langword="true" /> to strike through the text
        </param>
        <returns>Whether to strike through the text</returns>&gt;
        <remarks /></Docs>
    </Member>
    <Member MemberName="Invisible">
      <MemberSignature Language="C#" Value="public bool Invisible { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Whether this text is hidden.</summary>
        <param name="value">Whether this text is hidden.</param>
        <returns>Whether or not this text is hidden</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ForegroundStipple">
      <MemberSignature Language="C#" Value="public Gdk.Pixmap ForegroundStipple { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Pixmap</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Bitmap to use as a mask when drawing the text foreground.</summary>
        <param name="value">a bitmap</param>
        <returns>a bitmap</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Rise">
      <MemberSignature Language="C#" Value="public int Rise { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Offset of text above the baseline</summary>
        <param name="value">Offset of text above the baseline in pixels</param>
        <returns>Offset of the text above the baseline</returns>
        <remarks>Offset of text above the baseline (below the baseline if rise is negative) in pixels.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightMargin">
      <MemberSignature Language="C#" Value="public int RightMargin { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Width of the right margin</summary>
        <param name="value">Width of the right margin in pixels.</param>
        <returns>Width of the right margin</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Family">
      <MemberSignature Language="C#" Value="public string Family { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Name of the font family</summary>
        <param name="value">Name of the font family</param>
        <returns>The name of the font family</returns>
        <remarks>
          <para>
            Name of the font family, e.g. Sans, Helvetica, Times, Monospace.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public string Font { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Font description</summary>
        <param name="value">the font description as a string</param>
        <returns>the font description as a string</returns>
        <remarks>Font description as a string, e.g. "Sans Italic 12".</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stretch">
      <MemberSignature Language="C#" Value="public Pango.Stretch Stretch { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Stretch</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Font stretch</summary>
        <param name="value">a <see cref="T:Pango.FontStretch" /></param>
        <returns>font stretch</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Editable">
      <MemberSignature Language="C#" Value="public bool Editable { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Whether the text can be modified by the user</summary>
        <param name="value">
          <see langword="true" /> if the thext is editable</param>
        <returns>whether the text can be modified by the user</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Justification">
      <MemberSignature Language="C#" Value="public Gtk.Justification Justification { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Justification</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Text justification</summary>
        <param name="value">a <see cref="T:Gtk.Justification" /></param>
        <returns>the justification of the current text</returns>
        <remarks>
          <para>
            Left, right, or center justification.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsInsideWrap">
      <MemberSignature Language="C#" Value="public int PixelsInsideWrap { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Pixels of blank space between wrapped lines in a paragraph</summary>
        <param name="value">pixels of blank space</param>
        <returns>Pixels of blank space between wrapped lines in a paragraph</returns>&gt;
        <remarks>To be added</remarks></Docs>
    </Member>
    <Member MemberName="PixelsBelowLines">
      <MemberSignature Language="C#" Value="public int PixelsBelowLines { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Pixels of blank space below paragraphs.</summary>
        <param name="value">pixels of blank space</param>
        <returns>Pixels of blank space below paragraphs.</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundStipple">
      <MemberSignature Language="C#" Value="public Gdk.Pixmap BackgroundStipple { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Pixmap</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Bitmap to use as a mask when drawing the text background.</summary>
        <param name="value">
          The bitmap of type <see cref="T:Gdk.Pixmap" /></param>
        <returns>The background bitmap</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="LeftMargin">
      <MemberSignature Language="C#" Value="public int LeftMargin { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Width of the left margin in pixels.</summary>
        <param name="value">The width of the left margin in pixels</param>
        <returns>The width of the margin</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SizePoints">
      <MemberSignature Language="C#" Value="public double SizePoints { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Font size in points.</summary>
        <param name="value">Font size in points.</param>
        <returns>The font size</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public Gtk.TextDirection Direction { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.TextDirection</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Text direction, e.g. right-to-left or left-to-right.</summary>
        <param name="value">The direction of the text</param>
        <returns>The text direction</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PixelsAboveLines">
      <MemberSignature Language="C#" Value="public int PixelsAboveLines { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Pixels of blank space above paragraphs.</summary>
        <param name="value">
          The number of pixels of blank space above the paragraphs.
        </param>
        <returns>The blank space above the paragraphs in pixels</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="WrapMode">
      <MemberSignature Language="C#" Value="public Gtk.WrapMode WrapMode { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.WrapMode</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Whether to wrap lines never, at word boundaries, or at character boundaries.</summary>
        <param name="value">The <see cref="T:Gtk.WrapMode" /> of this tag</param>
        <returns>a <see cref="T:Gtk.WrapMode" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of this tag</summary>
        <returns>
          The name of this name, or <see langword="null" /> if it's an
          anonymous tag
        </returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Amount to indent the paragraph, in pixels</summary>
        <param name="value">The amount to indent in pixels</param>
        <returns>The indent of the paragraph</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Foreground">
      <MemberSignature Language="C#" Value="public string Foreground { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Foreground color</summary>
        <param name="value">the foreground color as a string</param>
        <returns>the foreground color</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="BackgroundGdk">
      <MemberSignature Language="C#" Value="public Gdk.Color BackgroundGdk { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Color</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>
          Background color as a (possibly unallocated) <see cref="T:Gdk.Color" />.
        </summary>
        <param name="value">
          The background color as a <see cref="T:Gdk.Color" />.
        </param>
        <returns>The background color</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ForegroundGdk">
      <MemberSignature Language="C#" Value="public Gdk.Color ForegroundGdk { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Color</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>
          Foreground  color as a (possibly unallocated) <see cref="T:Gdk.Color" />.
        </summary>
        <param name="value">
          The foreground color as a <see cref="T:Gdk.Color" />.
        </param>
        <returns>The foreground color</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Tabs">
      <MemberSignature Language="C#" Value="public Pango.TabArray Tabs { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Pango.TabArray</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Custom tabs for this text.</summary>
        <param name="value">a <see cref="T:Pango.TabArray" /></param>
        <returns>the custom tabs for this text</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Underline">
      <MemberSignature Language="C#" Value="public Pango.Underline Underline { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Underline</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Style of underline for this text.</summary>
        <param name="value">the underline style</param>
        <returns>The underline style for this text</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public double Scale { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Font size as a scale factor relative to the default font size</summary>
        <param name="value">
          Font size as a scale factor relative to the default font size.
        </param>
        <returns>The font size as a scale factor</returns>
        <remarks>
          <para>
            This properly adapts to theme changes etc. so is
            recommended. Pango predefines some scales such as <see cref="T:Pango.Scale.X_Large" />.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The language of the text</summary>
        <param name="value">The ISO code of the language</param>
        <returns>The ISO code of the language of this text</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Font size</summary>
        <param name="value">Font size</param>
        <returns>The font size in Pango units</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public Pango.Style Style { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Style</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Font style</summary>
        <param name="value">
          The font style in as a <see cref="T:Pango.Style" /></param>
        <returns>the font style of this text</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Variant">
      <MemberSignature Language="C#" Value="public Pango.Variant Variant { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Variant</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Font variant</summary>
        <param name="value">
          The font variant as a <see cref="T:Pango.Variant" /></param>
        <returns>The font variant of this text</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public string Background { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Background color</summary>
        <param name="value">The name of the background color</param>
        <returns />
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FontDesc">
      <MemberSignature Language="C#" Value="public Pango.FontDescription FontDesc { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Pango.FontDescription</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'Pango.FontDescription'</param>
        <returns>To be added: an object of type 'Pango.FontDescription'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundFullHeight">
      <MemberSignature Language="C#" Value="public bool BackgroundFullHeight { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Whether the background color fills the entire line height or only the height of the tagged characters.</summary>
        <param name="value">
          <see langword="true" /> if the background
          color fills the entire line height
        </param>
        <returns>Whether the background color fills the entire line height or only the height of the tagged characters.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Weight">
      <MemberSignature Language="C#" Value="public Pango.Weight Weight { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Weight</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Pango.Weight" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEvent">
      <MemberSignature Language="C#" Value="public event Gtk.TextEventHandler TextEvent;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.TextEventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:GLib.GType" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideTextEvent">
      <MemberSignature Language="C#" Value="protected static void OverrideTextEvent (GLib.GType gtype);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextEvent">
      <MemberSignature Language="C#" Value="protected virtual bool OnTextEvent (GLib.Object event_object, Gdk.Event evnt, Gtk.TextIter iter);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="event_object" Type="GLib.Object" />
        <Parameter Name="evnt" Type="Gdk.Event" />
        <Parameter Name="iter" Type="Gtk.TextIter" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="event_object">a <see cref="T:GLib.Object" /></param>
        <param name="evnt">a <see cref="T:Gdk.Event" /></param>
        <param name="iter">a <see cref="T:Gtk.TextIter" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextTag (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <returns>a <see cref="T:Gtk.TextTag" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>