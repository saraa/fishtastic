<Type Name="ItemFactoryEntry" FullName="Gtk.ItemFactoryEntry">
  <TypeSignature Language="C#" Maintainer="auto" Value="public struct ItemFactoryEntry" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Class intended for use with <see cref="T:Gtk.ItemFactory" />.</summary>
    <remarks>FIXME: see bugzilla.ximian.com #70887, which directly concerns this API.</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static Gtk.ItemFactoryEntry Zero;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ItemFactoryEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Empty entry.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static Gtk.ItemFactoryEntry New (IntPtr raw);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ItemFactoryEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>For internal use only. Do not use.</summary>
        <param name="raw">a <see cref="T:IntPtr" />, pointer to the underlying C data.</param>
        <returns>a <see cref="T:Gtk.ItemFactoryEntry" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The path of the item.</summary>
        <remarks>For example, "/File/_Open", where the "O" should be a mnemonic underline.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accelerator">
      <MemberSignature Language="C#" Value="public string Accelerator;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The accelerator key for this item.</summary>
        <remarks>For example, "&lt;control&gt;O".</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackAction">
      <MemberSignature Language="C#" Value="public uint CallbackAction;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>A callback function to run when this item is activated.</summary>
        <remarks>NOTE: The API doesn't support the actual code here.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType;" />
      <MemberType>Field</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Type of item to add.</summary>
        <remarks>Possible values:
	  "&lt;Title&gt;" creates a title item,
	  "&lt;Item&gt;" creates a simple item,
	  "&lt;ImageItem&gt;" creates an item holding an image,
	  "&lt;StockItem&gt;" creates an item holding a stock image,
	  "&lt;CheckItem&gt;" creates a check item,
	  "&lt;ToggleItem&gt;" creates a toggle item,
	  "&lt;RadioItem&gt;" creates a radio item,
	  &lt;path&gt; for the path of a radio item to link against,
	  "&lt;Separator&gt;" creates a separator,
	  "&lt;Tearoff&gt;" creates a tearoff separator,
	  "&lt;Branch&gt;" creates an item to hold sub items,
	  "&lt;LastBranch&gt;" creates a right justified item to hold sub items.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callback">
      <MemberSignature Language="C#" Value="public Gtk.ItemFactoryCallback Callback { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ItemFactoryCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
  </Attributes>
</Type>
