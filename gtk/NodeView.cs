// NodeView.cs - a TreeView implementation that exposes ITreeNodes
//
// Author: Duncan Mak (duncan@ximian.com)
//
// Copyright (c) 2004 Novell, Inc.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.

// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gtk {

	using System;
	using System.Collections;
	using System.Reflection;
	using System.Runtime.InteropServices;

	public class NodeView : TreeView {

		[DllImport("libgtk-win32-2.0-0.dll")]
		static extern IntPtr gtk_tree_view_new_with_model(IntPtr model);

		NodeStore store;

		public NodeView (NodeStore store) : base (IntPtr.Zero)
		{
			if (GetType() != typeof (NodeView)) {
				string[] names = { "model" };
				GLib.Value[] vals =  { new GLib.Value (store) };
				CreateNativeObject (names, vals);
				vals [0].Dispose ();
			} else {
				Raw = gtk_tree_view_new_with_model (store.Handle);
			}

			this.store = store;
		}

		public NodeStore NodeStore {
			get {
				return store;
			}
		}

		public NodeSelection NodeSelection { 
			get {
				return new NodeSelection (Selection);
			}
		}
	}
}
