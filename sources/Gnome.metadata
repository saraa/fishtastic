<?xml version="1.0"?>
<metadata>

<!-- renames -->
<rule>
  <class name="GnomeAppBar">
    <signal>ClearPrompt</signal>
  </class>
  <data>
    <attribute target="signal">
      <name>name</name>
      <value>PromptCleared</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeClient">
    <signal>Connect</signal>
  </class>
  <data>
    <attribute target="signal">
      <name>name</name>
      <value>Connected</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeClient">
    <signal>Disconnect</signal>
  </class>
  <data>
    <attribute target="signal">
      <name>name</name>
      <value>Disconnected</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeDruidPage">
    <signal>Back</signal>
  </class>
  <data>
    <attribute target="signal">
      <name>name</name>
      <value>BackClicked</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeDruidPage">
    <signal>Finish</signal>
  </class>
  <data>
    <attribute target="signal">
      <name>name</name>
      <value>FinishClicked</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeDruidPage">
    <signal>Cancel</signal>
  </class>
  <data>
    <attribute target="signal">
      <name>name</name>
      <value>CancelClicked</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeDruidPage">
    <signal>Next</signal>
  </class>
  <data>
    <attribute target="signal">
      <name>name</name>
      <value>NextClicked</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeDruidPage">
    <signal>Prepare</signal>
  </class>
  <data>
    <attribute target="signal">
      <name>name</name>
      <value>Prepared</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeIconList">
    <signal>FocusIcon</signal>
  </class>
  <data>
    <attribute target="signal">
      <name>name</name>
      <value>IconFocused</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeEntry">
    <method>GtkEntry</method>
  </class>
  <data>
    <attribute target="method">
      <name>name</name>
      <value>GetGtkEntry</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeEntry">
    <signal>Activate</signal>
  </class>
  <data>
    <attribute target="signal">
      <name>name</name>
      <value>Activated</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeGdk_"/>
  <data>
    <attribute target="class">
      <name>name</name>
      <value>GdkHelper</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeGtk_"/>
  <data>
    <attribute target="class">
      <name>name</name>
      <value>GtkHelper</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeIconList">
    <signal>SelectIcon</signal>
  </class>
  <data>
    <attribute target="signal">
      <name>name</name>
      <value>IconSelected</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeIconList">
    <signal>UnselectIcon</signal>
  </class>
  <data>
    <attribute target="signal">
      <name>name</name>
      <value>IconUnselected</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeFileEntry">
    <signal>Activate</signal>
  </class>
  <data>
    <attribute target="signal">
      <name>name</name>
      <value>Activated</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvasItem">
    <signal>Event</signal>
  </class>
  <data>
    <attribute target="signal">
      <name>name</name>
      <value>CanvasEvent</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvasPathDef">
    <method>Moveto</method>
  </class>
  <data>
    <attribute target="method">
      <name>name</name>
      <value>MoveTo</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomePrintPdf" />
  <data>
    <attribute target="class">
      <name>parent</name>
      <value>GObject</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomePrintTransport" />
  <data>
    <attribute target="class">
      <name>parent</name>
      <value>GObject</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomePrintUnit">
    <method>GetIdentity</method>
  </class>
  <data>
    <attribute target="param">
      <filter level="name">base</filter>
      <name>name</name>
      <value>Base</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvasPathDef">
    <method>Curveto</method>
  </class>
  <data>
    <attribute target="method">
      <name>name</name>
      <value>CurveTo</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvasPathDef">
    <method>Lineto</method>
  </class>
  <data>
    <attribute target="method">
      <name>name</name>
      <value>LineTo</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvasPathDef">
    <method>LinetoMoving</method>
  </class>
  <data>
    <attribute target="method">
      <name>name</name>
      <value>LineToMoving</value>
    </attribute>
  </data>
</rule>

<!-- hides -->
<rule>
  <class name="GnomeFileEntry">
    <method>GnomeEntry</method>
    <method>GtkEntry</method>
  </class>
  <class name="GnomeIconEntry">
    <method>PickDialog</method>
  </class>
  <class name="GnomeConfig_">
    <method>SetSetHandler</method>
    <method>SetSyncHandler</method>
  </class>
  <data>
    <attribute target="method">
      <name>hidden</name>
      <value>1</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvas">
    <method>W2cAffine</method>
  </class>
  <data>
    <attribute target="method">
      <name>hidden</name>
      <value>1</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvasItem">
    <method>AffineRelative</method>
    <method>AffineAbsolute</method>
    <method>I2wAffine</method>
    <method>I2cAffine</method>
    <method>SetValist</method>
    <method>Construct</method>
  </class>
  <data>
    <attribute target="method">
      <name>hidden</name>
      <value>1</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvasItem">
    <constructor>gnome_canvas_item_new</constructor>
  </class>
  <data>
    <attribute target="constructor">
      <name>hidden</name>
      <value>1</value>
    </attribute>
  </data>
</rule>

<!-- disable default constructor -->
<rule>
  <class name="GnomePrintJob"/>
  <data>
    <attribute target="class">
      <name>disabledefaultconstructor</name>
      <value>1</value>
    </attribute>
  </data>
</rule>

<!-- misc -->
<rule>
  <class name="GnomeAbout">
    <constructor>gnome_about_new</constructor>
  </class>
  <data>
    <attribute target="param">
      <filter level="type">const-gchar**</filter>
        <name>array</name>
     <value>1</value>
    </attribute>
 </data>
</rule>
<rule>
  <class name="GnomePrintDialog">
    <method>gnome_print_dialog_new</method>
  </class>
  <data>
    <attribute target="params">
      <filter level="name">flags</filter>
      <name>type</name>
      <value>GnomePrintDialogFlags</value>
    </attribute>
  </data>
</rule>

<!-- Use const-gchar* instead of const-guchar*, when the value is realy a string -->
<rule>
  <class name="GnomeFont">
    <method>Find</method>
    <method>FindClosest</method>
    <method>FindClosestFromFullName</method>
    <method>FindClosestFromWeightSlant</method>
    <method>FindFromFullName</method>
    <method>StyleList</method>
  </class>
  <class name="GnomeFontFace">
    <method>Find</method>
    <method>FindClosest</method>
    <method>FindClosestFromWeightSlant</method>
    <method>FindFromFamilyAndStyle</method>
  </class>
  <class name="GnomePrintConfig">
    <method>Get</method>
    <method>GetBoolean</method>
    <method>GetDouble</method>
    <method>GetInt</method>
    <method>GetLength</method>
    <method>Set</method>
    <method>SetBoolean</method>
    <method>SetDouble</method>
    <method>SetInt</method>
    <method>SetLength</method>
  </class>
  <class name="GnomePrintDialog">
    <method>Construct</method>
    <method>ConstructRangeAny</method>
    <method>ConstructRangePage</method>
    <method>gnome_print_dialog_new</method>
  </class>
  <class name="GnomePrintMeta">
    <method>RenderFile</method>
    <method>RenderFilePage</method>
  </class>
  <class name="GnomeGlyphList">
    <method>FromTextDumb</method>
    <method>FromTextSizedDumb</method>
    <method>TextDumb</method>
    <method>TextSizedDumb</method>
  </class>
  <class name="GnomePrintPaper">
    <method>GetByName</method>
  </class>
  <class name="GnomePrintUnit">
    <method>GetByAbbreviation</method>
    <method>GetByName</method>
  </class>
  <class name="GnomePrint_">
    <method>Beginpage</method>
    <method>DecodeAscii85</method>
    <method>DecodeHex</method>
    <method>EncodeAscii85</method>
    <method>EncodeBlank</method>
    <method>EncodeDeflate</method>
    <method>EncodeDrow</method>
    <method>EncodeHex</method>
    <method>EncodeRlc</method>
    <method>EncodeTiff</method>
    <method>Show</method>
    <method>ShowSized</method>
  </class>
  <class name="GnomeFontPreview">
    <method>SetPhrase</method>
  </class>
  <class name="GnomePrintJobPreview">
    <method>gnome_print_job_preview_new</method>
  </class>
  <class name="GPAOptionMenu">
    <method>gpa_option_menu_new</method>
  </class>
  <data>
    <attribute target="params">
      <filter level="name">name</filter>
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
    <attribute target="params">
      <filter level="name">family</filter>
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
    <attribute target="params">
      <filter level="name">string</filter>
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
    <attribute target="params">
      <filter level="name">style</filter>
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
    <attribute target="params">
      <filter level="name">key</filter>
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
    <attribute target="params">
      <filter level="name">value</filter>
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
    <attribute target="params">
      <filter level="name">filename</filter>
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
    <attribute target="params">
      <filter level="name">text</filter>
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
    <attribute target="params">
      <filter level="name">abbreviation</filter>
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
    <attribute target="params">
      <filter level="name">in</filter>
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
    <attribute target="params">
      <filter level="name">phrase</filter>
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
    <attribute target="params">
      <filter level="name">title</filter>
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
    <attribute target="params">
      <filter level="name">currentlabel</filter>
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
    <attribute target="params">
      <filter level="name">rangelabel</filter>
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeFont">
    <method>GetFamilyName</method>
    <method>GetName</method>
    <method>GetPsName</method>
    <method>GetSpeciesName</method>
  </class>
  <class name="GnomeFontFace">
    <method>GetFamilyName</method>
    <method>GetGlyphPsName</method>
    <method>GetName</method>
    <method>GetPsName</method>
    <method>GetSample</method>
    <method>GetSpeciesName</method>
  </class>
  <data>
    <attribute target="return">
      <name>type</name>
      <value>const-gchar*</value>
    </attribute>
  </data>
</rule>

<!-- Use gchar* instead of guchar*, when the value is realy a string -->
<rule>
  <class name="GnomePrintConfig">
    <method>Get</method>
  </class>
  <data>
    <attribute target="return">
      <name>type</name>
      <value>gchar*</value>
    </attribute>
  </data>
</rule>

<!-- null args -->
<rule>
  <class name="GnomeIconList">
    <constructor>gnome_icon_list_new</constructor>
  </class>
  <data>
    <attribute target="param">
      <filter level="type">GtkAdjustment*</filter>
      <name>null_ok</name>
      <value>1</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeIconList">
    <method>gnome_icon_list_set_hadjustment</method>
    <method>gnome_icon_list_set_vadjustment</method>
  </class>
  <data>
    <attribute target="param">
      <filter level="type">GtkAdjustment*</filter>
      <name>null_ok</name>
      <value>1</value>
    </attribute>
  </data>
</rule>

<!-- list types -->
<rule>
  <class name="GnomeCanvasPathDef">
    <method>Split</method>
  </class>
  <data>
    <attribute target="return">
      <name>element_type</name>
      <value>Gnome.CanvasPathDef</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeIconList">
    <method>GetSelection</method>
  </class>
  <data>
    <attribute target="return">
      <name>element_type</name>
      <value>int</value>
    </attribute>
  </data>
</rule>

<!-- ref parameters -->
<rule>
  <class name="GnomeCanvasItem">
    <method>W2i</method>
    <method>I2w</method>
  </class>
  <data>
    <attribute target="param">
      <filter level="type">double*</filter>
      <name>pass_as</name>
      <value>ref</value>
    </attribute>
  </data>
</rule>

<!-- out parameters -->
<rule>
  <class name="GnomeCanvas">
    <method>GetScrollRegion</method>
    <method>C2w</method>
  </class>
  <class name="GnomeCanvasItem">
    <method>GetBounds</method>
  </class>
  <data>
    <attribute target="param">
      <filter level="type">double*</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvas">
    <method>GetScrollOffsets</method>
    <method>W2c</method>
  </class>
  <data>
    <attribute target="param">
      <filter level="type">int*</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvas">
    <method>W2cD</method>
  </class>
  <data>
    <attribute target="param">
      <filter level="name">cx</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
    <attribute target="param">
      <filter level="name">cy</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvas">
    <method>WindowToWorld</method>
  </class>
  <data>
    <attribute target="param">
      <filter level="name">worldx</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
    <attribute target="param">
      <filter level="name">worldy</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvas">
    <method>WorldToWindow</method>
  </class>
  <data>
    <attribute target="param">
      <filter level="name">winx</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
    <attribute target="param">
      <filter level="name">winy</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvas">
    <method>GetColor</method>
  </class>
  <data>
    <attribute target="param">
      <filter level="type">GdkColor*</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvasRichText">
    <method>GetIterLocation</method>
  </class>
  <data>
    <attribute target="param">
      <filter level="name">location</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvasRichText">
    <method>GetIterAtLocation</method>
  </class>
  <data>
    <attribute target="param">
      <filter level="name">iter</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvas">
    <method>GetMiterPoints</method>
  </class>
  <data>
    <attribute target="param">
      <filter level="name">mx1</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
    <attribute target="param">
      <filter level="name">my1</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
    <attribute target="param">
      <filter level="name">mx2</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
    <attribute target="param">
      <filter level="name">my2</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvas">
    <method>GetButtPoints</method>
  </class>
  <data>
    <attribute target="param">
      <filter level="name">bx1</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
    <attribute target="param">
      <filter level="name">by1</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
    <attribute target="param">
      <filter level="name">bx2</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
    <attribute target="param">
      <filter level="name">by2</filter>
      <name>pass_as</name>
      <value>out</value>
    </attribute>
  </data>
</rule>

<!-- fix return values -->
<rule>
  <class name="GnomeCanvas">
    <method>GetMiterPoints</method>
    <method>GetColor</method>
  </class>
  <data>
    <attribute target="return">
      <name>type</name>
      <value>gboolean</value>
    </attribute>
  </data>
</rule>

<!-- property types -->
<rule>
  <class name="GnomeCanvasClipgroup">
    <property>Wind</property>
  </class>
  <data>
    <attribute target="property">
      <name>type</name>
      <value>ArtWindRule</value>
    </attribute>
  </data>
</rule>
<rule>
  <class name="GnomeCanvasShape">
    <property>Dash</property>
  </class>
  <data>
    <attribute target="property">
      <name>type</name>
      <value>ArtVpathDash</value>
    </attribute>
  </data>
</rule>
</metadata>
