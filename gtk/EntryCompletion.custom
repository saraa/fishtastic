//  Gtk.EntryCompletion.custom - Gtk EntryCompletion customizations
//
//  Authors:  Todd Berman  <tberman@off.net>
//  	      Mike Kestner  <mkestner@novell.com>
//
//  Copyright (c) 2004 Todd Berman
//  Copyright (c) 2005 Novell, Inc.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.


		public void SetAttributes (CellRenderer cell, params object[] attrs)
		{
			if (attrs.Length % 2 != 0)
				throw new ArgumentException ("attrs should contain pairs of attribute/col");

			ClearAttributes (cell);
			for (int i = 0; i < attrs.Length - 1; i += 2) {
				AddAttribute (cell, (string) attrs [i], (int) attrs [i + 1]);
			}
		}

		[DllImport("libgtk-win32-2.0-0.dll")]
		static extern void gtk_cell_layout_set_cell_data_func (IntPtr raw, IntPtr cell_renderer, GtkSharp.CellLayoutDataFuncNative func, IntPtr func_data, NativeDestroyNotify destroy);

		public void SetCellDataFunc (CellRenderer renderer, CellLayoutDataFunc func)
		{
			if (func == null) {
				gtk_cell_layout_set_cell_data_func (Handle, renderer.Handle, null, IntPtr.Zero, null);
				return;
			}

			GtkSharp.CellLayoutDataFuncWrapper func_wrapper = new GtkSharp.CellLayoutDataFuncWrapper (func);
			GCHandle gch = GCHandle.Alloc (func_wrapper);
			gtk_cell_layout_set_cell_data_func (Handle, renderer.Handle, func_wrapper.NativeDelegate, (IntPtr) gch, DestroyHelper.NotifyHandler);
		}

		[DllImport("libgtk-win32-2.0-0.dll")]
		static extern void gtk_entry_completion_set_match_func (IntPtr raw, GtkSharp.EntryCompletionMatchFuncNative func, IntPtr func_data, NativeDestroyNotify func_notify);

		public void SetMatchFunc (EntryCompletionMatchFunc func)
		{
			if (func == null) {
				gtk_entry_completion_set_match_func (Handle, null, IntPtr.Zero, null);
				return;
			}

			GtkSharp.EntryCompletionMatchFuncWrapper func_wrapper = new GtkSharp.EntryCompletionMatchFuncWrapper (func);
			GCHandle gch = GCHandle.Alloc (func_wrapper);
			gtk_entry_completion_set_match_func (Handle, func_wrapper.NativeDelegate, (IntPtr) gch, DestroyHelper.NotifyHandler);
		}

