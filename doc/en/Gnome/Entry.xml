<Type Name="Entry" FullName="Gnome.Entry">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class Entry : Gtk.Combo, Gtk.Editable" />
  <AssemblyInfo>
    <AssemblyName>gnome-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.20.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>A single-line text entry widget.</summary>
    <remarks>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Combo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Gtk.Editable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
  </Attributes>
  <Members>
    <Member MemberName="SelectRegion">
      <MemberSignature Language="C#" Value="public void SelectRegion (int start, int end);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Select the text between <paramref name="start_pos" /> and <paramref name="end_pos" />.</summary>
        <param name="start">an object of type <see cref="T:System.Int32" /></param>
        <param name="end">an object of type <see cref="T:System.Int32" /></param>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public string GetChars (int start_pos, int end_pos);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start_pos" Type="System.Int32" />
        <Parameter Name="end_pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Gets the text between <paramref name="start_pos" /> and <paramref name="end_pos" />.</summary>
        <param name="start_pos">an object of type <see cref="T:System.Int32" /></param>
        <param name="end_pos">an object of type <see cref="T:System.Int32" /></param>
        <returns>an object of type <see cref="T:System.String" /></returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteText">
      <MemberSignature Language="C#" Value="public void DeleteText (int start_pos, int end_pos);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start_pos" Type="System.Int32" />
        <Parameter Name="end_pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Delete the text between <paramref name="start_pos" /> and <paramref name="end_pos" />.</summary>
        <param name="start_pos">an object of type <see cref="T:System.Int32" /></param>
        <param name="end_pos">an object of type <see cref="T:System.Int32" /></param>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyClipboard">
      <MemberSignature Language="C#" Value="public void CopyClipboard ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteSelection">
      <MemberSignature Language="C#" Value="public void DeleteSelection ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Delete the text contained in the selection.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectionBounds">
      <MemberSignature Language="C#" Value="public bool GetSelectionBounds (out int start, out int end);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="end" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <summary>Determines the position of the beggining and end of a selection.</summary>
        <param name="start">an object of type <see cref="T:System.Int32" /></param>
        <param name="end">an object of type <see cref="T:System.Int32" /></param>
        <returns>an object of type <see cref="T:System.Boolean" /></returns>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CutClipboard">
      <MemberSignature Language="C#" Value="public void CutClipboard ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PasteClipboard">
      <MemberSignature Language="C#" Value="public void PasteClipboard ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependHistory">
      <MemberSignature Language="C#" Value="public void PrependHistory (bool save, string text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="save" Type="System.Boolean" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Adds a history item of the given text to the head of the history list.</summary>
        <param name="save">an object of type <see cref="T:System.Boolean" /></param>
        <param name="text">an object of type <see cref="T:System.String" /></param>
        <remarks>If save is <see langword="true" />, the history item will be saved in the config file (assuming that <see cref="P:Gnome.Entry.HistoryId" /> is not <see langword="null" />). Duplicates are automatically removed from the history list. The history list is automatically saved if needed.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearHistory">
      <MemberSignature Language="C#" Value="public void ClearHistory ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the history.</summary>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendHistory">
      <MemberSignature Language="C#" Value="public void AppendHistory (bool save, string text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="save" Type="System.Boolean" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Adds a history item of the given text to the tail of the history list.</summary>
        <param name="save">an object of type <see cref="T:System.Boolean" /></param>
        <param name="text">an object of type <see cref="T:System.String" /></param>
        <remarks>If save is <see langword="true" />, the history item will be saved in the config file (assuming that <see cref="P:Gnome.Entry.HistoryId" /> is not <see langword="null" />). Duplicates are automatically removed from the history list. The history list is automatically saved if needed.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Entry (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Entry (string history_id);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="history_id" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Creates a new <see cref="T:Gnome.Entry" /> instance.</summary>
        <param name="history_id">an object of type <see cref="T:System.String" /></param>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditable">
      <MemberSignature Language="C#" Value="public bool IsEditable { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Whether the <see cref="T:Gnome.Entry" /> is editable by the user.</summary>
        <value>an object of type <see cref="T:System.Boolean" /></value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public int Position { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The position of the cursor in the entry.</summary>
        <value>an object of type <see cref="T:System.Int32" /></value>
        <remarks>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxSaved">
      <MemberSignature Language="C#" Value="public uint MaxSaved { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Internal limit on number of history items saved to the config file.</summary>
        <value>an object of type <see cref="T:System.UInt32" /></value>
        <remarks>Zero is an acceptable value, but the same thing is accomplished by setting the <see cref="P:Gnome.Entry.HistoryId" /> to <see langword="null" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GtkEntry">
      <MemberSignature Language="C#" Value="public Gtk.Entry GtkEntry { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Entry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The internal <see cref="T:Gtk.Entry" /> of the <see cref="T:Gnome.Entry" />.</summary>
        <value>an object of type <see cref="T:Gtk.Entry" /></value>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("gtk_entry")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="HistoryId">
      <MemberSignature Language="C#" Value="public string HistoryId { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>The history id of the <see cref="T:Gnome.Entry" /> widget.</summary>
        <value>an object of type <see cref="T:System.String" /></value>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("history_id")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler Changed;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when the text is changed.</summary>
        <remarks>
        </remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("changed")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when the <see cref="T:Gnome.Entry" /> is activated.</summary>
        <remarks>This usually occurs when the user presses the "enter" or "return" key.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("activate")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="InsertText">
      <MemberSignature Language="C#" Value="public void InsertText (string new_text, ref int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="new_text" Type="System.String" />
        <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="new_text">an object of type <see cref="T:System.String" /></param>
        <param name="position">an object of type <see cref="T:System.Int32" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gnome.Entry" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default handler for the <see cref="M:Gnome.Entry.Activated" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gnome.Entry.Activated" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default handler for the <see cref="M:Gnome.Entry.Changed" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gnome.Entry.Changed" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnTextDeleted (int start_pos, int end_pos);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start_pos" Type="System.Int32" />
        <Parameter Name="end_pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Default handler for the <see cref="M:Gnome.Entry.TextDeleted" /> event.</summary>
        <param name="start_pos">a <see cref="T:System.Int32" /></param>
        <param name="end_pos">a <see cref="T:System.Int32" /></param>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gnome.Entry.TextDeleted" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnTextInserted (string text, ref int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="position" Type="System.Int32&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <summary>Default handler for the <see cref="M:Gnome.Entry.TextInserted" /> event.</summary>
        <param name="text">a <see cref="T:System.String" /></param>
        <param name="position">a <see cref="T:System.Int32&amp;" /></param>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gnome.Entry.TextInserted" /> event.</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Entry (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="TextDeleted">
      <MemberSignature Language="C#" Value="public event Gtk.TextDeletedHandler TextDeleted;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.TextDeletedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when text is deleted from the entry.</summary>
        <remarks />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("delete_text")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="TextInserted">
      <MemberSignature Language="C#" Value="public event Gtk.TextInsertedHandler TextInserted;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.TextInsertedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when text is inserted into the entry.</summary>
        <remarks />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("insert_text")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
  </Members>
</Type>
