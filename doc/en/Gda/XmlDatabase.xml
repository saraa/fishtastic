<Type Name="XmlDatabase" FullName="Gda.XmlDatabase">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class XmlDatabase : GLib.Object" />
  <AssemblyInfo>
    <AssemblyName>gda-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>
      <para>
XML database representation (used for import/export and in the default provider).
</para>
    </summary>
    <remarks>
      <para>
 The Gda.XmlDatabase class allows programs to manage databases in XML format (the format used by libgda for importing/exporting databases). It contains functions to easily manage those XML files.
</para>
      <para>
With this set of functions, applications can bypass the normal libgda operation mode (via Gda.Client to access data sources), and have a direct access to the data in the XML file.
</para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>GLib.Object</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    <Member MemberName="FreeTableList">
      <MemberSignature Language="C#" Value="public static void FreeTableList (GLib.List list);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="GLib.List" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="list">a <see cref="T:GLib.List" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    
    <Member MemberName="FindTable">
      <MemberSignature Language="C#" Value="public Gda.Table FindTable (string name);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gda.Table</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>
          <para>
Searches table and returns it.
</para>
        </summary>
        <param name="name">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:Gda.Table" /> or null if not found.</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public void Reload ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
Reloads the object from it's original place, discarding all changes that may have happened.
</para>
        </summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public bool Save (string uri);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>
          <para>
Saves the object to disk.
</para>
        </summary>
        <param name="uri">a <see cref="T:System.String" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public void Changed ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
Emits the <see cref="F:Gda.XmlDatabase.DataChanged" /> Event.
</para>
        </summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDatabase (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="raw">a <see cref="T:System.IntPtr" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDatabase ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>
          <para>
Default Constructor.
</para>
        </summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDatabase (string uri);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="uri">a <see cref="T:System.String" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDatabase (Gda.XmlDatabase xmldb, string name);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="xmldb" Type="Gda.XmlDatabase" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="xmldb">a <see cref="T:Gda.XmlDatabase" /></param>
        <param name="name">a <see cref="T:System.String" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDatabase (Gda.XmlDatabase xmldb, string name, Gda.DataModel model, bool add_data);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="xmldb" Type="Gda.XmlDatabase" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="model" Type="Gda.DataModel" />
        <Parameter Name="add_data" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="xmldb">a <see cref="T:Gda.XmlDatabase" /></param>
        <param name="name">a <see cref="T:System.String" /></param>
        <param name="model">a <see cref="T:Gda.DataModel" /></param>
        <param name="add_data">a <see cref="T:System.Boolean" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
Gets / Sets the uri of the object.
</para>
        </summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>
          <para>
This uri will be used when saving the XML Database.
</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserVersion">
      <MemberSignature Language="C#" Value="public string UserVersion { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
Gets / Sets the user defined version of the object.
</para>
        </summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
Gets the version of libGda used to create the object.
</para>
        </summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>
          <para>
This version is the one that was used for saving the XML file last time it was saved. This value can only be "get" as it is an internal information related to the creation of the Gda.XmlDatabase object. To get the user defined database version, use the property <see cref="P:Gda.XmlDatabase.UserVersion" /> instead.
</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
Gets / Sets the name of the object.
</para>
        </summary>
        <value>a <see cref="T:System.String" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public GLib.List Tables { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.List</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
Gets a list of all table names present in the database.
</para>
        </summary>
        <value>a <see cref="T:GLib.List" /></value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal(CName="changed")</AttributeName>
        </Attribute>
      </Attributes></Member>
    
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gda.XmlDatabase" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataChanged ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default handler for the <see cref="M:Gda.XmlDatabase.DataChanged" /> event.</summary>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gda.XmlDatabase.DataChanged" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlDatabase (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
    <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete(Message=null, IsError=False)</AttributeName>
        </Attribute>
      </Attributes></Member>
  </Members>
</Type>
