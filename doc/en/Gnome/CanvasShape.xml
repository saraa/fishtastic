<Type Name="CanvasShape" FullName="Gnome.CanvasShape">
  <TypeSignature Language="C#" Value="public class CanvasShape : Gnome.CanvasItem, IWrapper, IDisposable" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>gnome-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Base class for canvas item shapes</summary>
    <remarks>
      <para>
        Provides a base class for canvas item shapes, including:
        <see cref="T:Gnome.CanvasBpath" />,
        <see cref="T:Gnome.CanvasEllipse" />,
        <see cref="T:Gnome.CanvasRect" />, and
        <see cref="T:Gnome.CanvasPolygon" />.
      </para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gnome.CanvasItem</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected virtual void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CanvasShape (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of CanvasShape, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CanvasShape ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gnome.CanvasShape'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CanvasShape (Gnome.CanvasGroup group, uint type);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="group" Type="Gnome.CanvasGroup" />
        <Parameter Name="type" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="group">To be added: an object of type 'Gnome.CanvasGroup'</param>
        <param name="type">To be added: an object of type 'uint'</param>
        <returns>To be added: an object of type 'Gnome.CanvasShape'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The GLib Type for Gnome.CanvasShape</summary>
        <returns>The GLib Type for the Gnome.CanvasShape class.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PathDef">
      <MemberSignature Language="C#" Value="public Gnome.CanvasPathDef PathDef { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gnome.CanvasPathDef</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>The <see cref="T:Gnome.CanvasPathDef" /> used</summary>
        <param name="value">a <see cref="T:Gnome.CanvasPathDef" /></param>
        <returns>
          a <see cref="T:Gnome.CanvasPathDef" /> or <see langword="null" /> if none is set for the shape.
        </returns>
        <remarks>
          <para>
            It does not request updates, as it is meant to be used
            from item implementations, from inside update queue.
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillStipple">
      <MemberSignature Language="C#" Value="public Gdk.Drawable FillStipple { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Drawable</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Stipple pattern for fill.</summary>
        <param name="value">Stipple pattern</param>
        <returns>Stipple pattern</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="OutlineColor">
      <MemberSignature Language="C#" Value="public string OutlineColor { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>X color specification for outline color, or <see langword="null" /> pointer for no color (transparent).</summary>
        <param name="value">X color specification</param>
        <returns>X color specification</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CapStyle">
      <MemberSignature Language="C#" Value="public Gdk.CapStyle CapStyle { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.CapStyle</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Cap (end point) style for the Bezier path.</summary>
        <param name="value">Cap style</param>
        <returns>Cap style used by the Bezier path</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="JoinStyle">
      <MemberSignature Language="C#" Value="public Gdk.JoinStyle JoinStyle { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.JoinStyle</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Vertex join style for the Bezier path.</summary>
        <param name="value">Vertex join style</param>
        <returns>Verty join style used by the Bezier path</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillColorRgba">
      <MemberSignature Language="C#" Value="public uint FillColorRgba { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Fill color with an alpha component (in the format 0xRRGGBBAA).</summary>
        <param name="value">the color to fill</param>
        <returns>the fill color</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Miterlimit">
      <MemberSignature Language="C#" Value="public double Miterlimit { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Minimum angle between segments, where miter join rule is applied.</summary>
        <param name="value">minium angle between segments</param>
        <returns>Minimum angle between segments, where miter join rule is applied.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillColorGdk">
      <MemberSignature Language="C#" Value="public Gdk.Color FillColorGdk { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Color</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Allocated <see cref="T:Gdk.Color" /> for fill.</summary>
        <param name="value">a <see cref="T:Gdk.Color" /></param>
        <returns>the <see cref="T:Gdk.Color" /> to fill</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthUnits">
      <MemberSignature Language="C#" Value="public double WidthUnits { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Width of the outline in canvas units. The outline will be scaled when the canvas zoom factor is changed.</summary>
        <param name="value">width of the outline</param>
        <returns>width of the outline</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="OutlineColorRgba">
      <MemberSignature Language="C#" Value="public uint OutlineColorRgba { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Outline color with an alpha component (in the format 0xRRGGBBAA).</summary>
        <param name="value">outline color</param>
        <returns>outline color</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthPixels">
      <MemberSignature Language="C#" Value="public uint WidthPixels { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Width of the outline in pixels. The outline will not be scaled when the canvas zoom factor is changed.</summary>
        <param name="value">Width of the outline</param>
        <returns>width of the outline</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Wind">
      <MemberSignature Language="C#" Value="public uint Wind { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Winding rule for the Bezier path</summary>
        <param name="value">winding rule</param>
        <returns>winding rule used by the Bezier path</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="OutlineStipple">
      <MemberSignature Language="C#" Value="public Gdk.Drawable OutlineStipple { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Drawable</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Stipple pattern for outline.</summary>
        <param name="value">a stipple pattern</param>
        <returns>Stipple pattern used by the outline</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FillColor">
      <MemberSignature Language="C#" Value="public string FillColor { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>
          X color specification for fill color, or <see langword="null" /> pointer for no color (transparent).
        </summary>
        <param name="value">X color specification</param>
        <returns>X color specification</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="OutlineColorGdk">
      <MemberSignature Language="C#" Value="public Gdk.Color OutlineColorGdk { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Color</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Allocated <see cref="T:Gdk.Color" /> for outline.</summary>
        <param name="value">a <see cref="Gdk.Color" /></param>
        <returns>the color of the outline</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CanvasShape (GLib.Type gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.Type" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="gtype">GLib type for the type</param>
        <returns>Creates a new instance of CanvasShape, using the GLib-provided type</returns>
        <remarks>
          <para>This is a constructor used by derivative types of <see cref="T:Gnome.CanvasShape" /> that would have their own GLib type assigned to it.  This is not typically used by C# code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dash">
      <MemberSignature Language="C#" Value="public Art.VpathDash Dash { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Art.VpathDash</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Art.VpathDash" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>