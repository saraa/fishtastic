<Type Name="Canvas" FullName="Gnome.Canvas">
  <TypeSignature Language="C#" Value="public class Canvas : Gtk.Layout, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>gnome-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Layout</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="UpdateBbox">
      <MemberSignature Language="C#" Value="public static void UpdateBbox (Gnome.CanvasItem item, int x1, int y1, int x2, int y2);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Gnome.CanvasItem" />
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="item">To be added: an object of type 'Gnome.CanvasItem'</param>
        <param name="x1">To be added: an object of type 'int'</param>
        <param name="y1">To be added: an object of type 'int'</param>
        <param name="x2">To be added: an object of type 'int'</param>
        <param name="y2">To be added: an object of type 'int'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetButtPoints">
      <MemberSignature Language="C#" Value="public static void GetButtPoints (double x1, double y1, double x2, double y2, double width, int project, out double bx1, out double by1, out double bx2, out double by2);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Double" />
        <Parameter Name="y1" Type="System.Double" />
        <Parameter Name="x2" Type="System.Double" />
        <Parameter Name="y2" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="project" Type="System.Int32" />
        <Parameter Name="bx1" Type="System.Double&amp;" />
        <Parameter Name="by1" Type="System.Double&amp;" />
        <Parameter Name="bx2" Type="System.Double&amp;" />
        <Parameter Name="by2" Type="System.Double&amp;" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="x1">To be added: an object of type 'double'</param>
        <param name="y1">To be added: an object of type 'double'</param>
        <param name="x2">To be added: an object of type 'double'</param>
        <param name="y2">To be added: an object of type 'double'</param>
        <param name="width">To be added: an object of type 'double'</param>
        <param name="project">To be added: an object of type 'int'</param>
        <param name="bx1">To be added: an object of type 'double&amp;'</param>
        <param name="by1">To be added: an object of type 'double&amp;'</param>
        <param name="bx2">To be added: an object of type 'double&amp;'</param>
        <param name="by2">To be added: an object of type 'double&amp;'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMiterPoints">
      <MemberSignature Language="C#" Value="public static int GetMiterPoints (double x1, double y1, double x2, double y2, double x3, double y3, double width, out double mx1, out double my1, out double mx2, out double my2);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Double" />
        <Parameter Name="y1" Type="System.Double" />
        <Parameter Name="x2" Type="System.Double" />
        <Parameter Name="y2" Type="System.Double" />
        <Parameter Name="x3" Type="System.Double" />
        <Parameter Name="y3" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="mx1" Type="System.Double&amp;" />
        <Parameter Name="my1" Type="System.Double&amp;" />
        <Parameter Name="mx2" Type="System.Double&amp;" />
        <Parameter Name="my2" Type="System.Double&amp;" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="x1">To be added: an object of type 'double'</param>
        <param name="y1">To be added: an object of type 'double'</param>
        <param name="x2">To be added: an object of type 'double'</param>
        <param name="y2">To be added: an object of type 'double'</param>
        <param name="x3">To be added: an object of type 'double'</param>
        <param name="y3">To be added: an object of type 'double'</param>
        <param name="width">To be added: an object of type 'double'</param>
        <param name="mx1">To be added: an object of type 'double&amp;'</param>
        <param name="my1">To be added: an object of type 'double&amp;'</param>
        <param name="mx2">To be added: an object of type 'double&amp;'</param>
        <param name="my2">To be added: an object of type 'double&amp;'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="JoinGdkToArt">
      <MemberSignature Language="C#" Value="public static Art.PathStrokeJoinType JoinGdkToArt (Gdk.JoinStyle gdk_join);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Art.PathStrokeJoinType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gdk_join" Type="Gdk.JoinStyle" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="gdk_join">To be added: an object of type 'Gdk.JoinStyle'</param>
        <returns>To be added: an object of type 'Art.PathStrokeJoinType'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderSvp">
      <MemberSignature Language="C#" Value="public static void RenderSvp (Gnome.CanvasBuf buf, Art.SVP svp, uint rgba);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buf" Type="Gnome.CanvasBuf" />
        <Parameter Name="svp" Type="Art.SVP" />
        <Parameter Name="rgba" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="buf">To be added: an object of type 'Gnome.CanvasBuf'</param>
        <param name="svp">To be added: an object of type 'Art.SVP'</param>
        <param name="rgba">To be added: an object of type 'uint'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CapGdkToArt">
      <MemberSignature Language="C#" Value="public static Art.PathStrokeCapType CapGdkToArt (Gdk.CapStyle gdk_cap);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Art.PathStrokeCapType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gdk_cap" Type="Gdk.CapStyle" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="gdk_cap">To be added: an object of type 'Gdk.CapStyle'</param>
        <returns>To be added: an object of type 'Art.PathStrokeCapType'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewAa">
      <MemberSignature Language="C#" Value="public static Gnome.Canvas NewAa ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gnome.Canvas</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gnome.Canvas'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColor">
      <MemberSignature Language="C#" Value="public int GetColor (string spec, out Gdk.Color color);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spec" Type="System.String" />
        <Parameter Name="color" Type="Gdk.Color&amp;" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="spec">To be added: an object of type 'string'</param>
        <param name="color">To be added: an object of type 'Gdk.Color&amp;'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSvp">
      <MemberSignature Language="C#" Value="public void UpdateSvp (Art.SVP p_svp, Art.SVP new_svp);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p_svp" Type="Art.SVP" />
        <Parameter Name="new_svp" Type="Art.SVP" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="p_svp">To be added: an object of type 'Art.SVP'</param>
        <param name="new_svp">To be added: an object of type 'Art.SVP'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemAt">
      <MemberSignature Language="C#" Value="public Gnome.CanvasItem GetItemAt (double x, double y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gnome.CanvasItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="x">To be added: an object of type 'double'</param>
        <param name="y">To be added: an object of type 'double'</param>
        <returns>To be added: an object of type 'Gnome.CanvasItem'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public Gnome.CanvasGroup Root ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gnome.CanvasGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gnome.CanvasGroup'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorldToWindow">
      <MemberSignature Language="C#" Value="public void WorldToWindow (double worldx, double worldy, double winx, out double winy);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="worldx" Type="System.Double" />
        <Parameter Name="worldy" Type="System.Double" />
        <Parameter Name="winx" Type="System.Double" />
        <Parameter Name="winy" Type="System.Double&amp;" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="worldx">To be added: an object of type 'double'</param>
        <param name="worldy">To be added: an object of type 'double'</param>
        <param name="winx">To be added: an object of type 'double'</param>
        <param name="winy">To be added: an object of type 'double&amp;'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSvpClip">
      <MemberSignature Language="C#" Value="public void UpdateSvpClip (Art.SVP p_svp, Art.SVP new_svp, Art.SVP clip_svp);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p_svp" Type="Art.SVP" />
        <Parameter Name="new_svp" Type="Art.SVP" />
        <Parameter Name="clip_svp" Type="Art.SVP" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="p_svp">To be added: an object of type 'Art.SVP'</param>
        <param name="new_svp">To be added: an object of type 'Art.SVP'</param>
        <param name="clip_svp">To be added: an object of type 'Art.SVP'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="W2cAffine">
      <MemberSignature Language="C#" Value="public void W2cAffine (double [] affine);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="affine" Type="System.Double []" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="affine">To be added: an object of type 'double []'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestRedraw">
      <MemberSignature Language="C#" Value="public void RequestRedraw (int x1, int y1, int x2, int y2);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="x1">To be added: an object of type 'int'</param>
        <param name="y1">To be added: an object of type 'int'</param>
        <param name="x2">To be added: an object of type 'int'</param>
        <param name="y2">To be added: an object of type 'int'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScrollOffsets">
      <MemberSignature Language="C#" Value="public void GetScrollOffsets (out int cx, out int cy);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cx" Type="System.Int32&amp;" />
        <Parameter Name="cy" Type="System.Int32&amp;" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="cx">To be added: an object of type 'int&amp;'</param>
        <param name="cy">To be added: an object of type 'int&amp;'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateNow">
      <MemberSignature Language="C#" Value="public void UpdateNow ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScrollRegion">
      <MemberSignature Language="C#" Value="public void GetScrollRegion (out double x1, out double y1, out double x2, out double y2);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Double&amp;" />
        <Parameter Name="y1" Type="System.Double&amp;" />
        <Parameter Name="x2" Type="System.Double&amp;" />
        <Parameter Name="y2" Type="System.Double&amp;" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="x1">To be added: an object of type 'double&amp;'</param>
        <param name="y1">To be added: an object of type 'double&amp;'</param>
        <param name="x2">To be added: an object of type 'double&amp;'</param>
        <param name="y2">To be added: an object of type 'double&amp;'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="W2cD">
      <MemberSignature Language="C#" Value="public void W2cD (double wx, double wy, out double cx, out double cy);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wx" Type="System.Double" />
        <Parameter Name="wy" Type="System.Double" />
        <Parameter Name="cx" Type="System.Double&amp;" />
        <Parameter Name="cy" Type="System.Double&amp;" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="wx">To be added: an object of type 'double'</param>
        <param name="wy">To be added: an object of type 'double'</param>
        <param name="cx">To be added: an object of type 'double&amp;'</param>
        <param name="cy">To be added: an object of type 'double&amp;'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScrollRegion">
      <MemberSignature Language="C#" Value="public void SetScrollRegion (double x1, double y1, double x2, double y2);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Double" />
        <Parameter Name="y1" Type="System.Double" />
        <Parameter Name="x2" Type="System.Double" />
        <Parameter Name="y2" Type="System.Double" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="x1">To be added: an object of type 'double'</param>
        <param name="y1">To be added: an object of type 'double'</param>
        <param name="x2">To be added: an object of type 'double'</param>
        <param name="y2">To be added: an object of type 'double'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestRedrawUta">
      <MemberSignature Language="C#" Value="public void RequestRedrawUta (Art.Uta uta);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uta" Type="Art.Uta" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="uta">To be added: an object of type 'Art.Uta'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowToWorld">
      <MemberSignature Language="C#" Value="public void WindowToWorld (double winx, double winy, out double worldx, out double worldy);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="winx" Type="System.Double" />
        <Parameter Name="winy" Type="System.Double" />
        <Parameter Name="worldx" Type="System.Double&amp;" />
        <Parameter Name="worldy" Type="System.Double&amp;" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="winx">To be added: an object of type 'double'</param>
        <param name="winy">To be added: an object of type 'double'</param>
        <param name="worldx">To be added: an object of type 'double&amp;'</param>
        <param name="worldy">To be added: an object of type 'double&amp;'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="W2c">
      <MemberSignature Language="C#" Value="public void W2c (double wx, double wy, out int cx, out int cy);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wx" Type="System.Double" />
        <Parameter Name="wy" Type="System.Double" />
        <Parameter Name="cx" Type="System.Int32&amp;" />
        <Parameter Name="cy" Type="System.Int32&amp;" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="wx">To be added: an object of type 'double'</param>
        <param name="wy">To be added: an object of type 'double'</param>
        <param name="cx">To be added: an object of type 'int&amp;'</param>
        <param name="cy">To be added: an object of type 'int&amp;'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollTo">
      <MemberSignature Language="C#" Value="public void ScrollTo (int cx, int cy);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cx" Type="System.Int32" />
        <Parameter Name="cy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="cx">To be added: an object of type 'int'</param>
        <param name="cy">To be added: an object of type 'int'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColorPixel">
      <MemberSignature Language="C#" Value="public ulong GetColorPixel (uint rgba);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgba" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="rgba">To be added: an object of type 'uint'</param>
        <returns>To be added: an object of type 'ulong'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="C2w">
      <MemberSignature Language="C#" Value="public void C2w (int cx, int cy, out double wx, out double wy);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cx" Type="System.Int32" />
        <Parameter Name="cy" Type="System.Int32" />
        <Parameter Name="wx" Type="System.Double&amp;" />
        <Parameter Name="wy" Type="System.Double&amp;" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="cx">To be added: an object of type 'int'</param>
        <param name="cy">To be added: an object of type 'int'</param>
        <param name="wx">To be added: an object of type 'double&amp;'</param>
        <param name="wy">To be added: an object of type 'double&amp;'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected virtual void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Canvas (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of Canvas, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Canvas ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gnome.Canvas'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The GLib Type for Gnome.Canvas</summary>
        <returns>The GLib Type for the Gnome.Canvas class.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PixelsPerUnit">
      <MemberSignature Language="C#" Value="public double PixelsPerUnit { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'double'</param>
        <returns>To be added: an object of type 'double'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dither">
      <MemberSignature Language="C#" Value="public Gdk.RgbDither Dither { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.RgbDither</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Gdk.RgbDither" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'Gdk.RgbDither'</param>
        <returns>To be added: an object of type 'Gdk.RgbDither'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterScrollRegion">
      <MemberSignature Language="C#" Value="public bool CenterScrollRegion { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'bool'</param>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="StippleOrigin">
      <MemberSignature Language="C#" Value="public Gdk.GC StippleOrigin { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.GC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Gdk.GC" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'Gdk.GC'</param>
        <returns>To be added: an object of type 'Gdk.GC'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Aa">
      <MemberSignature Language="C#" Value="public bool Aa { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'bool'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="C#" Value="public event GnomeSharp.DrawBackgroundHandler DrawBackground;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBackground">
      <MemberSignature Language="C#" Value="public event GnomeSharp.RenderBackgroundHandler RenderBackground;" />
      <MemberType>Event</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Canvas (GLib.Type gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.Type" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="gtype">GLib type for the type</param>
        <returns>Creates a new instance of Canvas, using the GLib-provided type</returns>
        <remarks>
          <para>This is a constructor used by derivative types of <see cref="T:Gnome.Canvas" /> that would have their own GLib type assigned to it.  This is not typically used by C# code.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>