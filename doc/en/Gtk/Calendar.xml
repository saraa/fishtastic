<Type Name="Calendar" FullName="Gtk.Calendar">
  <TypeSignature Language="C#" Value="public class Calendar : Gtk.Widget, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="Lee Mallabone" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Display a calendar and/or allow the user to select a date.</summary>
    <remarks>
      <para>With a Calendar widget, dates are presented to the user one month at a time. Additional information and decorations can be added to the Calendar by using the <see cref="T:Gtk.CalendarDisplayOptions" /> enumeration with the <see cref="P:Gtk.DisplayOptions" /> property.</para>
      <para>Days can be highlighted on the Calendar with <see cref="M:Gtk.Calendar.MarkDay" /> or <see cref="M:Gtk.Calendar.SelectDay" />.</para>
      <para>The following example shows a method that creates a simple calendar displaying day names, headings and week numbers. (These are controlled by passing elements of the <see cref="T:Gtk.CalendarDisplayOptions" /> type to the <see cref="M:Gtk.Calendar.DisplayOptions" /> method).
    <example>
          <code lang="C#">
// Create a calendar with some simple display options
public Calendar CreateCalendar ()
{
    Calendar cal = new Calendar ();
    cal.DisplayOptions = CalendarDisplayOptions.ShowHeading  | 
                         CalendarDisplayOptions.ShowDayNames | 
                         CalendarDisplayOptions.ShowWeekNumbers;
    return cal;
}
    </code>
        </example></para>
      <para>The following example shows a typical event handler or capturing the selected date whenever it changes.
    <example>
          <code lang="C#">
// Typical event handler for capturing the selected date
void DaySelected (object obj, EventArgs args)
{
    Ca