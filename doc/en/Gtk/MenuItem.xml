<Type Name="MenuItem" FullName="Gtk.MenuItem">
  <TypeSignature Language="C#" Value="public class MenuItem : Gtk.Item, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="Hector Gomez M" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>A widget used for items in menus.</summary>
    <remarks>
      <para>The <see cref="T:Gtk.MenuItem" /> and derived widgets are the only valid children for menus. Their function is to correctly handle highlighting, alignment, events and submenus.</para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Item</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="NewWithLabel">
      <MemberSignature Language="C#" Value="public static Gtk.MenuItem NewWithLabel (string label);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Creates a new <see cref="T:Gtk.MenuItem" /> whose child is <see cref="T:Gtk.Label" />.</summary>
        <param name="label">The text to appear on this menu item.</param>
        <returns>A new <see cref="T:Gtk.MenuItem" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="RemoveSubmenu">
      <MemberSignature Language="C#" Value="public void RemoveSubmenu ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the <see cref="T:Gtk.MenuItem" />'s submenu, if it has one.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Deselect">
      <MemberSignature Language="C#" Value="public void Deselect ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fires the <see cref="F:Gtk.Item.Deselect" /> event.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Fires the <see cref="F:Gtk.Item.Select" /> event.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ToggleSizeAllocate">
      <MemberSignature Language="C#" Value="public void ToggleSizeAllocate (int allocation);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allocation" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Emits the <see cref="F:Gtk.MenuItem.ToggleSizeAllocated" /> event on the given item.</summary>
        <param name="allocation">The allocation to use as signal data.</param>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ToggleSizeRequest">
      <MemberSignature Language="C#" Value="public void ToggleSizeRequest (int requisition);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requisition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Emits the <see cref="F:Gtk.MenuItem.ToggleSizeRequested" /> event on the given item.</summary>
        <param name="requisition">The requisition to use as signal data.</param>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public void Activate ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emits the <see cref="F:Gtk.MenuItem.Activated" /> event on the given item.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected override void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of MenuItem, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>A constructor.</summary>
        <returns>An instance of <see cref="T:Gtk.MenuItem" />.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItem (string label);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="label" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="label">To be added: an object of type 'string'</param>
        <returns>To be added: an object of type 'Gtk.MenuItem'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The GLib Type for Gtk.MenuItem</summary>
        <returns>The GLib Type for the Gtk.MenuItem class.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Submenu">
      <MemberSignature Language="C#" Value="public Gtk.Widget Submenu { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Sets or obtains the widget submenu.</summary>
        <param name="value">The submenu.</param>
        <returns>A submenu for this menu item, or <see langword="null" /> if none.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AccelPath">
      <MemberSignature Language="C#" Value="public string AccelPath { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Sets the accelerator path.</summary>
        <param name="value">An accelerator path, corresponding to this menu item's functionality, or <see langword="null" /> to unset the current path.</param>
        <returns>The accelerator path of the menu item.</returns>
        <remarks>
          <para>
          Sets the accelerator path, through which runtime changes of the menu item's accelerator caused by the user can be identified and saved to persistant storage.
         </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightJustified">
      <MemberSignature Language="C#" Value="public bool RightJustified { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>Sets or obtains whether the menu item appears justified at the right side of a menu bar.</summary>
        <param name="value">If <see langword="true" /> the menu item will appear at the far right if added to a menu bar.</param>
        <returns>Returns <see langword="true" /> if the menu item will appear at the far right if added to a menu bar.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when the item is activated.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ActivateItem">
      <MemberSignature Language="C#" Value="public event EventHandler ActivateItem;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when the item is activated, but also if the menu item has a submenu. For normal applications, the relevant event is <see cref="F:Gtk.MenuItem.Activated" />.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ToggleSizeAllocated">
      <MemberSignature Language="C#" Value="public event GtkSharp.ToggleSizeAllocatedHandler ToggleSizeAllocated;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>GtkSharp.ToggleSizeAllocatedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when size is allocated.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="ToggleSizeRequested">
      <MemberSignature Language="C#" Value="public event GtkSharp.ToggleSizeRequestedHandler ToggleSizeRequested;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>GtkSharp.ToggleSizeRequestedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when size is requested.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MenuItem (GLib.Type gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.Type" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="gtype">GLib type for the type</param>
        <returns>Creates a new instance of MenuItem, using the GLib-provided type</returns>
        <remarks>
          <para>This is a constructor used by derivative types of <see cref="T:Gtk.MenuItem" /> that would have their own GLib type assigned to it.  This is not typically used by C# code.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>