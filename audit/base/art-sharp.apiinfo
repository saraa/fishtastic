<?xml version="1.0"?>
<assemblies>
  <assembly name="art-sharp" version="1.0.0.0">
    <attributes>
      <attribute name="System.Reflection.AssemblyKeyFileAttribute">
        <properties>
          <property name="KeyFile" value="gtk-sharp.snk" />
        </properties>
      </attribute>
      <attribute name="System.Reflection.AssemblyDelaySignAttribute">
        <properties>
          <property name="DelaySign" value="False" />
        </properties>
      </attribute>
    </attributes>
    <namespaces>
      <namespace name="Art">
        <classes>
          <class name="Affine" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="Equal(System.Double[], System.Double[])" attrib="150" returntype="System.Int32">
                <parameters>
                  <parameter name="matrix1" position="0" attrib="0" type="System.Double[]" />
                  <parameter name="matrix2" position="1" attrib="0" type="System.Double[]" />
                </parameters>
              </method>
              <method name="Expansion(System.Double[])" attrib="150" returntype="System.Double">
                <parameters>
                  <parameter name="src" position="0" attrib="0" type="System.Double[]" />
                </parameters>
              </method>
              <method name="Flip(System.Double[], System.Double[], System.Int32, System.Int32)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="dst_affine" position="0" attrib="0" type="System.Double[]" />
                  <parameter name="src_affine" position="1" attrib="0" type="System.Double[]" />
                  <parameter name="horz" position="2" attrib="0" type="System.Int32" />
                  <parameter name="vert" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Identity(System.Double[])" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="dst" position="0" attrib="0" type="System.Double[]" />
                </parameters>
              </method>
              <method name="Invert(System.Double[], System.Double[])" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="dst_affine" position="0" attrib="0" type="System.Double[]" />
                  <parameter name="src_affine" position="1" attrib="0" type="System.Double[]" />
                </parameters>
              </method>
              <method name="Multiply(System.Double[], System.Double[], System.Double[])" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="dst" position="0" attrib="0" type="System.Double[]" />
                  <parameter name="src1" position="1" attrib="0" type="System.Double[]" />
                  <parameter name="src2" position="2" attrib="0" type="System.Double[]" />
                </parameters>
              </method>
              <method name="Point(Art.Point, System.Double[])" attrib="150" returntype="Art.Point">
                <parameters>
                  <parameter name="src" position="0" attrib="0" type="Art.Point" />
                  <parameter name="affine" position="1" attrib="0" type="System.Double[]" />
                </parameters>
              </method>
              <method name="Rectilinear(System.Double[])" attrib="150" returntype="System.Int32">
                <parameters>
                  <parameter name="src" position="0" attrib="0" type="System.Double[]" />
                </parameters>
              </method>
              <method name="Rotate(System.Double[], System.Double)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="dst" position="0" attrib="0" type="System.Double[]" />
                  <parameter name="theta" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Scale(System.Double[], System.Double, System.Double)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="dst" position="0" attrib="0" type="System.Double[]" />
                  <parameter name="sx" position="1" attrib="0" type="System.Double" />
                  <parameter name="sy" position="2" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Shear(System.Double[], System.Double)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="dst" position="0" attrib="0" type="System.Double[]" />
                  <parameter name="theta" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="ToStringArray(System.String[], System.Double[])" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="str" position="0" attrib="0" type="System.String[]" />
                  <parameter name="src" position="1" attrib="0" type="System.Double[]" />
                </parameters>
              </method>
              <method name="Translate(System.Double[], System.Double, System.Double)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="dst" position="0" attrib="0" type="System.Double[]" />
                  <parameter name="tx" position="1" attrib="0" type="System.Double" />
                  <parameter name="ty" position="2" attrib="0" type="System.Double" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="AlphaGamma" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="Gamma" attrib="6" fieldtype="System.Double" />
              <field name="Invtable" attrib="4102" fieldtype="System.Byte[]" />
              <field name="InvtableSize" attrib="6" fieldtype="System.Int32" />
              <field name="Table" attrib="4102" fieldtype="System.Int32[]" />
              <field name="Zero" attrib="22" fieldtype="Art.AlphaGamma" />
            </fields>
            <methods>
              <method name="Free()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="New(System.Double)" attrib="150" returntype="Art.AlphaGamma">
                <parameters>
                  <parameter name="gamma" position="0" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.AlphaGamma">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="AlphaType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Reflection.MonoField">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="None" attrib="32854" fieldtype="Art.AlphaType" value="0" />
              <field name="Premul" attrib="32854" fieldtype="Art.AlphaType" value="2" />
              <field name="Separate" attrib="32854" fieldtype="Art.AlphaType" value="1" />
            </fields>
          </class>
          <class name="Bpath" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="Code" attrib="6" fieldtype="Art.Pathcode" />
              <field name="X1" attrib="6" fieldtype="System.Double" />
              <field name="X2" attrib="6" fieldtype="System.Double" />
              <field name="X3" attrib="6" fieldtype="System.Double" />
              <field name="Y1" attrib="6" fieldtype="System.Double" />
              <field name="Y2" attrib="6" fieldtype="System.Double" />
              <field name="Y3" attrib="6" fieldtype="System.Double" />
              <field name="Zero" attrib="22" fieldtype="Art.Bpath" />
            </fields>
            <methods>
              <method name="AffineTransform(System.Double[])" attrib="134" returntype="Art.Bpath">
                <parameters>
                  <parameter name="matrix" position="0" attrib="0" type="System.Double[]" />
                </parameters>
              </method>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.Bpath">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="CompositingMode" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Reflection.MonoField">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Custom" attrib="32854" fieldtype="Art.CompositingMode" value="2" />
              <field name="Multiply" attrib="32854" fieldtype="Art.CompositingMode" value="1" />
              <field name="Normal" attrib="32854" fieldtype="Art.CompositingMode" value="0" />
            </fields>
          </class>
          <class name="DRect" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="X0" attrib="6" fieldtype="System.Double" />
              <field name="X1" attrib="6" fieldtype="System.Double" />
              <field name="Y0" attrib="6" fieldtype="System.Double" />
              <field name="Y1" attrib="6" fieldtype="System.Double" />
              <field name="Zero" attrib="22" fieldtype="Art.DRect" />
            </fields>
            <methods>
              <method name="AffineTransform(Art.DRect, System.Double[])" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="src" position="0" attrib="0" type="Art.DRect" />
                  <parameter name="matrix" position="1" attrib="0" type="System.Double[]" />
                </parameters>
              </method>
              <method name="Copy(Art.DRect)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="src" position="0" attrib="0" type="Art.DRect" />
                </parameters>
              </method>
              <method name="Empty()" attrib="134" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Intersect(Art.DRect, Art.DRect)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="src1" position="0" attrib="0" type="Art.DRect" />
                  <parameter name="src2" position="1" attrib="0" type="Art.DRect" />
                </parameters>
              </method>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.DRect">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="Svp(Art.SVP)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="svp" position="0" attrib="0" type="Art.SVP" />
                </parameters>
              </method>
              <method name="SvpUnion(Art.SVP)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="svp" position="0" attrib="0" type="Art.SVP" />
                </parameters>
              </method>
              <method name="ToIrect(Art.IRect, Art.DRect)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="dst" position="0" attrib="0" type="Art.IRect" />
                  <parameter name="src" position="1" attrib="0" type="Art.DRect" />
                </parameters>
              </method>
              <method name="Union(Art.DRect, Art.DRect)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="src1" position="0" attrib="0" type="Art.DRect" />
                  <parameter name="src2" position="1" attrib="0" type="Art.DRect" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="DestroyNotify" type="delegate" base="System.MulticastDelegate" sealed="true" serializable="true" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="System.ICloneable" />
              <interface name="System.Runtime.Serialization.ISerializable" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.Object, System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="object" position="0" attrib="0" type="System.Object" />
                  <parameter name="method" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="BeginInvoke(System.IntPtr, System.AsyncCallback, System.Object)" attrib="454" returntype="System.IAsyncResult">
                <parameters>
                  <parameter name="func_data" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="callback" position="1" attrib="0" type="System.AsyncCallback" />
                  <parameter name="object" position="2" attrib="0" type="System.Object" />
                </parameters>
              </method>
              <method name="EndInvoke(System.IAsyncResult)" attrib="454" returntype="System.Void">
                <parameters>
                  <parameter name="result" position="0" attrib="0" type="System.IAsyncResult" />
                </parameters>
              </method>
              <method name="Invoke(System.IntPtr)" attrib="198" returntype="System.Void">
                <parameters>
                  <parameter name="func_data" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="FilterLevel" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Reflection.MonoField">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Bilinear" attrib="32854" fieldtype="Art.FilterLevel" value="2" />
              <field name="Hyper" attrib="32854" fieldtype="Art.FilterLevel" value="3" />
              <field name="Nearest" attrib="32854" fieldtype="Art.FilterLevel" value="0" />
              <field name="Tiles" attrib="32854" fieldtype="Art.FilterLevel" value="1" />
            </fields>
          </class>
          <class name="Global" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="BezPathToVec(Art.Bpath, System.Double)" attrib="150" returntype="Art.Vpath">
                <parameters>
                  <parameter name="bez" position="0" attrib="0" type="Art.Bpath" />
                  <parameter name="flatness" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="BezierToVec(System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, System.Double, Art.Point, System.Int32)" attrib="150" returntype="Art.Point">
                <parameters>
                  <parameter name="x0" position="0" attrib="0" type="System.Double" />
                  <parameter name="y0" position="1" attrib="0" type="System.Double" />
                  <parameter name="x1" position="2" attrib="0" type="System.Double" />
                  <parameter name="y1" position="3" attrib="0" type="System.Double" />
                  <parameter name="x2" position="4" attrib="0" type="System.Double" />
                  <parameter name="y2" position="5" attrib="0" type="System.Double" />
                  <parameter name="x3" position="6" attrib="0" type="System.Double" />
                  <parameter name="y3" position="7" attrib="0" type="System.Double" />
                  <parameter name="p" position="8" attrib="0" type="Art.Point" />
                  <parameter name="level" position="9" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="GraySvpAa(Art.SVP, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="150" returntype="System.Byte">
                <parameters>
                  <parameter name="svp" position="0" attrib="0" type="Art.SVP" />
                  <parameter name="x0" position="1" attrib="0" type="System.Int32" />
                  <parameter name="y0" position="2" attrib="0" type="System.Int32" />
                  <parameter name="x1" position="3" attrib="0" type="System.Int32" />
                  <parameter name="y1" position="4" attrib="0" type="System.Int32" />
                  <parameter name="rowstride" position="5" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="RectListFromUta(Art.Uta, System.Int32, System.Int32, out System.Int32&amp;)" attrib="150" returntype="Art.IRect">
                <parameters>
                  <parameter name="uta" position="0" attrib="0" type="Art.Uta" />
                  <parameter name="max_width" position="1" attrib="0" type="System.Int32" />
                  <parameter name="max_height" position="2" attrib="0" type="System.Int32" />
                  <parameter name="p_nrects" position="3" attrib="2" type="System.Int32&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="GradientLinear" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="A" attrib="6" fieldtype="System.Double" />
              <field name="B" attrib="6" fieldtype="System.Double" />
              <field name="C" attrib="6" fieldtype="System.Double" />
              <field name="NStops" attrib="6" fieldtype="System.Int32" />
              <field name="Spread" attrib="6" fieldtype="Art.GradientSpread" />
              <field name="Zero" attrib="22" fieldtype="Art.GradientLinear" />
            </fields>
            <properties>
              <property name="stops" attrib="1536" ptype="Art.GradientStop" params="">
                <methods>
                  <method name="get_stops()" returntype="Art.GradientStop">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.GradientLinear">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="GradientRadial" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="Affine" attrib="4102" fieldtype="System.Double[]" />
              <field name="Fx" attrib="6" fieldtype="System.Double" />
              <field name="Fy" attrib="6" fieldtype="System.Double" />
              <field name="NStops" attrib="6" fieldtype="System.Int32" />
              <field name="Zero" attrib="22" fieldtype="Art.GradientRadial" />
            </fields>
            <properties>
              <property name="stops" attrib="1536" ptype="Art.GradientStop" params="">
                <methods>
                  <method name="get_stops()" returntype="Art.GradientStop">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.GradientRadial">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="GradientSpread" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Reflection.MonoField">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Pad" attrib="32854" fieldtype="Art.GradientSpread" value="0" />
              <field name="Reflect" attrib="32854" fieldtype="Art.GradientSpread" value="1" />
              <field name="Repeat" attrib="32854" fieldtype="Art.GradientSpread" value="2" />
            </fields>
          </class>
          <class name="GradientStop" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="Color" attrib="4102" fieldtype="System.Byte[]" />
              <field name="Offset" attrib="6" fieldtype="System.Double" />
              <field name="Zero" attrib="22" fieldtype="Art.GradientStop" />
            </fields>
            <methods>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.GradientStop">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="IRect" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="X0" attrib="6" fieldtype="System.Int32" />
              <field name="X1" attrib="6" fieldtype="System.Int32" />
              <field name="Y0" attrib="6" fieldtype="System.Int32" />
              <field name="Y1" attrib="6" fieldtype="System.Int32" />
              <field name="Zero" attrib="22" fieldtype="Art.IRect" />
            </fields>
            <methods>
              <method name="Copy(Art.IRect)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="src" position="0" attrib="0" type="Art.IRect" />
                </parameters>
              </method>
              <method name="Empty()" attrib="134" returntype="System.Int32">
                <parameters />
              </method>
              <method name="Intersect(Art.IRect, Art.IRect)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="src1" position="0" attrib="0" type="Art.IRect" />
                  <parameter name="src2" position="1" attrib="0" type="Art.IRect" />
                </parameters>
              </method>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.IRect">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="Union(Art.IRect, Art.IRect)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="src1" position="0" attrib="0" type="Art.IRect" />
                  <parameter name="src2" position="1" attrib="0" type="Art.IRect" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ImageSource" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="Super" attrib="6" fieldtype="Art.RenderCallback" />
              <field name="Zero" attrib="22" fieldtype="Art.ImageSource" />
            </fields>
            <methods>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.ImageSource">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="ImageSourceFlags" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Reflection.MonoField">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Clear" attrib="32854" fieldtype="Art.ImageSourceFlags" value="1" />
              <field name="Composite" attrib="32854" fieldtype="Art.ImageSourceFlags" value="2" />
            </fields>
          </class>
          <class name="MaskSource" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="Super" attrib="6" fieldtype="Art.RenderCallback" />
              <field name="Zero" attrib="22" fieldtype="Art.MaskSource" />
            </fields>
            <methods>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.MaskSource">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PathStrokeCapType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Reflection.MonoField">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Butt" attrib="32854" fieldtype="Art.PathStrokeCapType" value="0" />
              <field name="Round" attrib="32854" fieldtype="Art.PathStrokeCapType" value="1" />
              <field name="Square" attrib="32854" fieldtype="Art.PathStrokeCapType" value="2" />
            </fields>
          </class>
          <class name="PathStrokeJoinType" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Reflection.MonoField">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Bevel" attrib="32854" fieldtype="Art.PathStrokeJoinType" value="2" />
              <field name="Miter" attrib="32854" fieldtype="Art.PathStrokeJoinType" value="0" />
              <field name="Round" attrib="32854" fieldtype="Art.PathStrokeJoinType" value="1" />
            </fields>
          </class>
          <class name="Pathcode" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Reflection.MonoField">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Curveto" attrib="32854" fieldtype="Art.Pathcode" value="2" />
              <field name="End" attrib="32854" fieldtype="Art.Pathcode" value="4" />
              <field name="Lineto" attrib="32854" fieldtype="Art.Pathcode" value="3" />
              <field name="Moveto" attrib="32854" fieldtype="Art.Pathcode" value="0" />
              <field name="MovetoOpen" attrib="32854" fieldtype="Art.Pathcode" value="1" />
            </fields>
          </class>
          <class name="PixBuf" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="BitsPerSample" attrib="6" fieldtype="System.Int32" />
              <field name="Format" attrib="6" fieldtype="Art.PixFormat" />
              <field name="HasAlpha" attrib="6" fieldtype="System.Int32" />
              <field name="Height" attrib="6" fieldtype="System.Int32" />
              <field name="NChannels" attrib="6" fieldtype="System.Int32" />
              <field name="Rowstride" attrib="6" fieldtype="System.Int32" />
              <field name="Width" attrib="6" fieldtype="System.Int32" />
              <field name="Zero" attrib="22" fieldtype="Art.PixBuf" />
            </fields>
            <methods>
              <method name="Duplicate()" attrib="134" returntype="Art.PixBuf">
                <parameters />
              </method>
              <method name="Free()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="FreeShallow()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.PixBuf">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="NewConstRgb(out System.Byte&amp;, System.Int32, System.Int32, System.Int32)" attrib="150" returntype="Art.PixBuf">
                <parameters>
                  <parameter name="pixels" position="0" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="width" position="1" attrib="0" type="System.Int32" />
                  <parameter name="height" position="2" attrib="0" type="System.Int32" />
                  <parameter name="rowstride" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="NewConstRgba(out System.Byte&amp;, System.Int32, System.Int32, System.Int32)" attrib="150" returntype="Art.PixBuf">
                <parameters>
                  <parameter name="pixels" position="0" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="width" position="1" attrib="0" type="System.Int32" />
                  <parameter name="height" position="2" attrib="0" type="System.Int32" />
                  <parameter name="rowstride" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="NewRgb(out System.Byte&amp;, System.Int32, System.Int32, System.Int32)" attrib="150" returntype="Art.PixBuf">
                <parameters>
                  <parameter name="pixels" position="0" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="width" position="1" attrib="0" type="System.Int32" />
                  <parameter name="height" position="2" attrib="0" type="System.Int32" />
                  <parameter name="rowstride" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="NewRgbDnotify(out System.Byte&amp;, System.Int32, System.Int32, System.Int32, System.IntPtr, Art.DestroyNotify)" attrib="150" returntype="Art.PixBuf">
                <parameters>
                  <parameter name="pixels" position="0" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="width" position="1" attrib="0" type="System.Int32" />
                  <parameter name="height" position="2" attrib="0" type="System.Int32" />
                  <parameter name="rowstride" position="3" attrib="0" type="System.Int32" />
                  <parameter name="dfunc_data" position="4" attrib="0" type="System.IntPtr" />
                  <parameter name="dfunc" position="5" attrib="0" type="Art.DestroyNotify" />
                </parameters>
              </method>
              <method name="NewRgba(out System.Byte&amp;, System.Int32, System.Int32, System.Int32)" attrib="150" returntype="Art.PixBuf">
                <parameters>
                  <parameter name="pixels" position="0" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="width" position="1" attrib="0" type="System.Int32" />
                  <parameter name="height" position="2" attrib="0" type="System.Int32" />
                  <parameter name="rowstride" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="NewRgbaDnotify(out System.Byte&amp;, System.Int32, System.Int32, System.Int32, System.IntPtr, Art.DestroyNotify)" attrib="150" returntype="Art.PixBuf">
                <parameters>
                  <parameter name="pixels" position="0" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="width" position="1" attrib="0" type="System.Int32" />
                  <parameter name="height" position="2" attrib="0" type="System.Int32" />
                  <parameter name="rowstride" position="3" attrib="0" type="System.Int32" />
                  <parameter name="dfunc_data" position="4" attrib="0" type="System.IntPtr" />
                  <parameter name="dfunc" position="5" attrib="0" type="Art.DestroyNotify" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="PixFormat" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Reflection.MonoField">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Rgb" attrib="32854" fieldtype="Art.PixFormat" value="0" />
            </fields>
          </class>
          <class name="Point" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="X" attrib="6" fieldtype="System.Double" />
              <field name="Y" attrib="6" fieldtype="System.Double" />
              <field name="Zero" attrib="22" fieldtype="Art.Point" />
            </fields>
            <methods>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.Point">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Render" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="AlphaType" attrib="6" fieldtype="Art.AlphaType" />
              <field name="BufAlpha" attrib="6" fieldtype="Art.AlphaType" />
              <field name="BufDepth" attrib="6" fieldtype="System.Int32" />
              <field name="ClearColor" attrib="4102" fieldtype="System.Byte[]" />
              <field name="CompositingMode" attrib="6" fieldtype="Art.CompositingMode" />
              <field name="Depth" attrib="6" fieldtype="System.Int32" />
              <field name="NChan" attrib="6" fieldtype="System.Int32" />
              <field name="NRun" attrib="6" fieldtype="System.Int32" />
              <field name="NSpan" attrib="6" fieldtype="System.Int32" />
              <field name="NeedSpan" attrib="6" fieldtype="System.Int32" />
              <field name="Opacity" attrib="6" fieldtype="System.UInt32" />
              <field name="Rowstride" attrib="6" fieldtype="System.Int32" />
              <field name="X0" attrib="6" fieldtype="System.Int32" />
              <field name="X1" attrib="6" fieldtype="System.Int32" />
              <field name="Y0" attrib="6" fieldtype="System.Int32" />
              <field name="Y1" attrib="6" fieldtype="System.Int32" />
              <field name="Zero" attrib="22" fieldtype="Art.Render" />
            </fields>
            <properties>
              <property name="alphagamma" attrib="1536" ptype="Art.AlphaGamma" params="">
                <methods>
                  <method name="get_alphagamma()" returntype="Art.AlphaGamma">
                    <parameters />
                  </method>
                </methods>
              </property>
              <property name="run" attrib="1536" ptype="Art.RenderMaskRun" params="">
                <methods>
                  <method name="get_run()" returntype="Art.RenderMaskRun">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="AddImageSource(Art.ImageSource)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="image_source" position="0" attrib="0" type="Art.ImageSource" />
                </parameters>
              </method>
              <method name="AddMaskSource(Art.MaskSource)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="mask_source" position="0" attrib="0" type="Art.MaskSource" />
                </parameters>
              </method>
              <method name="Clear()" attrib="134" returntype="System.Byte">
                <parameters />
              </method>
              <method name="ClearRgb(System.UInt32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="clear_rgb" position="0" attrib="0" type="System.UInt32" />
                </parameters>
              </method>
              <method name="GradientLinear(Art.GradientLinear, Art.FilterLevel)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="gradient" position="0" attrib="0" type="Art.GradientLinear" />
                  <parameter name="level" position="1" attrib="0" type="Art.FilterLevel" />
                </parameters>
              </method>
              <method name="GradientRadial(Art.GradientRadial, Art.FilterLevel)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="gradient" position="0" attrib="0" type="Art.GradientRadial" />
                  <parameter name="level" position="1" attrib="0" type="Art.FilterLevel" />
                </parameters>
              </method>
              <method name="ImageSolid()" attrib="134" returntype="System.Byte">
                <parameters />
              </method>
              <method name="Invoke()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="InvokeCallbacks(System.Int32)" attrib="134" returntype="System.Byte">
                <parameters>
                  <parameter name="y" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Mask(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" attrib="134" returntype="System.Byte">
                <parameters>
                  <parameter name="x0" position="0" attrib="0" type="System.Int32" />
                  <parameter name="y0" position="1" attrib="0" type="System.Int32" />
                  <parameter name="x1" position="2" attrib="0" type="System.Int32" />
                  <parameter name="y1" position="3" attrib="0" type="System.Int32" />
                  <parameter name="rowstride" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="MaskSolid(System.Int32)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="opacity" position="0" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="New(System.Int32, System.Int32, System.Int32, System.Int32, out System.Byte&amp;, System.Int32, System.Int32, System.Int32, Art.AlphaType, Art.AlphaGamma)" attrib="150" returntype="Art.Render">
                <parameters>
                  <parameter name="x0" position="0" attrib="0" type="System.Int32" />
                  <parameter name="y0" position="1" attrib="0" type="System.Int32" />
                  <parameter name="x1" position="2" attrib="0" type="System.Int32" />
                  <parameter name="y1" position="3" attrib="0" type="System.Int32" />
                  <parameter name="pixels" position="4" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="rowstride" position="5" attrib="0" type="System.Int32" />
                  <parameter name="n_chan" position="6" attrib="0" type="System.Int32" />
                  <parameter name="depth" position="7" attrib="0" type="System.Int32" />
                  <parameter name="alpha_type" position="8" attrib="0" type="Art.AlphaType" />
                  <parameter name="alphagamma" position="9" attrib="0" type="Art.AlphaGamma" />
                </parameters>
              </method>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.Render">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="Svp(Art.SVP)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="svp" position="0" attrib="0" type="Art.SVP" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="RenderCallback" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="Zero" attrib="22" fieldtype="Art.RenderCallback" />
            </fields>
            <methods>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.RenderCallback">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="RenderMaskRun" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="Alpha" attrib="6" fieldtype="System.Int32" />
              <field name="X" attrib="6" fieldtype="System.Int32" />
              <field name="Zero" attrib="22" fieldtype="Art.RenderMaskRun" />
            </fields>
            <methods>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.RenderMaskRun">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Rgb" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="AAffine(out System.Byte&amp;, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, out System.Byte&amp;, System.Int32, System.Int32, System.Int32, System.UInt32, System.Double[], Art.FilterLevel, Art.AlphaGamma)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="dst" position="0" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="x0" position="1" attrib="0" type="System.Int32" />
                  <parameter name="y0" position="2" attrib="0" type="System.Int32" />
                  <parameter name="x1" position="3" attrib="0" type="System.Int32" />
                  <parameter name="y1" position="4" attrib="0" type="System.Int32" />
                  <parameter name="dst_rowstride" position="5" attrib="0" type="System.Int32" />
                  <parameter name="src" position="6" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="src_width" position="7" attrib="0" type="System.Int32" />
                  <parameter name="src_height" position="8" attrib="0" type="System.Int32" />
                  <parameter name="src_rowstride" position="9" attrib="0" type="System.Int32" />
                  <parameter name="rgb" position="10" attrib="0" type="System.UInt32" />
                  <parameter name="affine" position="11" attrib="0" type="System.Double[]" />
                  <parameter name="level" position="12" attrib="0" type="Art.FilterLevel" />
                  <parameter name="alphagamma" position="13" attrib="0" type="Art.AlphaGamma" />
                </parameters>
              </method>
              <method name="Affine(out System.Byte&amp;, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, out System.Byte&amp;, System.Int32, System.Int32, System.Int32, System.Double[], Art.FilterLevel, Art.AlphaGamma)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="dst" position="0" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="x0" position="1" attrib="0" type="System.Int32" />
                  <parameter name="y0" position="2" attrib="0" type="System.Int32" />
                  <parameter name="x1" position="3" attrib="0" type="System.Int32" />
                  <parameter name="y1" position="4" attrib="0" type="System.Int32" />
                  <parameter name="dst_rowstride" position="5" attrib="0" type="System.Int32" />
                  <parameter name="src" position="6" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="src_width" position="7" attrib="0" type="System.Int32" />
                  <parameter name="src_height" position="8" attrib="0" type="System.Int32" />
                  <parameter name="src_rowstride" position="9" attrib="0" type="System.Int32" />
                  <parameter name="affine" position="10" attrib="0" type="System.Double[]" />
                  <parameter name="level" position="11" attrib="0" type="Art.FilterLevel" />
                  <parameter name="alphagamma" position="12" attrib="0" type="Art.AlphaGamma" />
                </parameters>
              </method>
              <method name="BitmapAffine(out System.Byte&amp;, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, out System.Byte&amp;, System.Int32, System.Int32, System.Int32, System.UInt32, System.Double[], Art.FilterLevel, Art.AlphaGamma)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="dst" position="0" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="x0" position="1" attrib="0" type="System.Int32" />
                  <parameter name="y0" position="2" attrib="0" type="System.Int32" />
                  <parameter name="x1" position="3" attrib="0" type="System.Int32" />
                  <parameter name="y1" position="4" attrib="0" type="System.Int32" />
                  <parameter name="dst_rowstride" position="5" attrib="0" type="System.Int32" />
                  <parameter name="src" position="6" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="src_width" position="7" attrib="0" type="System.Int32" />
                  <parameter name="src_height" position="8" attrib="0" type="System.Int32" />
                  <parameter name="src_rowstride" position="9" attrib="0" type="System.Int32" />
                  <parameter name="rgba" position="10" attrib="0" type="System.UInt32" />
                  <parameter name="affine" position="11" attrib="0" type="System.Double[]" />
                  <parameter name="level" position="12" attrib="0" type="Art.FilterLevel" />
                  <parameter name="alphagamma" position="13" attrib="0" type="Art.AlphaGamma" />
                </parameters>
              </method>
              <method name="FillRun(System.Byte, System.Byte, System.Byte, System.Int32)" attrib="150" returntype="System.Byte">
                <parameters>
                  <parameter name="r" position="0" attrib="0" type="System.Byte" />
                  <parameter name="g" position="1" attrib="0" type="System.Byte" />
                  <parameter name="b" position="2" attrib="0" type="System.Byte" />
                  <parameter name="n" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="PixbufAffine(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, Art.PixBuf, System.Double[], Art.FilterLevel, Art.AlphaGamma)" attrib="150" returntype="System.Byte">
                <parameters>
                  <parameter name="x0" position="0" attrib="0" type="System.Int32" />
                  <parameter name="y0" position="1" attrib="0" type="System.Int32" />
                  <parameter name="x1" position="2" attrib="0" type="System.Int32" />
                  <parameter name="y1" position="3" attrib="0" type="System.Int32" />
                  <parameter name="dst_rowstride" position="4" attrib="0" type="System.Int32" />
                  <parameter name="pixbuf" position="5" attrib="0" type="Art.PixBuf" />
                  <parameter name="affine" position="6" attrib="0" type="System.Double[]" />
                  <parameter name="level" position="7" attrib="0" type="Art.FilterLevel" />
                  <parameter name="alphagamma" position="8" attrib="0" type="Art.AlphaGamma" />
                </parameters>
              </method>
              <method name="RgbaAffine(out System.Byte&amp;, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, out System.Byte&amp;, System.Int32, System.Int32, System.Int32, System.Double[], Art.FilterLevel, Art.AlphaGamma)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="dst" position="0" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="x0" position="1" attrib="0" type="System.Int32" />
                  <parameter name="y0" position="2" attrib="0" type="System.Int32" />
                  <parameter name="x1" position="3" attrib="0" type="System.Int32" />
                  <parameter name="y1" position="4" attrib="0" type="System.Int32" />
                  <parameter name="dst_rowstride" position="5" attrib="0" type="System.Int32" />
                  <parameter name="src" position="6" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="src_width" position="7" attrib="0" type="System.Int32" />
                  <parameter name="src_height" position="8" attrib="0" type="System.Int32" />
                  <parameter name="src_rowstride" position="9" attrib="0" type="System.Int32" />
                  <parameter name="affine" position="10" attrib="0" type="System.Double[]" />
                  <parameter name="level" position="11" attrib="0" type="Art.FilterLevel" />
                  <parameter name="alphagamma" position="12" attrib="0" type="Art.AlphaGamma" />
                </parameters>
              </method>
              <method name="RunAlpha(System.Byte, System.Byte, System.Byte, System.Int32, System.Int32)" attrib="150" returntype="System.Byte">
                <parameters>
                  <parameter name="r" position="0" attrib="0" type="System.Byte" />
                  <parameter name="g" position="1" attrib="0" type="System.Byte" />
                  <parameter name="b" position="2" attrib="0" type="System.Byte" />
                  <parameter name="alpha" position="3" attrib="0" type="System.Int32" />
                  <parameter name="n" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="SvpAa(Art.SVP, System.Int32, System.Int32, System.Int32, System.Int32, System.UInt32, System.UInt32, System.Int32, Art.AlphaGamma)" attrib="150" returntype="System.Byte">
                <parameters>
                  <parameter name="svp" position="0" attrib="0" type="Art.SVP" />
                  <parameter name="x0" position="1" attrib="0" type="System.Int32" />
                  <parameter name="y0" position="2" attrib="0" type="System.Int32" />
                  <parameter name="x1" position="3" attrib="0" type="System.Int32" />
                  <parameter name="y1" position="4" attrib="0" type="System.Int32" />
                  <parameter name="fg_color" position="5" attrib="0" type="System.UInt32" />
                  <parameter name="bg_color" position="6" attrib="0" type="System.UInt32" />
                  <parameter name="rowstride" position="7" attrib="0" type="System.Int32" />
                  <parameter name="alphagamma" position="8" attrib="0" type="Art.AlphaGamma" />
                </parameters>
              </method>
              <method name="SvpAlpha(Art.SVP, System.Int32, System.Int32, System.Int32, System.Int32, System.UInt32, System.Int32, Art.AlphaGamma)" attrib="150" returntype="System.Byte">
                <parameters>
                  <parameter name="svp" position="0" attrib="0" type="Art.SVP" />
                  <parameter name="x0" position="1" attrib="0" type="System.Int32" />
                  <parameter name="y0" position="2" attrib="0" type="System.Int32" />
                  <parameter name="x1" position="3" attrib="0" type="System.Int32" />
                  <parameter name="y1" position="4" attrib="0" type="System.Int32" />
                  <parameter name="rgba" position="5" attrib="0" type="System.UInt32" />
                  <parameter name="rowstride" position="6" attrib="0" type="System.Int32" />
                  <parameter name="alphagamma" position="7" attrib="0" type="Art.AlphaGamma" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Rgba" type="class" base="System.Object" charset="Ansi" layout="Auto">
            <constructors>
              <constructor name=".ctor()" attrib="6278">
                <parameters />
              </constructor>
            </constructors>
            <methods>
              <method name="FillRun(System.Byte, System.Byte, System.Byte, System.Int32)" attrib="150" returntype="System.Byte">
                <parameters>
                  <parameter name="r" position="0" attrib="0" type="System.Byte" />
                  <parameter name="g" position="1" attrib="0" type="System.Byte" />
                  <parameter name="b" position="2" attrib="0" type="System.Byte" />
                  <parameter name="n" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="RgbaComposite(out System.Byte&amp;, out System.Byte&amp;, System.Int32)" attrib="150" returntype="System.Void">
                <parameters>
                  <parameter name="dst" position="0" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="src" position="1" attrib="2" type="System.Byte&amp;" direction="out" />
                  <parameter name="n" position="2" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="RunAlpha(System.Byte, System.Byte, System.Byte, System.Int32, System.Int32)" attrib="150" returntype="System.Byte">
                <parameters>
                  <parameter name="r" position="0" attrib="0" type="System.Byte" />
                  <parameter name="g" position="1" attrib="0" type="System.Byte" />
                  <parameter name="b" position="2" attrib="0" type="System.Byte" />
                  <parameter name="alpha" position="3" attrib="0" type="System.Int32" />
                  <parameter name="n" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SVP" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="NSegs" attrib="6" fieldtype="System.Int32" />
              <field name="Segs" attrib="4102" fieldtype="Art.SVPSeg[]" />
              <field name="Zero" attrib="22" fieldtype="Art.SVP" />
            </fields>
            <methods>
              <method name="AddSegment(out System.Int32&amp;, out System.Int32&amp;, System.Int32, System.Int32, Art.Point, Art.DRect)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="pn_segs_max" position="0" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="pn_points_max" position="1" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="n_points" position="2" attrib="0" type="System.Int32" />
                  <parameter name="dir" position="3" attrib="0" type="System.Int32" />
                  <parameter name="points" position="4" attrib="0" type="Art.Point" />
                  <parameter name="bbox" position="5" attrib="0" type="Art.DRect" />
                </parameters>
              </method>
              <method name="Diff(Art.SVP)" attrib="134" returntype="Art.SVP">
                <parameters>
                  <parameter name="svp2" position="0" attrib="0" type="Art.SVP" />
                </parameters>
              </method>
              <method name="Free()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="FromVpath(Art.Vpath)" attrib="150" returntype="Art.SVP">
                <parameters>
                  <parameter name="vpath" position="0" attrib="0" type="Art.Vpath" />
                </parameters>
              </method>
              <method name="Intersect(Art.SVP)" attrib="134" returntype="Art.SVP">
                <parameters>
                  <parameter name="svp2" position="0" attrib="0" type="Art.SVP" />
                </parameters>
              </method>
              <method name="Intersector(Art.SvpWriter)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="out_param" position="0" attrib="0" type="Art.SvpWriter" />
                </parameters>
              </method>
              <method name="Minus(Art.SVP)" attrib="134" returntype="Art.SVP">
                <parameters>
                  <parameter name="svp2" position="0" attrib="0" type="Art.SVP" />
                </parameters>
              </method>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.SVP">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="PointDist(System.Double, System.Double)" attrib="134" returntype="System.Double">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Double" />
                  <parameter name="y" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="PointWind(System.Double, System.Double)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Double" />
                  <parameter name="y" position="1" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="RenderAa(System.Int32, System.Int32, System.Int32, System.Int32, System.IntPtr)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="x0" position="0" attrib="0" type="System.Int32" />
                  <parameter name="y0" position="1" attrib="0" type="System.Int32" />
                  <parameter name="x1" position="2" attrib="0" type="System.Int32" />
                  <parameter name="y1" position="3" attrib="0" type="System.Int32" />
                  <parameter name="callback_data" position="4" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="RenderAaIter(System.Int32, System.Int32, System.Int32, System.Int32)" attrib="134" returntype="Art.SVPRenderAAIter">
                <parameters>
                  <parameter name="x0" position="0" attrib="0" type="System.Int32" />
                  <parameter name="y0" position="1" attrib="0" type="System.Int32" />
                  <parameter name="x1" position="2" attrib="0" type="System.Int32" />
                  <parameter name="y1" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="RewindUncrossed(Art.WindRule)" attrib="134" returntype="Art.SVP">
                <parameters>
                  <parameter name="rule" position="0" attrib="0" type="Art.WindRule" />
                </parameters>
              </method>
              <method name="Uncross()" attrib="134" returntype="Art.SVP">
                <parameters />
              </method>
              <method name="Union(Art.SVP)" attrib="134" returntype="Art.SVP">
                <parameters>
                  <parameter name="svp2" position="0" attrib="0" type="Art.SVP" />
                </parameters>
              </method>
              <method name="VpathStroke(Art.Vpath, Art.PathStrokeJoinType, Art.PathStrokeCapType, System.Double, System.Double, System.Double)" attrib="150" returntype="Art.SVP">
                <parameters>
                  <parameter name="vpath" position="0" attrib="0" type="Art.Vpath" />
                  <parameter name="join" position="1" attrib="0" type="Art.PathStrokeJoinType" />
                  <parameter name="cap" position="2" attrib="0" type="Art.PathStrokeCapType" />
                  <parameter name="line_width" position="3" attrib="0" type="System.Double" />
                  <parameter name="miter_limit" position="4" attrib="0" type="System.Double" />
                  <parameter name="flatness" position="5" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="VpathStrokeRaw(Art.Vpath, Art.PathStrokeJoinType, Art.PathStrokeCapType, System.Double, System.Double, System.Double)" attrib="150" returntype="Art.Vpath">
                <parameters>
                  <parameter name="vpath" position="0" attrib="0" type="Art.Vpath" />
                  <parameter name="join" position="1" attrib="0" type="Art.PathStrokeJoinType" />
                  <parameter name="cap" position="2" attrib="0" type="Art.PathStrokeCapType" />
                  <parameter name="line_width" position="3" attrib="0" type="System.Double" />
                  <parameter name="miter_limit" position="4" attrib="0" type="System.Double" />
                  <parameter name="flatness" position="5" attrib="0" type="System.Double" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SVPRenderAAIter" type="class" base="GLib.Opaque" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="GLib.IWrapper" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
            <methods>
              <method name="Done()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="Step(out System.Int32&amp;, Art.SVPRenderAAStep, out System.Int32&amp;)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="p_start" position="0" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="p_steps" position="1" attrib="0" type="Art.SVPRenderAAStep" />
                  <parameter name="p_n_steps" position="2" attrib="2" type="System.Int32&amp;" direction="out" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SVPRenderAAStep" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="Delta" attrib="6" fieldtype="System.Int32" />
              <field name="X" attrib="6" fieldtype="System.Int32" />
              <field name="Zero" attrib="22" fieldtype="Art.SVPRenderAAStep" />
            </fields>
            <methods>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.SVPRenderAAStep">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SVPSeg" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="Bbox" attrib="6" fieldtype="Art.DRect" />
              <field name="Dir" attrib="6" fieldtype="System.Int32" />
              <field name="NPoints" attrib="6" fieldtype="System.Int32" />
              <field name="Zero" attrib="22" fieldtype="Art.SVPSeg" />
            </fields>
            <properties>
              <property name="points" attrib="1536" ptype="Art.Point" params="">
                <methods>
                  <method name="get_points()" returntype="Art.Point">
                    <parameters />
                  </method>
                </methods>
              </property>
            </properties>
            <methods>
              <method name="Compare(System.IntPtr, System.IntPtr)" attrib="150" returntype="System.Int32">
                <parameters>
                  <parameter name="s1" position="0" attrib="0" type="System.IntPtr" />
                  <parameter name="s2" position="1" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.SVPSeg">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="SvpWriter" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="Zero" attrib="22" fieldtype="Art.SvpWriter" />
            </fields>
            <methods>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.SvpWriter">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="RewindNew(Art.WindRule)" attrib="150" returntype="Art.SvpWriter">
                <parameters>
                  <parameter name="rule" position="0" attrib="0" type="Art.WindRule" />
                </parameters>
              </method>
              <method name="RewindReap()" attrib="134" returntype="Art.SVP">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="Uta" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="Height" attrib="6" fieldtype="System.Int32" />
              <field name="Width" attrib="6" fieldtype="System.Int32" />
              <field name="X0" attrib="6" fieldtype="System.Int32" />
              <field name="Y0" attrib="6" fieldtype="System.Int32" />
              <field name="Zero" attrib="22" fieldtype="Art.Uta" />
            </fields>
            <methods>
              <method name="AddLine(System.Double, System.Double, System.Double, System.Double, System.Int32)" attrib="134" returntype="System.Int32">
                <parameters>
                  <parameter name="x0" position="0" attrib="0" type="System.Double" />
                  <parameter name="y0" position="1" attrib="0" type="System.Double" />
                  <parameter name="x1" position="2" attrib="0" type="System.Double" />
                  <parameter name="y1" position="3" attrib="0" type="System.Double" />
                  <parameter name="rbuf_rowstride" position="4" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Free()" attrib="134" returntype="System.Void">
                <parameters />
              </method>
              <method name="FromIrect(Art.IRect)" attrib="150" returntype="Art.Uta">
                <parameters>
                  <parameter name="bbox" position="0" attrib="0" type="Art.IRect" />
                </parameters>
              </method>
              <method name="FromSvp(Art.SVP)" attrib="150" returntype="Art.Uta">
                <parameters>
                  <parameter name="svp" position="0" attrib="0" type="Art.SVP" />
                </parameters>
              </method>
              <method name="FromVpath(Art.Vpath)" attrib="150" returntype="Art.Uta">
                <parameters>
                  <parameter name="vec" position="0" attrib="0" type="Art.Vpath" />
                </parameters>
              </method>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.Uta">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="New(System.Int32, System.Int32, System.Int32, System.Int32)" attrib="150" returntype="Art.Uta">
                <parameters>
                  <parameter name="x0" position="0" attrib="0" type="System.Int32" />
                  <parameter name="y0" position="1" attrib="0" type="System.Int32" />
                  <parameter name="x1" position="2" attrib="0" type="System.Int32" />
                  <parameter name="y1" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="NewCoords(System.Int32, System.Int32, System.Int32, System.Int32)" attrib="150" returntype="Art.Uta">
                <parameters>
                  <parameter name="x0" position="0" attrib="0" type="System.Int32" />
                  <parameter name="y0" position="1" attrib="0" type="System.Int32" />
                  <parameter name="x1" position="2" attrib="0" type="System.Int32" />
                  <parameter name="y1" position="3" attrib="0" type="System.Int32" />
                </parameters>
              </method>
              <method name="Union(Art.Uta)" attrib="134" returntype="Art.Uta">
                <parameters>
                  <parameter name="uta2" position="0" attrib="0" type="Art.Uta" />
                </parameters>
              </method>
            </methods>
          </class>
          <class name="Vpath" type="struct" base="System.ValueType" sealed="true" charset="Ansi" layout="Sequential">
            <fields>
              <field name="Code" attrib="6" fieldtype="Art.Pathcode" />
              <field name="X" attrib="6" fieldtype="System.Double" />
              <field name="Y" attrib="6" fieldtype="System.Double" />
              <field name="Zero" attrib="22" fieldtype="Art.Vpath" />
            </fields>
            <methods>
              <method name="AddPoint(out System.Int32&amp;, out System.Int32&amp;, Art.Pathcode, System.Double, System.Double)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="pn_points" position="0" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="pn_points_max" position="1" attrib="2" type="System.Int32&amp;" direction="out" />
                  <parameter name="code" position="2" attrib="0" type="Art.Pathcode" />
                  <parameter name="x" position="3" attrib="0" type="System.Double" />
                  <parameter name="y" position="4" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="AffineTransform(System.Double[])" attrib="134" returntype="Art.Vpath">
                <parameters>
                  <parameter name="matrix" position="0" attrib="0" type="System.Double[]" />
                </parameters>
              </method>
              <method name="BboxDrect(Art.DRect)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="drect" position="0" attrib="0" type="Art.DRect" />
                </parameters>
              </method>
              <method name="BboxIrect(Art.IRect)" attrib="134" returntype="System.Void">
                <parameters>
                  <parameter name="irect" position="0" attrib="0" type="Art.IRect" />
                </parameters>
              </method>
              <method name="Dash(Art.VpathDash)" attrib="134" returntype="Art.Vpath">
                <parameters>
                  <parameter name="dash" position="0" attrib="0" type="Art.VpathDash" />
                </parameters>
              </method>
              <method name="FromSvp(Art.SVP)" attrib="150" returntype="Art.Vpath">
                <parameters>
                  <parameter name="svp" position="0" attrib="0" type="Art.SVP" />
                </parameters>
              </method>
              <method name="New(System.IntPtr)" attrib="150" returntype="Art.Vpath">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </method>
              <method name="NewCircle(System.Double, System.Double, System.Double)" attrib="150" returntype="Art.Vpath">
                <parameters>
                  <parameter name="x" position="0" attrib="0" type="System.Double" />
                  <parameter name="y" position="1" attrib="0" type="System.Double" />
                  <parameter name="r" position="2" attrib="0" type="System.Double" />
                </parameters>
              </method>
              <method name="Perturb()" attrib="134" returntype="Art.Vpath">
                <parameters />
              </method>
            </methods>
          </class>
          <class name="VpathDash" type="class" base="GLib.Opaque" charset="Ansi" layout="Auto">
            <interfaces>
              <interface name="GLib.IWrapper" />
            </interfaces>
            <constructors>
              <constructor name=".ctor(System.IntPtr)" attrib="6278">
                <parameters>
                  <parameter name="raw" position="0" attrib="0" type="System.IntPtr" />
                </parameters>
              </constructor>
            </constructors>
          </class>
          <class name="WindRule" type="enum" base="System.Enum" sealed="true" serializable="true" charset="Ansi" layout="Auto" enumtype="System.Reflection.MonoField">
            <interfaces>
              <interface name="System.IComparable" />
              <interface name="System.IConvertible" />
              <interface name="System.IFormattable" />
            </interfaces>
            <fields>
              <field name="Intersect" attrib="32854" fieldtype="Art.WindRule" value="1" />
              <field name="Nonzero" attrib="32854" fieldtype="Art.WindRule" value="0" />
              <field name="Oddeven" attrib="32854" fieldtype="Art.WindRule" value="2" />
              <field name="Positive" attrib="32854" fieldtype="Art.WindRule" value="3" />
            </fields>
          </class>
        </classes>
      </namespace>
    </namespaces>
  </assembly>
</assemblies>