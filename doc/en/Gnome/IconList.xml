<Type Name="IconList" FullName="Gnome.IconList">
  <TypeSignature Language="C#" Value="public class IconList : Gnome.Canvas, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>gnome-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gnome.Canvas</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="IconIsVisible">
      <MemberSignature Language="C#" Value="public Gtk.Visibility IconIsVisible (int pos);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Visibility</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="pos">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'Gtk.Visibility'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPixbuf">
      <MemberSignature Language="C#" Value="public int AppendPixbuf (Gdk.Pixbuf im, string icon_filename, string text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="im" Type="Gdk.Pixbuf" />
        <Parameter Name="icon_filename" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="im">To be added: an object of type 'Gdk.Pixbuf'</param>
        <param name="icon_filename">To be added: an object of type 'string'</param>
        <param name="text">To be added: an object of type 'string'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindIconFromData">
      <MemberSignature Language="C#" Value="public int FindIconFromData (IntPtr data);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="data">To be added: an object of type 'IntPtr'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Thaw">
      <MemberSignature Language="C#" Value="public void Thaw ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindIconFromFilename">
      <MemberSignature Language="C#" Value="public int FindIconFromFilename (string filename);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="filename">To be added: an object of type 'string'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIconTextItem">
      <MemberSignature Language="C#" Value="public Gnome.IconTextItem GetIconTextItem (int idx);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gnome.IconTextItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idx" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="idx">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'Gnome.IconTextItem'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Construct">
      <MemberSignature Language="C#" Value="public void Construct (uint icon_width, Gtk.Adjustment adj, int flags);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon_width" Type="System.UInt32" />
        <Parameter Name="adj" Type="Gtk.Adjustment" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="icon_width">To be added: an object of type 'uint'</param>
        <param name="adj">To be added: an object of type 'Gtk.Adjustment'</param>
        <param name="flags">To be added: an object of type 'int'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIconAt">
      <MemberSignature Language="C#" Value="public int GetIconAt (int x, int y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="x">To be added: an object of type 'int'</param>
        <param name="y">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnselectIcon">
      <MemberSignature Language="C#" Value="public void UnselectIcon (int pos);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="pos">To be added: an object of type 'int'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Moveto">
      <MemberSignature Language="C#" Value="public void Moveto (int pos, double yalign);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
        <Parameter Name="yalign" Type="System.Double" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="pos">To be added: an object of type 'int'</param>
        <param name="yalign">To be added: an object of type 'double'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIconFilename">
      <MemberSignature Language="C#" Value="public string GetIconFilename (int idx);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idx" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="idx">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'string'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int pos);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="pos">To be added: an object of type 'int'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusIcon">
      <MemberSignature Language="C#" Value="public void FocusIcon (int idx);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idx" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="idx">To be added: an object of type 'int'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIconData">
      <MemberSignature Language="C#" Value="public void SetIconData (int idx, IntPtr data);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idx" Type="System.Int32" />
        <Parameter Name="data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="idx">To be added: an object of type 'int'</param>
        <param name="data">To be added: an object of type 'IntPtr'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIconData">
      <MemberSignature Language="C#" Value="public IntPtr GetIconData (int pos);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="pos">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'IntPtr'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="public void Freeze ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int pos, string icon_filename, string text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
        <Parameter Name="icon_filename" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="pos">To be added: an object of type 'int'</param>
        <param name="icon_filename">To be added: an object of type 'string'</param>
        <param name="text">To be added: an object of type 'string'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public int Append (string icon_filename, string text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon_filename" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="icon_filename">To be added: an object of type 'string'</param>
        <param name="text">To be added: an object of type 'string'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIconPixbufItem">
      <MemberSignature Language="C#" Value="public Gnome.CanvasPixbuf GetIconPixbufItem (int idx);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gnome.CanvasPixbuf</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="idx" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="idx">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'Gnome.CanvasPixbuf'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnselectAll">
      <MemberSignature Language="C#" Value="public int UnselectAll ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertPixbuf">
      <MemberSignature Language="C#" Value="public void InsertPixbuf (int pos, Gdk.Pixbuf im, string icon_filename, string text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
        <Parameter Name="im" Type="Gdk.Pixbuf" />
        <Parameter Name="icon_filename" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="pos">To be added: an object of type 'int'</param>
        <param name="im">To be added: an object of type 'Gdk.Pixbuf'</param>
        <param name="icon_filename">To be added: an object of type 'string'</param>
        <param name="text">To be added: an object of type 'string'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectIcon">
      <MemberSignature Language="C#" Value="public void SelectIcon (int pos);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="pos">To be added: an object of type 'int'</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected virtual void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IconList (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of IconList, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IconList (uint icon_width, Gtk.Adjustment adj, int flags);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="icon_width" Type="System.UInt32" />
        <Parameter Name="adj" Type="Gtk.Adjustment" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="icon_width">To be added: an object of type 'uint'</param>
        <param name="adj">To be added: an object of type 'Gtk.Adjustment'</param>
        <param name="flags">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'Gnome.IconList'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IconList ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'Gnome.IconList'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The GLib Type for Gnome.IconList</summary>
        <returns>The GLib Type for the Gnome.IconList class.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Selection">
      <MemberSignature Language="C#" Value="public GLib.List Selection { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.List</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'GLib.List'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColSpacing">
      <MemberSignature Language="C#" Value="public int ColSpacing { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Separators">
      <MemberSignature Language="C#" Value="public string Separators { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'string'</param>
        <returns>To be added: an object of type 'string'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconBorder">
      <MemberSignature Language="C#" Value="public int IconBorder { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumIcons">
      <MemberSignature Language="C#" Value="public uint NumIcons { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'uint'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconWidth">
      <MemberSignature Language="C#" Value="public int IconWidth { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextSpacing">
      <MemberSignature Language="C#" Value="public int TextSpacing { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public Gtk.SelectionMode SelectionMode { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.SelectionMode</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'Gtk.SelectionMode'</param>
        <returns>To be added: an object of type 'Gtk.SelectionMode'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSpacing">
      <MemberSignature Language="C#" Value="public int RowSpacing { set; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="value">To be added: an object of type 'int'</param>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsPerLine">
      <MemberSignature Language="C#" Value="public int ItemsPerLine { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'int'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event GnomeSharp.TextChangedHandler TextChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>GnomeSharp.TextChangedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleCursorSelection">
      <MemberSignature Language="C#" Value="public event EventHandler ToggleCursorSelection;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveCursor">
      <MemberSignature Language="C#" Value="public event GnomeSharp.MoveCursorHandler MoveCursor;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>GnomeSharp.MoveCursorHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconSelected">
      <MemberSignature Language="C#" Value="public event GnomeSharp.IconSelectedHandler IconSelected;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>GnomeSharp.IconSelectedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconFocused">
      <MemberSignature Language="C#" Value="public event GnomeSharp.IconFocusedHandler IconFocused;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>GnomeSharp.IconFocusedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="IconUnselected">
      <MemberSignature Language="C#" Value="public event GnomeSharp.IconUnselectedHandler IconUnselected;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>GnomeSharp.IconUnselectedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IconList (GLib.Type gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.Type" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="gtype">GLib type for the type</param>
        <returns>Creates a new instance of IconList, using the GLib-provided type</returns>
        <remarks>
          <para>This is a constructor used by derivative types of <see cref="T:Gnome.IconList" /> that would have their own GLib type assigned to it.  This is not typically used by C# code.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>