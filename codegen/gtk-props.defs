(define-property name
  (of-object "GtkWidget")
  (prop-type "gchar*")
  (doc-string "The name of the widget")
  (readable #t)
  (writeable #t)
)

(define-property parent
  (of-object "GtkWidget")
  (prop-type "GtkContainer")
  (doc-string "The parent widget of this widget. Must be a Container widget.")
  (readable #t)
  (writeable #t)
)

(define-property width_request
  (of-object "GtkWidget")
  (prop-type "gint")
  (doc-string "Override for width request of the widget, or -1 if natural request should be used.")
  (readable #t)
  (writeable #t)
)

(define-property height_request
  (of-object "GtkWidget")
  (prop-type "gint")
  (doc-string "Override for height request of the widget, or -1 if natural request should be used.")
  (readable #t)
  (writeable #t)
)

(define-property visible
  (of-object "GtkWidget")
  (prop-type "gboolean")
  (doc-string "Whether the widget is visible")
  (readable #t)
  (writeable #t)
)

(define-property sensitive
  (of-object "GtkWidget")
  (prop-type "gboolean")
  (doc-string "Whether the widget responds to input")
  (readable #t)
  (writeable #t)
)

(define-property app_paintable
  (of-object "GtkWidget")
  (prop-type "gboolean")
  (doc-string "Whether the application will paint directly on the widget")
  (readable #t)
  (writeable #t)
)

(define-property can_focus
  (of-object "GtkWidget")
  (prop-type "gboolean")
  (doc-string "Whether the widget can accept the input focus")
  (readable #t)
  (writeable #t)
)

(define-property has_focus
  (of-object "GtkWidget")
  (prop-type "gboolean")
  (doc-string "Whether the widget has the input focus")
  (readable #t)
  (writeable #t)
)

(define-property can_default
  (of-object "GtkWidget")
  (prop-type "gboolean")
  (doc-string "Whether the widget can be the default widget")
  (readable #t)
  (writeable #t)
)

(define-property has_default
  (of-object "GtkWidget")
  (prop-type "gboolean")
  (doc-string "Whether the widget is the default widget")
  (readable #t)
  (writeable #t)
)

(define-property receives_default
  (of-object "GtkWidget")
  (prop-type "gboolean")
  (doc-string "If TRUE, the widget will receive the default action when it is focused.")
  (readable #t)
  (writeable #t)
)

(define-property composite_child
  (of-object "GtkWidget")
  (prop-type "gboolean")
  (doc-string "Whether the widget is composed of other widgets")
  (readable #t)
)

(define-property style
  (of-object "GtkWidget")
  (prop-type "GtkStyle")
  (doc-string "The style of the widget, which contains information about how it will look (colors etc).")
  (readable #t)
  (writeable #t)
)

(define-property events
  (of-object "GtkWidget")
  (prop-type "GdkEventMask")
  (doc-string "The event mask that decides what kind of GdkEvents this widget gets.")
  (readable #t)
  (writeable #t)
)

(define-property extension_events
  (of-object "GtkWidget")
  (prop-type "GdkExtensionMode")
  (doc-string "The mask that decides what kind of extension events this widget gets.")
  (readable #t)
  (writeable #t)
)

(define-property user_data
  (of-object "GtkObject")
  (prop-type "gpointer")
  (doc-string "Anonymous User Data Pointer")
  (readable #t)
  (writeable #t)
)

(define-property resize_mode
  (of-object "GtkContainer")
  (prop-type "GtkResizeMode")
  (doc-string "Specify how resize events are handled")
  (readable #t)
  (writeable #t)
)

(define-property border_width
  (of-object "GtkContainer")
  (prop-type "guint")
  (doc-string "The width of the empty border outside the containers children.")
  (readable #t)
  (writeable #t)
)

(define-property child
  (of-object "GtkContainer")
  (prop-type "GtkWidget")
  (doc-string "Can be used to add a new child to the container.")
  (writeable #t)
)

(define-property type
  (of-object "GtkWindow")
  (prop-type "GtkWindowType")
  (doc-string "The type of the window")
  (readable #t)
  (writeable #t)
  (construct-only #t)
)

(define-property title
  (of-object "GtkWindow")
  (prop-type "gchar*")
  (doc-string "The title of the window")
  (readable #t)
  (writeable #t)
)

(define-property allow_shrink
  (of-object "GtkWindow")
  (prop-type "gboolean")
  (doc-string "If TRUE, the window has no mimimum size. Setting this to TRUE is 99% of the time a bad idea.")
  (readable #t)
  (writeable #t)
)

(define-property allow_grow
  (of-object "GtkWindow")
  (prop-type "gboolean")
  (doc-string "If TRUE, users can expand the window beyond its minimum size.")
  (readable #t)
  (writeable #t)
)

(define-property resizable
  (of-object "GtkWindow")
  (prop-type "gboolean")
  (doc-string "If TRUE, users can resize the window.")
  (readable #t)
  (writeable #t)
)

(define-property modal
  (of-object "GtkWindow")
  (prop-type "gboolean")
  (doc-string "If TRUE, the window is modal (other windows are not usable while this one is up).")
  (readable #t)
  (writeable #t)
)

(define-property window_position
  (of-object "GtkWindow")
  (prop-type "GtkWindowPosition")
  (doc-string "The initial position of the window.")
  (readable #t)
  (writeable #t)
)

(define-property default_width
  (of-object "GtkWindow")
  (prop-type "gint")
  (doc-string "The default width of the window, used when initially showing the window.")
  (readable #t)
  (writeable #t)
)

(define-property default_height
  (of-object "GtkWindow")
  (prop-type "gint")
  (doc-string "The default height of the window, used when initially showing the window.")
  (readable #t)
  (writeable #t)
)

(define-property destroy_with_parent
  (of-object "GtkWindow")
  (prop-type "gboolean")
  (doc-string "If this window should be destroyed when the parent is destroyed")
  (readable #t)
  (writeable #t)
)

(define-property icon
  (of-object "GtkWindow")
  (prop-type "GdkPixbuf")
  (doc-string "Icon for this window")
  (readable #t)
  (writeable #t)
)

(define-property label
  (of-object "GtkButton")
  (prop-type "gchar*")
  (doc-string "Text of the label widget inside the button, if the button contains a label widget.")
  (readable #t)
  (writeable #t)
  (construct-only #t)
)

(define-property use_underline
  (of-object "GtkButton")
  (prop-type "gboolean")
  (doc-string "If set, an underline in the text indicates the next character should be used for the mnemonic accelerator key")
  (readable #t)
  (writeable #t)
  (construct-only #t)
)

(define-property use_stock
  (of-object "GtkButton")
  (prop-type "gboolean")
  (doc-string "If set, the label is used to pick a stock item instead of being displayed")
  (readable #t)
  (writeable #t)
  (construct-only #t)
)

(define-property relief
  (of-object "GtkButton")
  (prop-type "GtkReliefStyle")
  (doc-string "The border relief style.")
  (readable #t)
  (writeable #t)
)

