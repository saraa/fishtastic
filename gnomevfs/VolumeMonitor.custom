//  VolumeMonitor.custom - VolumeMonitor class customizations.
//
//  Authors:  Jeroen Zwartepoorte  <jeroen@xs4all.nl>
//
//  Copyright (c) 2004 Jeroen Zwartepoorte
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.

		[DllImport("gnomevfs-2")]
		static extern IntPtr gnome_vfs_volume_monitor_get_connected_drives(IntPtr raw);

		public Drive[] ConnectedDrives { 
			get {
				IntPtr raw_ret = gnome_vfs_volume_monitor_get_connected_drives(Handle);
				GLib.List list = new GLib.List(raw_ret);
 				Drive[] result = new Drive [list.Count];
				for (int i = 0; i < list.Count; i++)
					result [i] = list [i] as Drive;
				list.Dispose ();
				return result;
			}
		}

		[DllImport("gnomevfs-2")]
		static extern IntPtr gnome_vfs_volume_monitor_get_mounted_volumes(IntPtr raw);

		public Volume[] MountedVolumes { 
			get {
				IntPtr raw_ret = gnome_vfs_volume_monitor_get_mounted_volumes(Handle);
				GLib.List list = new GLib.List(raw_ret);
 				Volume[] result = new Volume [list.Count];
				for (int i = 0; i < list.Count; i++)
					result [i] = list [i] as Volume;
				list.Dispose ();
				return result;
			}
		}

		[DllImport("gnomevfs-2")]
		static extern IntPtr gnome_vfs_get_volume_monitor ();

		public static VolumeMonitor Get ()
		{
			IntPtr raw_ret = gnome_vfs_get_volume_monitor ();
			if (raw_ret == IntPtr.Zero)
				return null;
			else
				return (VolumeMonitor) GLib.Object.GetObject (raw_ret);
		}
