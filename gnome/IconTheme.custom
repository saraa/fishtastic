// IconTheme.custom - customizations to Gnome.IconTheme
//
// Authors: Mike Kestner  <mkestner@ximian.com>
//	    Jerone Zwartepoorte  <jeroen@xs4all.nl>
//
// Copyright (c) 2004 Novell, Inc.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.


		[DllImport("gnomeui-2")]
		static extern IntPtr gnome_icon_theme_list_icons (IntPtr raw, string context);

		public string[] ListIcons (string context)
		{
			IntPtr list_ptr = gnome_icon_theme_list_icons (Handle, context);
			if (list_ptr == IntPtr.Zero)
				return new string [0];

			GLib.List list = new GLib.List (list_ptr, typeof (string));
			string[] result = new string [list.Count];
			int i = 0;
			foreach (string val in list)
				result [i++] = val;
			return result;
		}

		[DllImport("gnomeui-2")]
		static extern void gnome_icon_theme_get_search_path(IntPtr raw, out IntPtr path, out int n_elements);

		[DllImport("libglib-2.0-0.dll")]
		static extern void g_strfreev (IntPtr mem);

                public string[] SearchPath {
                        get {
				string[] retval;
                            
				unsafe {
					int length;
					IntPtr raw_ret;
					gnome_icon_theme_get_search_path (Handle, out raw_ret, out length);
					int size = Marshal.SizeOf (typeof (IntPtr));
					retval = new string[length];
					for (int i = 0, j = 0; i < length; i++, j += size) {
						IntPtr string_ptr = Marshal.ReadIntPtr (new IntPtr (raw_ret.ToInt32 () + j));
						retval[i] = Marshal.PtrToStringAnsi (string_ptr);
					}

					g_strfreev (raw_ret);
				}
                            
				return retval;
			}
		}

