<Type Name="IconSelection" FullName="Gnome.IconSelection">
  <TypeSignature Language="C#" Maintainer="auto" Value="public class IconSelection : Gtk.VBox" />
  <AssemblyInfo>
    <AssemblyName>gnome-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.20.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>An icon listing/chooser display.</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.VBox</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (bool not_shown);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="not_shown" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Clear the currently shown icons, the ones that weren't shown yet are not cleared unless the not_shown parameter is given, in which case even those are cleared.</summary>
        <param name="not_shown">Set to 'true' to clear even the icons that were not shown yet.</param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectIcon">
      <MemberSignature Language="C#" Value="public void SelectIcon (string filename);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Selects the icon filename. This icon must have already been added and shown.</summary>
        <param name="filename">icon filename</param>
        <remarks>see also ShowIcons</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDefaults">
      <MemberSignature Language="C#" Value="public void AddDefaults ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Adds the default pixmap directory into the selection widget.</summary>
        <remarks> It doesn't show the icons in the selection until you do ShowIcons.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowIcons">
      <MemberSignature Language="C#" Value="public void ShowIcons ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Shows the icons inside the widget that were added with AddDefaults and AddDirectory. Before this function is called the icons aren't actually added to the listing and can't be picked by the user.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AddDirectory">
      <MemberSignature Language="C#" Value="public void AddDirectory (string dir);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Adds the icons from the directory dir to the selection widget.</summary>
        <param name="dir">Directory with pixmaps</param>
        <remarks> It doesn't show the icons in the selection until you do ShowIcons.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIcon">
      <MemberSignature Language="C#" Value="public string GetIcon (bool full_path);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="full_path" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>Gets the currently selected icon name.</summary>
        <param name="full_path">To be added: an object of type 'bool'</param>
        <returns>The name of the icon that is currently selected.</returns>
        <remarks>If full_path is true, it returns the full path to the icon, if none is selected it returns NULL.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stop the loading of images when we are in the loop in ShowIcons, otherwise it does nothing and is harmless, it should be used say if the dialog was hidden or when we want to quickly stop loading the images to do something else without destroying the icon selection object. The remaining icons can be shown by ShowIcons.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IconSelection (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IconSelection ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Creates a new icon selection widget, it uses GnomeIconList for the listing of icons.</summary>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Box">
      <MemberSignature Language="C#" Value="public Gtk.Widget Box { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The Gtk.VBox widget that is used to pack the different elements of the selection into.</summary>
        <value>To be added: an object of type 'Gtk.Widget'</value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gil">
      <MemberSignature Language="C#" Value="public Gtk.Widget Gil { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The IconList widget that is used for the display of icons</summary>
        <value>To be added: an object of type 'Gtk.Widget'</value>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gnome.IconSelection" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected IconSelection (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
  </Members>
</Type>
