<Type Name="TearoffMenuItem" FullName="Gtk.TearoffMenuItem">
  <TypeSignature Language="C#" Maintainer="duncan" Value="public class TearoffMenuItem : Gtk.MenuItem" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary> a menu item used to tear off and reattach its menu.</summary>
    <remarks>
      <para>
        a <see cref="T:Gtk.TearoffMenuItem" /> is a special <see cref="T:Gtk.MenuItem" /> which is used to tear off and
        reattach its menu.
      </para>
      <para>
        When its menu is shown normally, the <see cref="T:Gtk.TearoffMenuItem" /> is drawn as a dotted line
        indicating that the menu can be torn off. Activating it causes
        its menu to be torn off and displayed in its own window as a
        tearoff menu.
      </para>
      <para>
        When its menu is shown as a tearoff menu, the <see cref="T:GtkTearoffMenuItem" /> is drawn as a dotted line which
        has a left pointing arrow graphic indicating that the tearoff
        menu can be reattached. Activating it will erase the tearoff
        menu window.
      </para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.MenuItem</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TearoffMenuItem (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TearoffMenuItem ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:Gtk.TearoffMenuItem" /></summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.TearoffMenuItem" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TearoffMenuItem (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
  </Members>
</Type>
