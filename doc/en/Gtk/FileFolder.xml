<Type Name="FileFolder" FullName="Gtk.FileFolder">
  <TypeSignature Language="C#" Value="public abstract interface FileFolder" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 71 EB 6C 55 75 52 9C BF 72 44 F7 A6 EA 05 62 84 F9 EA E0 3B CF F2 CC 13 2C 9C 49 0A B3 09 EA B0 B5 6B CE 44 9D F5 03 D9 C0 A8 1E 52 05 85 CD BE 70 E2 FB 90 43 4B AC 04 FA 62 22 A8 00 98 B7 A1 A7 B3 AF 99 1A 41 23 24 BB 43 25 F6 B8 65 BB 64 EB F6 D1 C2 06 D5 73 2D DF BC 70 A7 38 9E E5 3E 0C 24 6E 32 79 74 1A D0 05 03 E4 98 42 E1 9B F3 7B 19 8B 40 21 26 CB 36 89 C2 EA 64 96 A4 7C B4]</AssemblyPublicKey>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Interface to represent a folder in a filesystem.</summary>
    <remarks>See also <see cref="T:Gtk.FileSystem"/>, <see cref="T:Gtk.FileSystemUnix"/>, <see cref="T:Gtk.FileSystemWin32"/>. </remarks>
  </Docs>
  <Base />
  <Interfaces>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="GetInfo">
      <MemberSignature Language="C#" Value="public virtual Gtk.FileInfo GetInfo (Gtk.FilePath path);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.FileInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Gtk.FilePath" />
      </Parameters>
      <Docs>
        <summary>Gets information about the file at <paramref name="path"/>.</summary>
        <param name="path">a <see cref="T:Gtk.FilePath" /></param>
        <returns>a <see cref="T:Gtk.FileInfo" /></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChildren">
      <MemberSignature Language="C#" Value="public virtual bool ListChildren (GLib.SList children);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="children" Type="GLib.SList" />
      </Parameters>
      <Docs>
        <summary>Lists the child files of this folder by placing them in <paramref name="children"/>. </summary>
        <param name="children">a <see cref="T:GLib.SList" /></param>
        <returns>a <see cref="T:System.Boolean" />, false if there are no children.</returns>
        <remarks>XXX: shouldn't "children" be an "out" parameter?</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFinishedLoading">
      <MemberSignature Language="C#" Value="public virtual bool IsFinishedLoading { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether this folder's information is fully loaded or not.</summary>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public virtual event EventHandler Deleted;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Event fired when this folder is deleted.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FilesAdded">
      <MemberSignature Language="C#" Value="public virtual event Gtk.FilesAddedHandler FilesAdded;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.FilesAddedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Event fired when files are added to this folder.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FilesRemoved">
      <MemberSignature Language="C#" Value="public virtual event Gtk.FilesRemovedHandler FilesRemoved;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.FilesRemovedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Event fired when files are removed from this folder.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FilesChanged">
      <MemberSignature Language="C#" Value="public virtual event Gtk.FilesChangedHandler FilesChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.FilesChangedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Event fired when files are changed in this folder.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="FinishedLoading">
      <MemberSignature Language="C#" Value="public virtual event EventHandler FinishedLoading;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
	  Event fired when this folder's information is finished loading.
	</summary>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
