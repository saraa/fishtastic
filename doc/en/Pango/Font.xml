<Type Name="Font" FullName="Pango.Font">
  <TypeSignature Language="C#" Value="public class Font : GLib.Object, IWrapper, IDisposable" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>pango-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Used to represent a font in a rendering-system-independent matter.</summary>
    <remarks />
  </Docs>
  <Base>
    <BaseTypeName>GLib.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="DescriptionsFree">
      <MemberSignature Language="C#" Value="public static void DescriptionsFree (Pango.FontDescription descs, int n_descs);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descs" Type="Pango.FontDescription" />
        <Parameter Name="n_descs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Free a group of descriptions.</summary>
        <param name="descs">an object of type <see cref="T:Pango.FontDescription" /></param>
        <param name="n_descs">an object of type <see cref="T:System.Int32" /></param>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetMetrics">
      <MemberSignature Language="C#" Value="public Pango.FontMetrics GetMetrics (Pango.Language language);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Pango.FontMetrics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="Pango.Language" />
      </Parameters>
      <Docs>
        <summary>Gets overall metric information for a font.</summary>
        <param name="language"> language tag used to determine which script to get the metrics for, or <see langword="null" /> to indicate to get the metrics for the entire font.</param>
        <returns> a new <see cref="T:Pango.FontMetrics" /> object.</returns>
        <remarks>Since the metrics may be substantially different for different scripts, a language tag can be provided to indicate that the metrics should be retrieved that correspond to the script(s) used by that language.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCoverage">
      <MemberSignature Language="C#" Value="public Pango.Coverage GetCoverage (Pango.Language language);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Pango.Coverage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="Pango.Language" />
      </Parameters>
      <Docs>
        <summary>Computes the coverage map for a given font and language tag.</summary>
        <param name="language"> the language tag</param>
        <returns>a new <see cref="T:Pango.Coverage" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="FindShaper">
      <MemberSignature Language="C#" Value="public Pango.EngineShape FindShaper (Pango.Language language, uint ch);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Pango.EngineShape</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="Pango.Language" />
        <Parameter Name="ch" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>Finds the best matching shaper for a font for a particular language tag and character point.</summary>
        <param name="language"> the language tag</param>
        <param name="ch"> the ISO-10646 character code.</param>
        <returns> the best matching shaper.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Describe">
      <MemberSignature Language="C#" Value="public Pango.FontDescription Describe ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Pango.FontDescription</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a description of the font.</summary>
        <returns>a new <see cref="T:Pango.FontDescription" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetGlyphExtents">
      <MemberSignature Language="C#" Value="public void GetGlyphExtents (uint glyph, Pango.Rectangle ink_rect, Pango.Rectangle logical_rect);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="glyph" Type="System.UInt32" />
        <Parameter Name="ink_rect" Type="Pango.Rectangle" />
        <Parameter Name="logical_rect" Type="Pango.Rectangle" />
      </Parameters>
      <Docs>
        <summary>Gets the logical and ink extents of a glyph within a font.</summary>
        <param name="glyph"> the glyph index</param>
        <param name="ink_rect">a  <see cref="T:Pango.Rectangle" /> used to store the extents of the glyph as drawn or <see langword="null" /> to indicate that the result is not needed.</param>
        <param name="logical_rect">a <see cref="T:Pango.Rectangle" /> used to store the logical extents of the glyph or <see langword="null" /> to indicate that the result is not needed.</param>
        <remarks>The coordinate system for each rectangle has its origin at the base line and horizontal origin of the character with increasing coordinates extending to the right and down. The units of the rectangles are in 1 / <see cref="F:Pango.Scale.PangoScale" /> of a device unit.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected override void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes the resources associated with the object.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Font (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of Font, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <returns>a <see cref="T:GLib.GType" /></returns>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Pango.Font" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Font (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <returns>a <see cref="T:Pango.Font" /></returns>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Font ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Protected constructor.</summary>
        <returns>a <see cref="T:Pango.Font" /></returns>
        <remarks>Default constuctor for children of this type.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>