<Type Name="Toolbar" FullName="Gtk.Toolbar">
  <TypeSignature Language="C#" Maintainer="Duncan Mak" Value="public class Toolbar : Gtk.Container" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Create bars of buttons and other widgets.</summary>
    <remarks>
      <para>A <see cref="T:Gtk.Toolbar" /> is created with a call to <see cref="C:Gtk.Toolbar()" />.</para>
      <para>
        Buttons with text and/or images are added with <see cref="M:Gtk.Toolbar.AppendItem(System.String,System.String,System.String,Gtk.Widget,Gtk.SignalFunc)" />,
		<see cref="M:Gtk.Toolbar.PrependItem(System.String,System.String,System.String,Gtk.Widget,Gtk.SignalFunc)" />,
		and <see cref="M:Gtk.Toolbar.InsertItem(System.String,System.String,System.String,Gtk.Widget,Gtk.SignalFunc,System.IntPtr,System.Int32)" />.
      </para>
      <para>
        Any of <see cref="T:Gtk.ToggleButton" />, <see cref="T:Gtk.RadioButton" />, or an arbitrary widget can be added to the toolbar with
		<see cref="M:Gtk.Toolbar.AppendElement(Gtk.ToolbarChildType,Gtk.Widget,System.String,System.String,System.String,Gtk.Widget,Gtk.SignalFunc)" />,
		<see cref="M:Gtk.Toolbar.PrependElement(Gtk.ToolbarChildType,Gtk.Widget,System.String,System.String,System.String,Gtk.Widget,Gtk.SignalFunc)" />,
		and <see cref="M:Gtk.Toolbar.InsertElement(Gtk.ToolbarChildType,Gtk.Widget,System.String,System.String,System.String,Gtk.Widget,Gtk.SignalFunc,System.IntPtr,System.Int32)" />.
      </para>
      <para>
        Widgets can be visibly grouped by adding gaps between widgets using <see cref="M:Gtk.Toolbar.AppendSpace()" />, <see cref="M:Gtk.Toolbar.PrependSpace()" />, and <see cref="M:Gtk.Toolbar.InsertSpace(System.Int32)" />.
      </para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Container</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Reflection.DefaultMember("Item")</AttributeName>
    </Attribute>
  </Attributes>
  <Members>
    <Member MemberName="PrependSpace">
      <MemberSignature Language="C#" Value="public void PrependSpace ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deprecated.</summary>
        <remarks>Adds a new space to the beginning of the toolbar.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsetStyle">
      <MemberSignature Language="C#" Value="public void UnsetStyle ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unsets a toolbar style set with <see cref="P:Gtk.Toolbar.ToolbarStyle" />.</summary>
        <remarks>Unsets a toolbar style set with <see cref="P:Gtk.Toolbar.ToolbarStyle" />, so that user preferences will be used to determine the toolbar style.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsetIconSize">
      <MemberSignature Language="C#" Value="public void UnsetIconSize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          Unsets toolbar icon size set with <see cref="P:Gtk.Toolbar.IconSize" />.
	</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InsertWidget">
      <MemberSignature Language="C#" Value="public void InsertWidget (Gtk.Widget widget, string tooltip_text, string tooltip_private_text, int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="tooltip_text" Type="System.String" />
        <Parameter Name="tooltip_private_text" Type="System.String" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Deprecated.</summary>
        <param name="widget"> a <see cref="T:Gtk.Widget" /> to add to the toolbar.</param>
        <param name="tooltip_text">The tooltip for the element.</param>
        <param name="tooltip_private_text">Used for context-sensitive help about this toolbar element.</param>
        <param name="position">The number of widgets to insert this widget after.</param>
        <remarks>Inserts a widget in the toolbar at the given position.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendWidget">
      <MemberSignature Language="C#" Value="public void AppendWidget (Gtk.Widget widget, string tooltip_text, string tooltip_private_text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="tooltip_text" Type="System.String" />
        <Parameter Name="tooltip_private_text" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Deprecated.</summary>
        <param name="widget">A <see cref="T:Gtk.Widget" /> to add to the toolbar.</param>
        <param name="tooltip_text">The tooltip for the element.</param>
        <param name="tooltip_private_text">Used for context-sensitive help about this toolbar element.</param>
        <remarks>Adds a widget to the end of the given toolbar.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSpace">
      <MemberSignature Language="C#" Value="public void AppendSpace ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deprecated.</summary>
        <remarks>Adds a new space to the end of the toolbar.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSpace">
      <MemberSignature Language="C#" Value="public void RemoveSpace (int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Deprecated.</summary>
        <param name="position">The index of the space to remove.</param>
        <remarks>Removes a space from the specified position.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependWidget">
      <MemberSignature Language="C#" Value="public void PrependWidget (Gtk.Widget widget, string tooltip_text, string tooltip_private_text);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="tooltip_text" Type="System.String" />
        <Parameter Name="tooltip_private_text" Type="System.String" />
      </Parameters>
      <Docs>
        <summary>Deprecated.</summary>
        <param name="widget">a <see cref="T:Gtk.Widget" /> to add to the toolbar.</param>
        <param name="tooltip_text">The tooltip for the element.</param>
        <param name="tooltip_private_text">Used for context-sensitive help about this toolbar element.</param>
        <remarks>Adds a widget to the beginning of the given toolbar.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertSpace">
      <MemberSignature Language="C#" Value="public void InsertSpace (int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Deprecated. Do not use.</summary>
        <param name="position">The number of widgets after which a space should be inserted.</param>
        <remarks>Inserts a new space in the toolbar at the specified position.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Toolbar (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Toolbar ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Creates a new toolbar.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="IconSize">
      <MemberSignature Language="C#" Value="public Gtk.IconSize IconSize { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.IconSize</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>This function sets the size of stock icons in the toolbar. You can call it both before you add the icons and after they have been added. The size you set will override user preferences for the default icon size.</summary>
        <value>The icon size for the toolbar.</value>
        <remarks />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("icon-size")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Tooltips">
      <MemberSignature Language="C#" Value="public bool Tooltips { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Sets if the tooltips of a toolbar should be active or not.</summary>
        <value>Whether tooltips are enabled.</value>
        <remarks />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("tooltips")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="ToolbarStyle">
      <MemberSignature Language="C#" Value="public Gtk.ToolbarStyle ToolbarStyle { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ToolbarStyle</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Alters the view of toolbar to display either icons only, text only, or both.</summary>
        <value>The current style of toolbar.</value>
        <remarks />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("toolbar-style")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public Gtk.Orientation Orientation { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Orientation</ReturnType>
      </ReturnValue>
      <Parameters>
      </Parameters>
      <Docs>
        <summary>Sets the <see cref="T:Gtk.Orientation" /> of the toolbar to either <see cref="T:Gtk.Orientation.Horizontal" /> or <see cref="T:Gtk.Orientation.Vertical" />.</summary>
        <value>The orientation of the toolbar.</value>
        <remarks />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("orientation")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="StyleChanged">
      <MemberSignature Language="C#" Value="public event Gtk.StyleChangedHandler StyleChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.StyleChangedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Used if you wish to perform an action when the orientation of a toolbar is changed.</summary>
        <remarks />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("style-changed")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="OrientationChanged">
      <MemberSignature Language="C#" Value="public event Gtk.OrientationChangedHandler OrientationChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.OrientationChangedHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Used if you wish to perform an action when ever the style of a toolbar is adjusted.</summary>
        <remarks>For example, this would be a useful signal to connect to if you want to display more items on the toolbar when it is in icon-only mode; each item takes less space on the bar.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("orientation-changed")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <value>a <see cref="T:GLib.GType" /></value>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gtk.Toolbar" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOrientationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnOrientationChanged (Gtk.Orientation orientation);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orientation" Type="Gtk.Orientation" />
      </Parameters>
      <Docs>
        <summary>Default handler for the <see cref="M:Gtk.Toolbar.OrientationChanged" /> event.</summary>
        <param name="orientation">a <see cref="T:Gtk.Orientation" /></param>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.Toolbar.OrientationChanged" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStyleChanged (Gtk.ToolbarStyle style);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="Gtk.ToolbarStyle" />
      </Parameters>
      <Docs>
        <summary>Default handler for the <see cref="M:Gtk.Toolbar.StyleChanged" /> event.</summary>
        <param name="style">a <see cref="T:Gtk.ToolbarStyle" /></param>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.Toolbar.StyleChanged" /> event.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrependElement">
      <MemberSignature Language="C#" Value="public Gtk.Widget PrependElement (Gtk.ToolbarChildType type, Gtk.Widget widget, string text, string tooltip_text, string tooltip_private_text, Gtk.Widget icon, Gtk.SignalFunc cb);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Gtk.ToolbarChildType" />
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="tooltip_text" Type="System.String" />
        <Parameter Name="tooltip_private_text" Type="System.String" />
        <Parameter Name="icon" Type="Gtk.Widget" />
        <Parameter Name="cb" Type="Gtk.SignalFunc" />
      </Parameters>
      <Docs>
        <summary>
          <para>
	    This method is deprecated and should not be used in new code.
	  </para>
          <para>
	    Adds a new button to the beginning of the toolbar (left or top, depending on toolbar orientation).
	  </para>
          <para>
If type == <see cref="T:Gtk.ToolbarChildType.Widget" />, widget is used as the new element. If type ==  <see cref="T:Gtk.ToolbarChildType.Radiobutton" />, widget is used to determine the radio group for the new element. In all other cases, widget must be NULL.
	  </para>
        </summary>
        <param name="type">a <see cref="T:Gtk.ToolbarChildType" />, the type of widget to add</param>
        <param name="widget">a <see cref="T:Gtk.Widget" />, the widget itself</param>
        <param name="text">a <see cref="T:System.String" />, a label for the widget</param>
        <param name="tooltip_text">a <see cref="T:System.String" />, simple tooltip text</param>
        <param name="tooltip_private_text">a <see cref="T:System.String" />, context-sensitive detailed help</param>
        <param name="icon">a <see cref="T:Gtk.Widget" />, the icon to use for this widget</param>
        <param name="cb">a <see cref="T:Gtk.SignalFunc" />, a callback function to use when the new widget is touched.</param>
        <returns>a <see cref="T:Gtk.Widget" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertElement">
      <MemberSignature Language="C#" Value="public Gtk.Widget InsertElement (Gtk.ToolbarChildType type, Gtk.Widget widget, string text, string tooltip_text, string tooltip_private_text, Gtk.Widget icon, Gtk.SignalFunc cb, IntPtr user_data, int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Gtk.ToolbarChildType" />
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="tooltip_text" Type="System.String" />
        <Parameter Name="tooltip_private_text" Type="System.String" />
        <Parameter Name="icon" Type="Gtk.Widget" />
        <Parameter Name="cb" Type="Gtk.SignalFunc" />
        <Parameter Name="user_data" Type="System.IntPtr" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>
          <para>
	    This method is deprecated and should not be used in new code.
	  </para>
          <para>
	    Adds a new button to the beginning of the toolbar (left or top, depending on toolbar orientation).
	  </para>
          <para>
If type == <see cref="T:Gtk.ToolbarChildType.Widget" />, widget is used as the new element. If type ==  <see cref="T:Gtk.ToolbarChildType.Radiobutton" />, widget is used to determine the radio group for the new element. In all other cases, widget must be NULL.
	  </para>
        </summary>
        <param name="type">a <see cref="T:Gtk.ToolbarChildType" />, the type of widget to add</param>
        <param name="widget">a <see cref="T:Gtk.Widget" />, the widget itself</param>
        <param name="text">a <see cref="T:System.String" />, a label for the widget</param>
        <param name="tooltip_text">a <see cref="T:System.String" />, simple tooltip text</param>
        <param name="tooltip_private_text">a <see cref="T:System.String" />, context-sensitive detailed help</param>
        <param name="icon">a <see cref="T:Gtk.Widget" />, the icon to use for this widget</param>
        <param name="cb">a <see cref="T:Gtk.SignalFunc" />, a callback function to use when the new widget is touched.</param>
        <param name="user_data">a <see cref="T:System.IntPtr" />, data to pass to the callback.</param>
        <param name="position">a <see cref="T:System.Int32" />, the number of toolbar widgets to insert this element after.</param>
        <returns>a <see cref="T:Gtk.Widget" />, the new toolbar element.</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AppendItem">
      <MemberSignature Language="C#" Value="public Gtk.Widget AppendItem (string text, string tooltip_text, string tooltip_private_text, Gtk.Widget icon, Gtk.SignalFunc cb);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="tooltip_text" Type="System.String" />
        <Parameter Name="tooltip_private_text" Type="System.String" />
        <Parameter Name="icon" Type="Gtk.Widget" />
        <Parameter Name="cb" Type="Gtk.SignalFunc" />
      </Parameters>
      <Docs>
        <summary>Deprecated.</summary>
        <param name="text">a <see cref="T:System.String" /></param>
        <param name="tooltip_text">a <see cref="T:System.String" /></param>
        <param name="tooltip_private_text">a <see cref="T:System.String" /></param>
        <param name="icon">a <see cref="T:Gtk.Widget" /></param>
        <param name="cb">a <see cref="T:Gtk.SignalFunc" /></param>
        <returns>a <see cref="T:Gtk.Widget" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InsertStock">
      <MemberSignature Language="C#" Value="public Gtk.Widget InsertStock (string stock_id, string tooltip_text, string tooltip_private_text, Gtk.SignalFunc cb, IntPtr user_data, int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stock_id" Type="System.String" />
        <Parameter Name="tooltip_text" Type="System.String" />
        <Parameter Name="tooltip_private_text" Type="System.String" />
        <Parameter Name="cb" Type="Gtk.SignalFunc" />
        <Parameter Name="user_data" Type="System.IntPtr" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Deprecated.</summary>
        <param name="stock_id">a <see cref="T:System.String" /></param>
        <param name="tooltip_text">a <see cref="T:System.String" /></param>
        <param name="tooltip_private_text">a <see cref="T:System.String" /></param>
        <param name="cb">a <see cref="T:Gtk.SignalFunc" /></param>
        <param name="user_data">a <see cref="T:System.IntPtr" /></param>
        <param name="position">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:Gtk.Widget" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public Gtk.Widget InsertItem (string text, string tooltip_text, string tooltip_private_text, Gtk.Widget icon, Gtk.SignalFunc cb, IntPtr user_data, int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="tooltip_text" Type="System.String" />
        <Parameter Name="tooltip_private_text" Type="System.String" />
        <Parameter Name="icon" Type="Gtk.Widget" />
        <Parameter Name="cb" Type="Gtk.SignalFunc" />
        <Parameter Name="user_data" Type="System.IntPtr" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Deprecated.</summary>
        <param name="text">a <see cref="T:System.String" /></param>
        <param name="tooltip_text">a <see cref="T:System.String" /></param>
        <param name="tooltip_private_text">a <see cref="T:System.String" /></param>
        <param name="icon">a <see cref="T:Gtk.Widget" /></param>
        <param name="cb">a <see cref="T:Gtk.SignalFunc" /></param>
        <param name="user_data">a <see cref="T:System.IntPtr" /></param>
        <param name="position">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:Gtk.Widget" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="PrependItem">
      <MemberSignature Language="C#" Value="public Gtk.Widget PrependItem (string text, string tooltip_text, string tooltip_private_text, Gtk.Widget icon, Gtk.SignalFunc cb);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="tooltip_text" Type="System.String" />
        <Parameter Name="tooltip_private_text" Type="System.String" />
        <Parameter Name="icon" Type="Gtk.Widget" />
        <Parameter Name="cb" Type="Gtk.SignalFunc" />
      </Parameters>
      <Docs>
        <summary>Deprecated.</summary>
        <param name="text">a <see cref="T:System.String" /></param>
        <param name="tooltip_text">a <see cref="T:System.String" /></param>
        <param name="tooltip_private_text">a <see cref="T:System.String" /></param>
        <param name="icon">a <see cref="T:Gtk.Widget" /></param>
        <param name="cb">a <see cref="T:Gtk.SignalFunc" /></param>
        <returns>a <see cref="T:Gtk.Widget" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="AppendElement">
      <MemberSignature Language="C#" Value="public Gtk.Widget AppendElement (Gtk.ToolbarChildType type, Gtk.Widget widget, string text, string tooltip_text, string tooltip_private_text, Gtk.Widget icon, Gtk.SignalFunc cb);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Gtk.ToolbarChildType" />
        <Parameter Name="widget" Type="Gtk.Widget" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="tooltip_text" Type="System.String" />
        <Parameter Name="tooltip_private_text" Type="System.String" />
        <Parameter Name="icon" Type="Gtk.Widget" />
        <Parameter Name="cb" Type="Gtk.SignalFunc" />
      </Parameters>
      <Docs>
        <summary>Deprecated.</summary>
        <param name="type">a <see cref="T:Gtk.ToolbarChildType" /></param>
        <param name="widget">a <see cref="T:Gtk.Widget" /></param>
        <param name="text">a <see cref="T:System.String" /></param>
        <param name="tooltip_text">a <see cref="T:System.String" /></param>
        <param name="tooltip_private_text">a <see cref="T:System.String" /></param>
        <param name="icon">a <see cref="T:Gtk.Widget" /></param>
        <param name="cb">a <see cref="T:Gtk.SignalFunc" /></param>
        <returns>a <see cref="T:Gtk.Widget" /></returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Toolbar (GLib.GType gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="GLib.GType" />
      </Parameters>
      <Docs>
        <summary>Protected Constructor.</summary>
        <param name="gtype">a <see cref="T:GLib.GType" /></param>
        <remarks>Chain to this constructor if you have manually registered a native <see cref="T:GLib.GType" /> value for your subclass.</remarks>
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="ShowArrow">
      <MemberSignature Language="C#" Value="public bool ShowArrow { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Whether to show an arrow if the toolbar doesn't fit.</summary>
        <value>a <see cref="T:System.Boolean" /></value>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("show-arrow")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="ReliefStyle">
      <MemberSignature Language="C#" Value="public Gtk.ReliefStyle ReliefStyle { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ReliefStyle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The relief style of buttons on the toolbar.</summary>
        <value>a <see cref="T:Gtk.ReliefStyle" /></value>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="NItems">
      <MemberSignature Language="C#" Value="public int NItems { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The number of items on the toolbar.</summary>
        <value>a <see cref="T:System.Int32" /></value>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="PopupContextMenu">
      <MemberSignature Language="C#" Value="public event Gtk.PopupContextMenuHandler PopupContextMenu;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.PopupContextMenuHandler</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Emitted when the user right-clicks the toolbar or uses the
	  keybinding to display a popup menu.</summary>
        <remarks>
	  Application developers should handle this signal if they want
	  to display a context menu on the toolbar.
	</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Signal("popup_context_menu")</AttributeName>
        </Attribute>
      </Attributes>
    </Member>
    <Member MemberName="OnPopupContextMenu">
      <MemberSignature Language="C#" Value="protected virtual bool OnPopupContextMenu (int x, int y, int button_number);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="button_number" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Default handler for the <see cref="M:Gtk.Toolbar.PopupContextMenu" /> event.</summary>
        <param name="x">a <see cref="T:System.Int32" /></param>
        <param name="y">a <see cref="T:System.Int32" /></param>
        <param name="button_number">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>Override this method in a subclass to provide a default handler for the <see cref="M:Gtk.Toolbar.PopupContextMenu" /> event.</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="GetNthItem">
      <MemberSignature Language="C#" Value="public Gtk.ToolItem GetNthItem (int n);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.ToolItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Returns the <paramref name="n" />th item on the toolbar,
	  or <see langword="null" /> if the toolbar does not contain an 
	  <paramref name="n" />th item.</summary>
        <param name="n">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:Gtk.ToolItem" /></returns>
        <remarks />
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (Gtk.ToolItem item, int pos);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Gtk.ToolItem" />
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>
	  Insert a <see cref="T:Gtk.ToolItem" /> into the toolbar at position 
	  <paramref name="pos" />. 
	</summary>
        <param name="item">a <see cref="T:Gtk.ToolItem" /></param>
        <param name="pos">a <see cref="T:System.Int32" /></param>
        <remarks>
	  If <paramref name="pos" /> is 0 the item is prepended to the start 
	  of the toolbar. 
	  If <paramref name="pos" /> is negative, the item is appended to the 
	  end of the toolbar.
	</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="GetItemIndex">
      <MemberSignature Language="C#" Value="public int GetItemIndex (Gtk.ToolItem item);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Gtk.ToolItem" />
      </Parameters>
      <Docs>
        <summary>
	  Returns the position of <paramref name="item" /> on the toolbar, 
	  starting from 0.
	</summary>
        <param name="item">a <see cref="T:Gtk.ToolItem" /></param>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>
	  It is an error if <paramref name="item" /> is not a child of 
	  the toolbar.
	</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="GetDropIndex">
      <MemberSignature Language="C#" Value="public int GetDropIndex (int x, int y);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>
	   Returns the position corresponding to the indicated point on
	   the toolbar. 
	</summary>
        <param name="x">a <see cref="T:System.Int32" /></param>
        <param name="y">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:System.Int32" /></returns>
        <remarks>
	  This is useful when dragging items to the toolbar:
	   this function returns the position a new item should be
	   inserted. <paramref name="x" /> and <paramref name="y" /> are in 
	   toolbar coordinates.
	</remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="NumChildren">
      <MemberSignature Language="C#" Value="public int NumChildren { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The number of items in the toolbar.</summary>
        <value>The number of itesm.</value>
        <remarks>
        </remarks>
        <since version="Gtk# 2.4" />
      </Docs>
    </Member>
    <Member MemberName="InsertStock">
      <MemberSignature Language="C#" Value="public Gtk.Widget InsertStock (string stock_id, string tooltip_text, string tooltip_private_text, Gtk.SignalFunc cb, int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.Widget</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stock_id" Type="System.String" />
        <Parameter Name="tooltip_text" Type="System.String" />
        <Parameter Name="tooltip_private_text" Type="System.String" />
        <Parameter Name="cb" Type="Gtk.SignalFunc" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Deprecated</summary>
        <param name="stock_id">a <see cref="T:System.String" /></param>
        <param name="tooltip_text">a <see cref="T:System.String" /></param>
        <param name="tooltip_private_text">a <see cref="T:System.String" /></param>
        <param name="cb">a <see cref="T:Gtk.SignalFunc" /></param>
        <param name="position">a <see cref="T:System.Int32" /></param>
        <returns>a <see cref="T:Gtk.Widget" /></returns>
        <remarks>Replaced by ToolItem API.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDropHighlightItem">
      <MemberSignature Language="C#" Value="public void SetDropHighlightItem (Gtk.ToolItem tool_item, int index_);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tool_item" Type="Gtk.ToolItem" />
        <Parameter Name="index_" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="tool_item">a <see cref="T:Gtk.ToolItem" /></param>
        <param name="index_">a <see cref="T:System.Int32" /></param>
        <remarks>To be added</remarks>
        <since version="Gtk# 2.6" />
      </Docs>
    </Member>
    <Member MemberName="IconSizeSet">
      <MemberSignature Language="C#" Value="public bool IconSizeSet { set; get; };" />
      <MemberType>Property</MemberType>
      <Attributes>
        <Attribute>
          <AttributeName>GLib.Property("icon-size-set")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if an Icon size is set.</summary>
        <value>a <see cref="T:System.Boolean" />.</value>
        <remarks />
        <since version="Gtk# 2.10" />
      </Docs>
    </Member>
  </Members>
</Type>
