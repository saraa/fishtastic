<Type Name="RawXMLConnectFunc" FullName="Glade.XML+SignalConnector+RawXMLConnectFunc">
  <TypeSignature Language="C#" Value="public sealed delegate void RawXMLConnectFunc (string handler_name, IntPtr objekt, string signal_name, string signal_data, IntPtr connect_object, int after, IntPtr user_data);" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>glade-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public virtual void EndInvoke (IAsyncResult result);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="result">a <see cref="T:System.IAsyncResult" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginInvoke (string handler_name, IntPtr objekt, string signal_name, string signal_data, IntPtr connect_object, int after, IntPtr user_data, AsyncCallback callback, object object);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler_name" Type="System.String" />
        <Parameter Name="objekt" Type="System.IntPtr" />
        <Parameter Name="signal_name" Type="System.String" />
        <Parameter Name="signal_data" Type="System.String" />
        <Parameter Name="connect_object" Type="System.IntPtr" />
        <Parameter Name="after" Type="System.Int32" />
        <Parameter Name="user_data" Type="System.IntPtr" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="object" Type="System.Object" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="handler_name">a <see cref="T:System.String" /></param>
        <param name="objekt">a <see cref="T:System.IntPtr" /></param>
        <param name="signal_name">a <see cref="T:System.String" /></param>
        <param name="signal_data">a <see cref="T:System.String" /></param>
        <param name="connect_object">a <see cref="T:System.IntPtr" /></param>
        <param name="after">a <see cref="T:System.Int32" /></param>
        <param name="user_data">a <see cref="T:System.IntPtr" /></param>
        <param name="callback">a <see cref="T:System.AsyncCallback" /></param>
        <param name="object">a <see cref="T:System.Object" /></param>
        <returns>a <see cref="T:System.IAsyncResult" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public virtual void Invoke (string handler_name, IntPtr objekt, string signal_name, string signal_data, IntPtr connect_object, int after, IntPtr user_data);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler_name" Type="System.String" />
        <Parameter Name="objekt" Type="System.IntPtr" />
        <Parameter Name="signal_name" Type="System.String" />
        <Parameter Name="signal_data" Type="System.String" />
        <Parameter Name="connect_object" Type="System.IntPtr" />
        <Parameter Name="after" Type="System.Int32" />
        <Parameter Name="user_data" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="handler_name">a <see cref="T:System.String" /></param>
        <param name="objekt">a <see cref="T:System.IntPtr" /></param>
        <param name="signal_name">a <see cref="T:System.String" /></param>
        <param name="signal_data">a <see cref="T:System.String" /></param>
        <param name="connect_object">a <see cref="T:System.IntPtr" /></param>
        <param name="after">a <see cref="T:System.Int32" /></param>
        <param name="user_data">a <see cref="T:System.IntPtr" /></param>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RawXMLConnectFunc (object object, IntPtr method);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="object" Type="System.Object" />
        <Parameter Name="method" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="object">a <see cref="T:System.Object" /></param>
        <param name="method">a <see cref="T:System.IntPtr" /></param>
        <returns>a <see cref="T:Glade.XML+SignalConnector+RawXMLConnectFunc" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
  <Parameters>
    <Parameter Name="handler_name" Type="System.String" />
    <Parameter Name="objekt" Type="System.IntPtr" />
    <Parameter Name="signal_name" Type="System.String" />
    <Parameter Name="signal_data" Type="System.String" />
    <Parameter Name="connect_object" Type="System.IntPtr" />
    <Parameter Name="after" Type="System.Int32" />
    <Parameter Name="user_data" Type="System.IntPtr" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
</Type>