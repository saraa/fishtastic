<Type Name="CellLayout" FullName="Gtk.CellLayout">
  <TypeSignature Language="C#" Maintainer="auto" Value="public interface CellLayout : GLib.IWrapper" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>[00 24 00 00 04 80 00 00 94 00 00 00 06 02 00 00 00 24 00 00 52 53 41 31 00 04 00 00 01 00 01 00 71 EB 6C 55 75 52 9C BF 72 44 F7 A6 EA 05 62 84 F9 EA E0 3B CF F2 CC 13 2C 9C 49 0A B3 09 EA B0 B5 6B CE 44 9D F5 03 D9 C0 A8 1E 52 05 85 CD BE 70 E2 FB 90 43 4B AC 04 FA 62 22 A8 00 98 B7 A1 A7 B3 AF 99 1A 41 23 24 BB 43 25 F6 B8 65 BB 64 EB F6 D1 C2 06 D5 73 2D DF BC 70 A7 38 9E E5 3E 0C 24 6E 32 79 74 1A D0 05 03 E4 98 42 E1 9B F3 7B 19 8B 40 21 26 CB 36 89 C2 EA 64 96 A4 7C B4]</AssemblyPublicKey>
    <AssemblyVersion>2.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>Manages layout for table cells.</summary>
    <remarks />
    <since version="Gtk# 2.4" />
  </Docs>
  <Interfaces>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
  </Interfaces>
  <Members>
    <Member MemberName="Reorder">
      <MemberSignature Language="C#" Value="public void Reorder (Gtk.CellRenderer cell, int position);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Gtk.CellRenderer" />
        <Parameter Name="position" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>Re-inserts <paramref name="cell" /> at <paramref name="position" />.</summary>
        <param name="cell">a <see cref="T:Gtk.CellRenderer" /></param>
        <param name="position">a <see cref="T:System.Int32" /></param>
        <remarks>
	  Note that <paramref name="cell" /> has already to be packed
	  into the cell layout for this to function properly.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="PackEnd">
      <MemberSignature Language="C#" Value="public void PackEnd (Gtk.CellRenderer cell, bool expand);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Gtk.CellRenderer" />
        <Parameter Name="expand" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>
	  Adds the <paramref name="cell" /> to the end of the cell layout. 
	</summary>
        <param name="cell">a <see cref="T:Gtk.CellRenderer" /></param>
        <param name="expand">a <see cref="T:System.Boolean" />, TRUE if <paramref name="cell" /> is to be given extra space allocated to this cell layout.</param>
        <remarks>
	  If <paramref name="expand" /> is FALSE, then the
	  cell is allocated no more space than it needs. Any unused space is
	  divided evenly between cells for which <paramref name="expand" /> is 
	  TRUE.	
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="PackStart">
      <MemberSignature Language="C#" Value="public void PackStart (Gtk.CellRenderer cell, bool expand);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Gtk.CellRenderer" />
        <Parameter Name="expand" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <summary>
	  Packs <paramref name="cell" /> into the beginning of the cell layout. 
	</summary>
        <param name="cell">a <see cref="T:Gtk.CellRenderer" /></param>
        <param name="expand">a <see cref="T:System.Boolean" />, TRUE if <paramref name="cell" /> is to be given extra space allocated to this cell layout.</param>
        <remarks>
	  If <paramref name="expand" /> is FALSE, then the
	  cell is allocated no more space than it needs. Any unused space is
	  divided evenly between cells for which <paramref name="expand" /> is 
	  TRUE.	
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public void AddAttribute (Gtk.CellRenderer cell, string attribute, int column);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Gtk.CellRenderer" />
        <Parameter Name="attribute" Type="System.String" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary> 
	  Adds an attribute mapping to the list for this cell layout.
	</summary>
        <param name="cell">a <see cref="T:Gtk.CellRenderer" /></param>
        <param name="attribute">a <see cref="T:System.String" /></param>
        <param name="column">a <see cref="T:System.Int32" /></param>
        <remarks>
	  The <paramref name="column" /> is the
	  column of the model to get a value from, and the <paramref name="attribute" /> is the
	  parameter on <paramref name="cell" /> to be set from the value. So for example if column 2
	  of the model contains strings, you could have the "text" attribute of a
	  <see cref="T:Gtk.CellRendererText" /> get its values from column 2.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAttributes">
      <MemberSignature Language="C#" Value="public void ClearAttributes (Gtk.CellRenderer cell);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Gtk.CellRenderer" />
      </Parameters>
      <Docs>
        <summary>Clears all existing attributes previously set with
	  <see cref="M:Gtk.CellLayout.SetAttributes" />.</summary>
        <param name="cell">a <see cref="T:Gtk.CellRenderer" /></param>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unsets all the mappings on all renderers for this cell layout.</summary>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="SetCellDataFunc">
      <MemberSignature Language="C#" Value="public void SetCellDataFunc (Gtk.CellRenderer cell, Gtk.CellLayoutDataFunc func);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="Gtk.CellRenderer" />
        <Parameter Name="func" Type="Gtk.CellLayoutDataFunc" />
      </Parameters>
      <Docs>
        <summary>Sets up a data function for this layout.</summary>
        <param name="cell">a <see cref="T:Gtk.CellRenderer" /></param>
        <param name="func">a <see cref="T:Gtk.CellLayoutDataFunc" /></param>
        <remarks>
	  The data function is used instead of the standard attributes mapping for setting the
	  column value, and should set the value of the layout's cell renderer(s)
	  as appropriate. <paramref name="func" /> may be <see langword="null" /> to remove an older one.
	</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttributes">
      <MemberSignature Language="C#" Value="public void SetAttributes (Gtk.CellRenderer renderer, object[] attrs);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderer" Type="Gtk.CellRenderer" />
        <Parameter Name="attrs" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <summary>Sets the attribute to model column bindings for a renderer.</summary>
        <param name="renderer">a <see cref="T:Gtk.CellRenderer" /></param>
        <param name="attrs">a <see cref="T:System.Object" /></param>
        <remarks>The <paramref name="attrs" /> array should consist of pairs of attribute names and column indices.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cells">
      <MemberSignature Language="C#" Value="public Gtk.CellRenderer[] Cells { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gtk.CellRenderer[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <see version="Gtk# 2.12" />
      </Docs>
    </Member>
  </Members>
</Type>
