<Type Name="Ctree" FullName="Gtk.Ctree">
  <TypeSignature Language="C#" Value="public class Ctree" Maintainer="Hector Gomez M" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>A <paramref name="widget" /> displaying a hierarchical tree.</summary>
    <remarks>
     <para>
      The <see cref="T:Gtk.Ctree" /> widget is used for showing a hierarchical tree to the user, for example a directory tree. The tree is internally represented as a set of nodes.
     </para>
     <para>
      Positions in the tree are often indicated by two arguments, a parent and a sibling, both node pointers. If the parent is <see langword="null" />, the position is at the root of the tree and if the sibling is <see langword="null" />, it will be the last child of parent, otherwise it wil be inserted just before the sibling. 
     </para>
     <para>
      Warning: <see cref="T.Gtk.Ctree" /> is deprecated and should not be used in newly-written code.
     </para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ctree ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:Gtk.Ctree" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="PosGetType">
      <MemberSignature Language="C#" Value="public static GLib.GType PosGetType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:GLib.GType" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpansionTypeGetType">
      <MemberSignature Language="C#" Value="public static GLib.GType ExpansionTypeGetType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:GLib.GType" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStyleGetType">
      <MemberSignature Language="C#" Value="public static GLib.GType LineStyleGetType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:GLib.GType" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpanderStyleGetType">
      <MemberSignature Language="C#" Value="public static GLib.GType ExpanderStyleGetType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>a <see cref="T:GLib.GType" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
