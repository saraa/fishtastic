<Type Name="Event" FullName="Gdk.Event">
  <TypeSignature Language="C#" Value="public class Event : GLib.Boxed" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>gdk-sharp</AssemblyName>
    <AssemblyPublicKey>
    </AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>This object contains the fields that are common to all Event classes. Any Gdk.Event* can be safely cast to a Gdk.Event</summary>
    <remarks>This class is equivalent to the GdkEventAny structure in the C API.</remarks>
  </Docs>
  <Base>
    <BaseTypeName>GLib.Boxed</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Event (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of Event, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Gdk.EventType Type { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.EventType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>the type of the event.</summary>
        <returns>the type of the event.</returns>
        <remarks>None.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static GLib.GType GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>GLib.GType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>GType Property.</summary>
        <returns>a <see cref="T:GLib.GType" /></returns>
        <remarks>Returns the native <see cref="T:GLib.GType" /> value for <see cref="T:Gdk.Event" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public virtual IntPtr Handle { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>IntPtr for the unmanaged structure.</summary>
        <returns>The <see cref="T:System.IntPtr" /> to the unmanaged GdkEvent structure.</returns>
        <remarks>This property should rarely if ever need to be accessed.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Window">
      <MemberSignature Language="C#" Value="public Gdk.Window Window { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Gdk.Window</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The window which received the event.</summary>
        <returns>The window which received the event.</returns>
        <remarks>This is a <see cref="T:Gdk.Window" /> not a <see cref="T:Gtk.Window" />.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SendEvent">
      <MemberSignature Language="C#" Value="public bool SendEvent { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>true if the event was sent explicitly (e.g. using XSendEvent).</summary>
        <returns>true if the event was sent explicitly (e.g. using XSendEvent).</returns>
        <remarks>None.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>