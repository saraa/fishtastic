<Type Name="Opaque" FullName="GLib.Opaque">
  <TypeSignature Language="C#" Value="public class Opaque : IWrapper" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>glib-sharp</AssemblyName>
    <AssemblyPublicKey></AssemblyPublicKey>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyCulture>neutral</AssemblyCulture>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the <link location="node:gtk-sharp/programming/threads">Gtk# Thread Programming</link> for details.</ThreadSafetyStatement>
  <Docs>
    <summary>To be added</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="GetOpaque">
      <MemberSignature Language="C#" Value="public static GLib.Opaque GetOpaque (IntPtr o);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>GLib.Opaque</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Used to obtain a CLI typed object associated with a given raw object pointer.</summary>
        <param name="o">an object of type <see cref="T:System.IntPtr" /></param>
        <returns>an object of type <see cref="T:GLib.Opaque" /></returns>
        <remarks>This method is primarily used to wrap object references that are returned by either the signal system or raw class methods that return opaque struct references.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Opaque ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Creates a new <see cref="T:GLib.Opaque" /> instance.</summary>
        <returns>an object of type <see cref="T:GLib.Opaque" /></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Opaque (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="raw">Pointer to the C object.</param>
        <returns>An instance of Opaque, wrapping the C object.</returns>
        <remarks>
          <para>This is an internal constructor, and should not be used by user code.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public virtual IntPtr Handle { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The raw Opaque reference associated with this object.</summary>
        <returns>an object of type <see cref="T:System.IntPtr" /></returns>
        <remarks>Subclasses can use Raw property for read/write access.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Raw">
      <MemberSignature Language="C#" Value="protected IntPtr Raw { set; get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters></Parameters>
      <Docs>
        <summary>The raw Opaque reference associated with this wrapper.</summary>
        <param name="value">an object of type <see cref="T:System.IntPtr" /></param>
        <returns>an object of type <see cref="T:System.IntPtr" /></returns>
        <remarks>Only subclasses of Opaque can access this read/write property.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <summary>To be added</summary>
        <param name="o">a <see cref="T:System.Object" /></param>
        <returns>a <see cref="T:System.Boolean" /></returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calculates a hashing value.</summary>
        <returns>an object of type <see cref="T:System.Int32" /></returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>