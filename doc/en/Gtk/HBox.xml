<Type Name="HBox" FullName="Gtk.HBox">
  <TypeSignature Language="C#" Value="public class HBox : Gtk.Box, Implementor, IWrapper, IWrapper, IDisposable" Maintainer="auto" />
  <AssemblyInfo>
    <AssemblyName>gtk-sharp</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <Attributes />
  </AssemblyInfo>
  <ThreadSafetyStatement>HBox is not a thread safe object</ThreadSafetyStatement>
  <Docs>
    <summary>An HBox is a specific type of <see cref="T:Gtk.Container"/> for packing widgets horizontally.</summary>
    <remarks><para>Other ways of laying out widgets include using a vertical box, (see <see cref="T:Gtk.VBox"/>), a table, (see <see cref="T:Gtk.Table"/>), button boxes, etc.</para>
    <para>
    	Useful methods for manipulating boxes can be found in the superclass for HBox, <see cref="T:Gtk.Box"/>.
    </para>
    </remarks>
  </Docs>
  <Base>
    <BaseTypeName>Gtk.Box</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Atk.Implementor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>GLib.IWrapper</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes />
  <Members>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="protected virtual void Finalize ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Disposes of this widget</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HBox (uint gtype);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="gtype" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <summary>Internal constructor</summary>
        <param name="gtype"></param>
        <returns></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HBox (IntPtr raw);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="raw" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <summary>Used for language bindings only.</summary>
        <param name="raw">A pointer to a GtkHBox, as returned by the Gtk+ C API.</param>
        <returns>A C# Gtk.HBox that wraps the <paramref name="raw"/> parameter.</returns>
        <remarks><para>If you don't already know that you need this constructor, it should not be used.</para></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HBox (bool homogeneous, int spacing);" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters>
        <Parameter Name="homogeneous" Type="System.Boolean" />
        <Parameter Name="spacing" Type="System.Int32" />
      </Parameters>
      <Docs>
        <summary>The main way to create a new HBox.</summary>
        <param name="homogeneous">If <see langword="true"/>, all widgets in the box are forced to be equally sized.</param>
        <param name="spacing">The number of pixels to place between each widget in the box.</param>
        <returns><para>A new HBox</para></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HBox ();" />
      <MemberType>Constructor</MemberType>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Internal constructor, should not be used.</summary>
        <returns></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GType">
      <MemberSignature Language="C#" Value="public static uint GType { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the type of this object, as registered with the GLib object system.</summary>
        <returns><para>A number that uniquely identifies this type in the GLib object system.</para></returns>
        <remarks><para>Mostly for internal use.</para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>