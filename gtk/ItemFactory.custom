// Gtk.ItemFactory.custom - Gtk ItemFactory class customizations
//
// Author: Mike Kestner <mkestner@ximian.com> 
//
// Copyright (C) 2004 Novell, Inc.
//
// This code is inserted after the automatically generated code.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.

		
		[DllImport("libgtk-win32-2.0-0.dll")]
		static extern IntPtr gtk_item_factory_new(IntPtr container_type, IntPtr path, IntPtr accel_group);

		public ItemFactory (GLib.GType container_type, string path, Gtk.AccelGroup accel_group) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (ItemFactory)) {
				CreateNativeObject (new string [0], new GLib.Value [0]);
				Construct (container_type, path, accel_group);
				return;
			}
			IntPtr native = GLib.Marshaller.StringToPtrGStrdup (path);
			Raw = gtk_item_factory_new(container_type.Val, native, (accel_group != null) ? accel_group.Handle : IntPtr.Zero);
			GLib.Marshaller.Free (native);
		}

		[DllImport ("libgtk-win32-2.0-0.dll")]
		static extern void gtk_item_factory_set_translate_func (IntPtr raw, GtkSharp.TranslateFuncNative func, IntPtr data, NativeDestroyNotify notify);

		[Obsolete ("Replaced by SetTranslateFunc (TranslateFunc) overload.")]
		public void SetTranslateFunc (TranslateFunc func, IntPtr data, DestroyNotify notify) 
		{
			SetTranslateFunc (func);
		}

		public void SetTranslateFunc (TranslateFunc func) 
		{
			if (func == null) {
				gtk_item_factory_set_translate_func (Handle, null, IntPtr.Zero, null);
				return;
			}
			GtkSharp.TranslateFuncWrapper func_wrapper = new GtkSharp.TranslateFuncWrapper (func);
			GCHandle gch = GCHandle.Alloc (func_wrapper);
			gtk_item_factory_set_translate_func (Handle, func_wrapper.NativeDelegate, (IntPtr) gch, DestroyHelper.NotifyHandler);
		}

