// Gtk.HTML.custom - Gtk HTML class customizations
//
// Author: Mike Kestner <mkestner@ximian.com> 
//
// Copyright (C) 2004 Novell, Inc.
//
// This code is inserted after the automatically generated code.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of version 2 of the Lesser GNU General 
// Public License as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this program; if not, write to the
// Free Software Foundation, Inc., 59 Temple Place - Suite 330,
// Boston, MA 02111-1307, USA.
		
		[DllImport("gtkhtml-3.0")]
		static extern IntPtr gtk_html_new();

		public HTML () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (HTML)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				Construct (this);
				return;
			}
			Raw = gtk_html_new();
		}

		[DllImport("gtkhtml-3.0")]
		static extern IntPtr gtk_html_new_from_string(IntPtr Astr, int len);

		public HTML (string Astr) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (HTML)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				Construct (this);
				LoadFromString (Astr);
				return;
			}

			IntPtr native = GLib.Marshaller.StringToPtrGStrdup (Astr);
			Raw = gtk_html_new_from_string (native, -1);
			GLib.Marshaller.Free (native);
		}

		public void Write (HTMLStream handle, string buffer, int size)
		{
			Write (handle, buffer, (ulong) size);
		}

